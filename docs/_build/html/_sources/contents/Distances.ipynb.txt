{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "np.warnings.filterwarnings('ignore', category=np.VisibleDeprecationWarning) # Debugging: 'ignore' -> 'error'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "dec3726c929f42de89d77f02de329b93",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import molsysmt as msm\n",
    "from molsysmt import puw\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Getting distances, neighbor lists and contact maps.\n",
    "\n",
    "MolSysMT includes a very versatile method to calculate distances between points in space, atoms and/or groups of atoms. As many other methods of this multitool, the method `molsysmt.distance()` has an input argument to choose the engine in charge of getting the result. For instance, `molsysmt.distance()` currently offers two engines `MolSysMT` and `MDTraj`. At this moment only `MolSysMT` will be reported in this guide.\n",
    "\n",
    "The different options of the method `molsysmt.distance()` will be shown, little by little, along with the following examples."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The XYZ molecular system form\n",
    "\n",
    "The first case, and the most simple one, is getting distances from a points distribution in space. MolSysMT accepts a molecular system form where only spatial coordinates are described, with out topological information: the `XYZ` form."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = np.zeros([6,3], dtype='float64') * puw.unit('nm')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'XYZ'"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.get_form(molecular_system)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The `XYZ` form accepts numpy arrays with length units of the shape $[n\\_frames, n\\_atoms, 3]$ or $[n\\_atoms, 3]$. In case of having an array of rank 2, MolSysMT always understands $n\\_frames=1$ and the first rank as the number of atoms:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 6]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.get(molecular_system, n_frames=True, n_atoms=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets create a couple of `XYZ` molecular systems with more than a frame. These two systems will help us illustrate the firts distance calculations:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Molecular system with three atoms and three frames.\n",
    "\n",
    "molecular_system = np.zeros([3,4,3], dtype='float64') * puw.unit('nm')\n",
    "\n",
    "## First atom\n",
    "molecular_system[0,0,:] = [0, 2, -1] * puw.unit('nm')\n",
    "molecular_system[1,0,:] = [1, 2, -1] * puw.unit('nm')\n",
    "molecular_system[2,0,:] = [0, 2, -1] * puw.unit('nm')\n",
    "\n",
    "## Second atom\n",
    "molecular_system[0,1,:] = [-1, 1, 1] * puw.unit('nm')\n",
    "molecular_system[1,1,:] = [-1, 0, 1] * puw.unit('nm')\n",
    "molecular_system[2,1,:] = [0, 0, 1] * puw.unit('nm')\n",
    "\n",
    "## Third atom\n",
    "molecular_system[0,2,:] = [-2, 0, 1] * puw.unit('nm')\n",
    "molecular_system[1,2,:] = [-2, 0, 0] * puw.unit('nm')\n",
    "molecular_system[2,2,:] = [-1, 1, 0] * puw.unit('nm')\n",
    "\n",
    "## Fourth atom\n",
    "molecular_system[0,3,:] = [-2, -2, -2] * puw.unit('nm')\n",
    "molecular_system[1,3,:] = [0, 0, 0] * puw.unit('nm')\n",
    "molecular_system[2,3,:] = [2, 2, 2] * puw.unit('nm')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Distance between atoms in space\n",
    "\n",
    "### Distance between atoms of a system\n",
    "\n",
    "The first case shows how to get the distance between all points of a system at every frame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The result is an array of rank 3. Where the first axe or rank corresponds to the number of frames and the other two, the second and third axe, accounts for the point or atom indices:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3, 4, 4)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This way every distance between atoms at each frame is stored. Lets print out the distance between the 0-th and the 2-th atom at frame 1-th:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Distance at frame 1-th between atoms 0-th and 2-th: 3.7416573867739413 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('Distance at frame 1-th between atoms 0-th and 2-th: {}'.format(distances[1,0,2]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If only the distance between atoms 0-th and 2-th at every frame is required, there is no need to compute $n\\_atoms x n\\_atoms$ distances. The input arguments `selection` and `selection_2` help us to define the range of elements of the output distance matrix:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=0, selection_2=2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This time the output is an array of rank 3 with shape $[3,1,1]$. The distance for just a pair of atoms was computed for three frames:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3, 1, 1)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Distance at frame 0-th between atoms 0-th and 2-th: 3.4641016151377544 nanometer\n",
      "Distance at frame 1-th between atoms 0-th and 2-th: 3.7416573867739413 nanometer\n",
      "Distance at frame 2-th between atoms 0-th and 2-th: 1.7320508075688772 nanometer\n"
     ]
    }
   ],
   "source": [
    "for ii in range(3):\n",
    "    print('Distance at frame {}-th between atoms 0-th and 2-th: {}'.format(ii,distances[ii,0,0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets try now to get the distance between the atom 1-th and the atoms 0-th and 2-th at every frame:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=1, selection_2=[0,2])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As you will guess, the output matrix is an array of rank three this time with shape $[3,1,2]$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3, 1, 2)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we want now to print out the distance between atoms 1-th and 2-th for frame 0-th:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Distance at frame 0-th between atoms 1-th and 2-th: 1.4142135623730951 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('Distance at frame 0-th between atoms 1-th and 2-th: {}'.format(distances[0,0,1]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The position of each atom in lists `selection` and `selection_2` is used to locate the corresponding distance in the output array. If instead, you want to use the original atom indices to locate a distance, the input argument `output_form='dict'` can help:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=1, selection_2=[0,2], output_form='dict')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This way the output is no longer a numpy array of rank 3, the output object is now a dictionary of dictionaries of dictionaries. Where the set keys of the first dictionary corresponds to the atom indices of `selection_1`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys([1])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The second nested dictionary has the atom indices of `selection_2` as keys:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys([0, 2])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances[1].keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And the third and last nested dictionary is defined with the frame indices as keys:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dict_keys([0, 1, 2])"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances[1][2].keys()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Thus, the distance now between atoms 0-th and 2-th in frame 1-th is:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Distance at frame 0-th between atoms 1-th and 2-th: 1.4142135623730951 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('Distance at frame 0-th between atoms 1-th and 2-th: {}'.format(distances[1][2][0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Just like `selection` and `selection_2` can limit the range of atom indices of the calculation, `frame_indices` can be used to define the list of frames where the method applies:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=1, selection_2=[0,2], frame_indices=[1,2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Distance at frame 2-th between atoms 1-th and 2-th: 1.7320508075688772 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('Distance at frame 2-th between atoms 1-th and 2-th: {}'.format(distances[1,0,1]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "You can check again that with `output_form='dict'` the original indics for atoms and frames work to locate a distance:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=1, selection_2=[0,2], frame_indices=[1,2], output_form='dict')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Distance at frame 2-th between atoms 1-th and 2-th: 1.7320508075688772 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('Distance at frame 2-th between atoms 1-th and 2-th: {}'.format(distances[1][2][2]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Distances between atoms positions in different frames"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "At the end of last subsection we saw how, in addition to the input arguments `selection` and `selection_2`, the input arguments `frame_indices` and `frame_indices_2` alter the way distances are computed. Lets use the four arguments in the next example to revisit their function:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=[1,2], frame_indices=[0,1],\n",
    "                         selection_2=1, frame_indices_2=[1,2])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The distance between atoms 1-th and 2-th, and atom 1-th are computed. But, these distances are not between spatial positions in the same frame index. When two frame indices lists are provided by means of `frame_indices` and `frame_indices_2`, pairs of frames are taken sequentially. In this case positions of `selection` at frame 0-th are confronted againts positions of `selection_2` at frame 1-th, and the results are stored in the first frame of the distances output. Then, according to the last cell frame indices, positions of `selection` at frame 1-th are confronted againts positions of `selection_2` at frame 2-th. Thus, lets print out for example the distance between the position of atom 2-th of `selection` in frame 1-th and the position of atom 1-th of `selection_2` in frame 2-th:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The distance between atom 2-th of selection at frame 1-th and atom 1-th of selection_2 at frame 2-th is: 2.23606797749979 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('The distance between atom 2-th of selection at frame 1-th and atom 1-th of selection_2 at frame 2-th is: {}'.format(distances[1,1,0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this case, when the output object is a dictionary of dictionaries of dictionaries, the last nested keys correspond to the frame indices in `frame_indices`. Lets compute de same distances as before printing out the same specific distance:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=[1,2], frame_indices=[0,1],\n",
    "                         selection_2=1, frame_indices_2=[1,2], output_form='dict')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The distance between atom 2-th of selection at frame 1-th and atom 1-th of selection_2 at frame 2-th is: 2.23606797749979 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('The distance between atom 2-th of selection at frame 1-th and atom 1-th of selection_2 at frame 2-th is: {}'.format(distances[2][1][1]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The possibility to calculate distances between crossing frame indices opens the door to get displacement lengths as it is shown in next subsection."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Displacement distances of atoms"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When both input arguments `frame_indices` and `frame_indices_2` are used over a unique set of atoms of the same molecular system, the distances computed acquired a simple physical meaning: displacements. Lets see the following case:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=1, frame_indices=[0,1], frame_indices_2=[1,2])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The shape of the output object is:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2, 1, 1)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The length of the distance walked by atom 1-th between frames 0-th and 1-th is:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The displacement length of atom 1-th between frames 0-th and 1th is: 1.0 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('The displacement length of atom 1-th between frames 0-th and 1th is: {}'.format(distances[0,0,0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "While the displacement length of the same atom between the next two consecutive frames is:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The displacement length of atom 1-th between frames 1-th and 2-th is: 1.0 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('The displacement length of atom 1-th between frames 1-th and 2-th is: {}'.format(distances[1,0,0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "If we want to get the length distance an atom moves between a fixed frame, 0-th for instance, and the rest of frames we can invoke the command `molsysmt.distance()` this way:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=1, frame_indices=[0,1,2], frame_indices_2=[0,0,0],\n",
    "                         output_form='dict')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The displacement length of atom 1-th between its position at frame 0-th and all other frames is:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The displacement length of atom 1-th between frames 0-th and 0-th is: 0.0 nanometer\n",
      "The displacement length of atom 1-th between frames 0-th and 1-th is: 1.0 nanometer\n",
      "The displacement length of atom 1-th between frames 0-th and 2-th is: 1.4142135623730951 nanometer\n"
     ]
    }
   ],
   "source": [
    "for ii in range(3):\n",
    "    print('The displacement length of atom 1-th between frames 0-th and {}-th is: {}'.format(ii, distances[1][1][ii]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Distance between atoms pairs\n",
    "\n",
    "When the method `molsysmt.distance()` is invoked to calculate the distances between a set of $N$ atoms of `selection` and a set of $M$ atoms of `selection_2`, the result is an object, a numpy array or a dictionary, with $N x M$ distances per frame. Sometimes all these different distances are not needed, but only those between specific atom pairs. These atom pairs can be given by the elements in `selection` and `selection_2` coupled sequantially one to one. This option is activated when the input argument `pairs=True`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=[0,0,1], selection_2=[1,2,2],\n",
    "                         frame_indices=[1,2], pairs=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "When `pairs=True` the shape of the output numpy array is $[n\\_frames, N]$, where $N$ is the number of pairs: [0,1], [0,2] and [1,2], in this case.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2, 3)"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets print out the distance between atoms 0-th and 2-th in frame 1-th:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The distance between the pair of atoms 0-th and 2-th in frame 1-th: 3.7416573867739413 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('The distance between the pair of atoms 0-th and 2-th in frame 1-th: {}'.format(distances[0,1]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The dictionary output form also works for atom pairs in the same way as with `pairs=False`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=[0,0,1], selection_2=[1,2,2],\n",
    "                         frame_indices=[1,2], pairs=True, output_form='dict')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The distance between the pair of atoms 0-th and 2-th in frame 1-th: 3.7416573867739413 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('The distance between the pair of atoms 0-th and 2-th in frame 1-th: {}'.format(distances[0][2][1]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Minimum and Maximum distance\n",
    "\n",
    "Sometimes the minimum and maximum distance between two sets of atoms needs to be obtained. Although this step could be done with the method `molsysmt.distance()` and  a little coding, MolSysMT includes two methods to make it even easier: `molsysmt.minimum_distance()` and `molsysmt.maximum_distance()`. Lets see in the following cells how they work.\n",
    "\n",
    "As first example, lets get the minimum distance between two atoms selection:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "min_pairs, min_distances = msm.minimum_distance(molecular_system)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The result is offered as two numpy arrays: the list of atoms pairs minimizing the distance for each frame, and the corresponding value of the minimum distance (for each frame also)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3, 2)"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_pairs.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0, 0],\n",
       "       [0, 0],\n",
       "       [0, 0]])"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_pairs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0, 0],\n",
       "       [0, 0],\n",
       "       [0, 0]])"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_pairs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3,)"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_distances.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[0.0 0.0 0.0]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>nanometer</td></tr></tbody></table>"
      ],
      "text/latex": [
       "$\\begin{pmatrix}0.0 & 0.0 & 0.0\\end{pmatrix}\\ \\mathrm{nanometer}$"
      ],
      "text/plain": [
       "array([0., 0., 0.]) <Unit('nanometer')>"
      ]
     },
     "execution_count": 46,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_distances"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The minimum distance in frame 2-th is given by atom 0-th and atom 0-th: 0.0 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('The minimum distance in frame 2-th is given by atom {}-th and atom {}-th: {}'.format(min_pairs[2,0], min_pairs[2,1], min_distances[2]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "All input arguments described in previous subsections can also be used with `molsysmt.minimum_distance()` and `molsysmt.maximum_distance()`. Lets see an example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "min_pairs, min_distances = msm.minimum_distance(molecular_system, selection=[0,1,2], selection_2=[0,1,2],\n",
    "                                               frame_indices=[0,1], frame_indices_2=[1,2], pairs=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Remember that with `pairs=True`, the output does not longer refer atoms indices but pairs indices. That is the reason why the shape of min_pairs is now:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2,)"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_pairs.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "While,"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2,)"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Which means that the minimum displacement between consecutive frames was observed for:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Atom 0-th had the minimum displacement of A between frames 0-th and 1-th: 1.0 nanometer\n",
      "Atom 0-th had the minimum displacement of A between frames 1-th and 2-th: 1.0 nanometer\n"
     ]
    }
   ],
   "source": [
    "for ii in range(2):\n",
    "    print('Atom {}-th had the minimum displacement of A between frames {}-th and {}-th: {}'.format(min_pairs[ii], ii, ii+1, min_distances[ii]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There are situations in which we have a list of atoms in `selection` and the minimum distance with a second set of atoms `selection_2` needs to be known for every single atom of the first set. In this case the first set has to be considered not as entity (as set) in view of getting a single minimum distance. Lets illustrate this with an example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "min_pairs, min_distances = msm.minimum_distance(molecular_system, selection=[1,2], frame_indices=[0,1,2],\n",
    "                                                selection_2=[0,1], as_entity_1=False, as_entity_2=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The output corresponds to the minimum distance of atom 1-th of A to any atom of B and the minimum distance of atom 2-th of A to any atom of B, at every frame:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3, 2)"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_pairs.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(3, 2)"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_distances.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Atom 1-th of A has the minimum distance to B with its atom 1-th in frame 1-th: 0.0 nanometer\n"
     ]
    }
   ],
   "source": [
    "selection_2=[0,1]\n",
    "print('Atom 1-th of A has the minimum distance to B with its atom {}-th in frame 1-th: {}'.format(selection_2[min_pairs[1,0]], min_distances[1,0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The 1-th is the closest atom of B to atom 1-th of A at frame 0-th with 0.0 nanometer\n",
      "The 1-th is the closest atom of B to atom 1-th of A at frame 1-th with 0.0 nanometer\n",
      "The 1-th is the closest atom of B to atom 1-th of A at frame 2-th with 0.0 nanometer\n"
     ]
    }
   ],
   "source": [
    "for ii in range(3):\n",
    "    print('The {}-th is the closest atom of B to atom 1-th of A at frame {}-th with {}'.format(selection_2[min_pairs[ii,0]],ii, min_distances[ii,0]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Distance between atom groups in space\n",
    "\n",
    "Imagine the distance between geometric centers of atoms groups needs to be obtained. There is no reason why MolSysMT should have new functions to do that. Every method introduced in the previous section, about getting distances between atoms, has the possibility to do it over groups of atoms.\n",
    "\n",
    "### Distance between atom groups of a system\n",
    "\n",
    "Lets load a new molecular system to illustrate how `molsysmt.distance()` can get distances between atom groups:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.convert('1TCD', 'molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_85e93_\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >form</th>        <th class=\"col_heading level0 col1\" >n_atoms</th>        <th class=\"col_heading level0 col2\" >n_groups</th>        <th class=\"col_heading level0 col3\" >n_components</th>        <th class=\"col_heading level0 col4\" >n_chains</th>        <th class=\"col_heading level0 col5\" >n_molecules</th>        <th class=\"col_heading level0 col6\" >n_entities</th>        <th class=\"col_heading level0 col7\" >n_waters</th>        <th class=\"col_heading level0 col8\" >n_proteins</th>        <th class=\"col_heading level0 col9\" >n_frames</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_85e93_row0_col0\" class=\"data row0 col0\" >molsysmt.MolSys</td>\n",
       "                        <td id=\"T_85e93_row0_col1\" class=\"data row0 col1\" >3983</td>\n",
       "                        <td id=\"T_85e93_row0_col2\" class=\"data row0 col2\" >662</td>\n",
       "                        <td id=\"T_85e93_row0_col3\" class=\"data row0 col3\" >167</td>\n",
       "                        <td id=\"T_85e93_row0_col4\" class=\"data row0 col4\" >4</td>\n",
       "                        <td id=\"T_85e93_row0_col5\" class=\"data row0 col5\" >166</td>\n",
       "                        <td id=\"T_85e93_row0_col6\" class=\"data row0 col6\" >2</td>\n",
       "                        <td id=\"T_85e93_row0_col7\" class=\"data row0 col7\" >165</td>\n",
       "                        <td id=\"T_85e93_row0_col8\" class=\"data row0 col8\" >1</td>\n",
       "                        <td id=\"T_85e93_row0_col9\" class=\"data row0 col9\" >1</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f85b5160d10>"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets revisit how to get the distances between two atoms selections to start with, then the effect of input arguments `group_behavior` and `group_behavior_2` will be shown:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=\"group_index==0\", selection_2=\"group_index==1\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This molecular system has onle a single frame, so the shape of the output array is $[1, n\\_atoms\\_1, n\\_atoms\\_2]$ where $n\\_atoms\\_1$ and $n\\_atoms\\_2$ is the number of atoms in `selection` and `selection_2`, respectively:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9 7\n"
     ]
    }
   ],
   "source": [
    "n_atoms_1 = msm.get(molecular_system, selection=\"group_index==0\", n_atoms=True)\n",
    "n_atoms_2 = msm.get(molecular_system, selection=\"group_index==1\", n_atoms=True)\n",
    "print(n_atoms_1, n_atoms_2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 9, 7)"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, lets use `group_behavior=\"geometric_center\"` to obtain the distance between the geometric center of the set of atoms in `selection` to every atom in `selection_2`."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=\"group_index==0\",\n",
    "                         group_behavior=\"geometric_center\",                         \n",
    "                         selection_2=\"group_index==1\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 1, 7)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And with `group_behavior_2=\"geometric_center\"` the distance between both geometric centers can be obtain:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=\"group_index==0\", group_behavior=\"geometric_center\",\n",
    "                         selection_2=\"group_index==1\", group_behavior_2=\"geometric_center\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 1, 1)"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The input arguments `group_behavior` and `group_behavior_2` allow us to work with a unique position of a group of atoms, either the geometric center or the center of mass. But what happens then if we have several groups of atoms? The arguments `selection` and `selection_2` do work with just a list of atom indices or a selection sentence. Thats why we have to use two new input arguments: `groups_of_atoms` and `groups_of_atoms_2`. Lets define a couple of list of lists of atom indices to illustrate their use."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "list_groups_1 = msm.get(molecular_system, target=\"group\",\n",
    "                        selection=\"group_index in [0,1,2,3]\", atom_index=True)\n",
    "list_groups_2 = msm.get(molecular_system, target=\"group\",\n",
    "                        selection=\"group_index in [4,5,6,7,8]\", atom_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[array([0, 1, 2, 3, 4, 5, 6, 7, 8]) array([ 9, 10, 11, 12, 13, 14, 15])\n",
      " array([16, 17, 18, 19, 20, 21, 22, 23, 24])\n",
      " array([25, 26, 27, 28, 29, 30, 31])]\n"
     ]
    }
   ],
   "source": [
    "print(list_groups_1)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "First, lets compute the distance between every single atom in `selection` to the geometric center of the atoms groups defined in `list_groups_2`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=\"group_index==0\",\n",
    "                         groups_of_atoms_2=list_groups_2, group_behavior_2=\"geometric_center\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 9, 5)"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, the distance between the geometric center of the set of atoms in `selection` and every geometric center of the atoms groups given by `list_groups_2`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=\"group_index==0\",group_behavior=\"geometric_center\",\n",
    "                         groups_of_atoms_2=list_groups_2, group_behavior_2=\"geometric_center\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 1, 5)"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And finnally, the distance between every geometric center of the atoms groups in `list_groups_1` to every geometric center of the atoms groups defined in `list_groups_2`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, groups_of_atoms=list_groups_1, group_behavior=\"geometric_center\",\n",
    "                         groups_of_atoms_2=list_groups_2,  group_behavior_2=\"geometric_center\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 4, 5)"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Just like with atoms, if only a list of atoms groups is used, the distance between its centers is obtained:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, groups_of_atoms=list_groups_1, group_behavior=\"geometric_center\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 4, 4)"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finnally, lets proof that the distance between groups can be computed all along a trajectory as well as only at specific frames. Lets load the whole trajectory 'pentalanine.h5':"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.demo_systems.files['pentalanine.h5']\n",
    "molecular_system = msm.convert(molecular_system, to_form='molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_f4016_\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >form</th>        <th class=\"col_heading level0 col1\" >n_atoms</th>        <th class=\"col_heading level0 col2\" >n_groups</th>        <th class=\"col_heading level0 col3\" >n_components</th>        <th class=\"col_heading level0 col4\" >n_chains</th>        <th class=\"col_heading level0 col5\" >n_molecules</th>        <th class=\"col_heading level0 col6\" >n_entities</th>        <th class=\"col_heading level0 col7\" >n_peptides</th>        <th class=\"col_heading level0 col8\" >n_frames</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_f4016_row0_col0\" class=\"data row0 col0\" >molsysmt.MolSys</td>\n",
       "                        <td id=\"T_f4016_row0_col1\" class=\"data row0 col1\" >62</td>\n",
       "                        <td id=\"T_f4016_row0_col2\" class=\"data row0 col2\" >7</td>\n",
       "                        <td id=\"T_f4016_row0_col3\" class=\"data row0 col3\" >1</td>\n",
       "                        <td id=\"T_f4016_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "                        <td id=\"T_f4016_row0_col5\" class=\"data row0 col5\" >1</td>\n",
       "                        <td id=\"T_f4016_row0_col6\" class=\"data row0 col6\" >1</td>\n",
       "                        <td id=\"T_f4016_row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "                        <td id=\"T_f4016_row0_col8\" class=\"data row0 col8\" >5000</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f85a4a6ea90>"
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_a06b2_\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >index</th>        <th class=\"col_heading level0 col1\" >id</th>        <th class=\"col_heading level0 col2\" >name</th>        <th class=\"col_heading level0 col3\" >type</th>        <th class=\"col_heading level0 col4\" >n atoms</th>        <th class=\"col_heading level0 col5\" >component index</th>        <th class=\"col_heading level0 col6\" >chain index</th>        <th class=\"col_heading level0 col7\" >molecule index</th>        <th class=\"col_heading level0 col8\" >molecule type</th>        <th class=\"col_heading level0 col9\" >entity index</th>        <th class=\"col_heading level0 col10\" >entity name</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_a06b2_row0_col0\" class=\"data row0 col0\" >0</td>\n",
       "                        <td id=\"T_a06b2_row0_col1\" class=\"data row0 col1\" >1</td>\n",
       "                        <td id=\"T_a06b2_row0_col2\" class=\"data row0 col2\" >ACE</td>\n",
       "                        <td id=\"T_a06b2_row0_col3\" class=\"data row0 col3\" >aminoacid</td>\n",
       "                        <td id=\"T_a06b2_row0_col4\" class=\"data row0 col4\" >6</td>\n",
       "                        <td id=\"T_a06b2_row0_col5\" class=\"data row0 col5\" >0</td>\n",
       "                        <td id=\"T_a06b2_row0_col6\" class=\"data row0 col6\" >0</td>\n",
       "                        <td id=\"T_a06b2_row0_col7\" class=\"data row0 col7\" >0</td>\n",
       "                        <td id=\"T_a06b2_row0_col8\" class=\"data row0 col8\" >peptide</td>\n",
       "                        <td id=\"T_a06b2_row0_col9\" class=\"data row0 col9\" >0</td>\n",
       "                        <td id=\"T_a06b2_row0_col10\" class=\"data row0 col10\" >Peptide_0</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                                <td id=\"T_a06b2_row1_col0\" class=\"data row1 col0\" >1</td>\n",
       "                        <td id=\"T_a06b2_row1_col1\" class=\"data row1 col1\" >2</td>\n",
       "                        <td id=\"T_a06b2_row1_col2\" class=\"data row1 col2\" >ALA</td>\n",
       "                        <td id=\"T_a06b2_row1_col3\" class=\"data row1 col3\" >aminoacid</td>\n",
       "                        <td id=\"T_a06b2_row1_col4\" class=\"data row1 col4\" >10</td>\n",
       "                        <td id=\"T_a06b2_row1_col5\" class=\"data row1 col5\" >0</td>\n",
       "                        <td id=\"T_a06b2_row1_col6\" class=\"data row1 col6\" >0</td>\n",
       "                        <td id=\"T_a06b2_row1_col7\" class=\"data row1 col7\" >0</td>\n",
       "                        <td id=\"T_a06b2_row1_col8\" class=\"data row1 col8\" >peptide</td>\n",
       "                        <td id=\"T_a06b2_row1_col9\" class=\"data row1 col9\" >0</td>\n",
       "                        <td id=\"T_a06b2_row1_col10\" class=\"data row1 col10\" >Peptide_0</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                                <td id=\"T_a06b2_row2_col0\" class=\"data row2 col0\" >2</td>\n",
       "                        <td id=\"T_a06b2_row2_col1\" class=\"data row2 col1\" >3</td>\n",
       "                        <td id=\"T_a06b2_row2_col2\" class=\"data row2 col2\" >ALA</td>\n",
       "                        <td id=\"T_a06b2_row2_col3\" class=\"data row2 col3\" >aminoacid</td>\n",
       "                        <td id=\"T_a06b2_row2_col4\" class=\"data row2 col4\" >10</td>\n",
       "                        <td id=\"T_a06b2_row2_col5\" class=\"data row2 col5\" >0</td>\n",
       "                        <td id=\"T_a06b2_row2_col6\" class=\"data row2 col6\" >0</td>\n",
       "                        <td id=\"T_a06b2_row2_col7\" class=\"data row2 col7\" >0</td>\n",
       "                        <td id=\"T_a06b2_row2_col8\" class=\"data row2 col8\" >peptide</td>\n",
       "                        <td id=\"T_a06b2_row2_col9\" class=\"data row2 col9\" >0</td>\n",
       "                        <td id=\"T_a06b2_row2_col10\" class=\"data row2 col10\" >Peptide_0</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                                <td id=\"T_a06b2_row3_col0\" class=\"data row3 col0\" >3</td>\n",
       "                        <td id=\"T_a06b2_row3_col1\" class=\"data row3 col1\" >4</td>\n",
       "                        <td id=\"T_a06b2_row3_col2\" class=\"data row3 col2\" >ALA</td>\n",
       "                        <td id=\"T_a06b2_row3_col3\" class=\"data row3 col3\" >aminoacid</td>\n",
       "                        <td id=\"T_a06b2_row3_col4\" class=\"data row3 col4\" >10</td>\n",
       "                        <td id=\"T_a06b2_row3_col5\" class=\"data row3 col5\" >0</td>\n",
       "                        <td id=\"T_a06b2_row3_col6\" class=\"data row3 col6\" >0</td>\n",
       "                        <td id=\"T_a06b2_row3_col7\" class=\"data row3 col7\" >0</td>\n",
       "                        <td id=\"T_a06b2_row3_col8\" class=\"data row3 col8\" >peptide</td>\n",
       "                        <td id=\"T_a06b2_row3_col9\" class=\"data row3 col9\" >0</td>\n",
       "                        <td id=\"T_a06b2_row3_col10\" class=\"data row3 col10\" >Peptide_0</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                                <td id=\"T_a06b2_row4_col0\" class=\"data row4 col0\" >4</td>\n",
       "                        <td id=\"T_a06b2_row4_col1\" class=\"data row4 col1\" >5</td>\n",
       "                        <td id=\"T_a06b2_row4_col2\" class=\"data row4 col2\" >ALA</td>\n",
       "                        <td id=\"T_a06b2_row4_col3\" class=\"data row4 col3\" >aminoacid</td>\n",
       "                        <td id=\"T_a06b2_row4_col4\" class=\"data row4 col4\" >10</td>\n",
       "                        <td id=\"T_a06b2_row4_col5\" class=\"data row4 col5\" >0</td>\n",
       "                        <td id=\"T_a06b2_row4_col6\" class=\"data row4 col6\" >0</td>\n",
       "                        <td id=\"T_a06b2_row4_col7\" class=\"data row4 col7\" >0</td>\n",
       "                        <td id=\"T_a06b2_row4_col8\" class=\"data row4 col8\" >peptide</td>\n",
       "                        <td id=\"T_a06b2_row4_col9\" class=\"data row4 col9\" >0</td>\n",
       "                        <td id=\"T_a06b2_row4_col10\" class=\"data row4 col10\" >Peptide_0</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                                <td id=\"T_a06b2_row5_col0\" class=\"data row5 col0\" >5</td>\n",
       "                        <td id=\"T_a06b2_row5_col1\" class=\"data row5 col1\" >6</td>\n",
       "                        <td id=\"T_a06b2_row5_col2\" class=\"data row5 col2\" >ALA</td>\n",
       "                        <td id=\"T_a06b2_row5_col3\" class=\"data row5 col3\" >aminoacid</td>\n",
       "                        <td id=\"T_a06b2_row5_col4\" class=\"data row5 col4\" >10</td>\n",
       "                        <td id=\"T_a06b2_row5_col5\" class=\"data row5 col5\" >0</td>\n",
       "                        <td id=\"T_a06b2_row5_col6\" class=\"data row5 col6\" >0</td>\n",
       "                        <td id=\"T_a06b2_row5_col7\" class=\"data row5 col7\" >0</td>\n",
       "                        <td id=\"T_a06b2_row5_col8\" class=\"data row5 col8\" >peptide</td>\n",
       "                        <td id=\"T_a06b2_row5_col9\" class=\"data row5 col9\" >0</td>\n",
       "                        <td id=\"T_a06b2_row5_col10\" class=\"data row5 col10\" >Peptide_0</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                                <td id=\"T_a06b2_row6_col0\" class=\"data row6 col0\" >6</td>\n",
       "                        <td id=\"T_a06b2_row6_col1\" class=\"data row6 col1\" >7</td>\n",
       "                        <td id=\"T_a06b2_row6_col2\" class=\"data row6 col2\" >NME</td>\n",
       "                        <td id=\"T_a06b2_row6_col3\" class=\"data row6 col3\" >aminoacid</td>\n",
       "                        <td id=\"T_a06b2_row6_col4\" class=\"data row6 col4\" >6</td>\n",
       "                        <td id=\"T_a06b2_row6_col5\" class=\"data row6 col5\" >0</td>\n",
       "                        <td id=\"T_a06b2_row6_col6\" class=\"data row6 col6\" >0</td>\n",
       "                        <td id=\"T_a06b2_row6_col7\" class=\"data row6 col7\" >0</td>\n",
       "                        <td id=\"T_a06b2_row6_col8\" class=\"data row6 col8\" >peptide</td>\n",
       "                        <td id=\"T_a06b2_row6_col9\" class=\"data row6 col9\" >0</td>\n",
       "                        <td id=\"T_a06b2_row6_col10\" class=\"data row6 col10\" >Peptide_0</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f85a4d0b690>"
      ]
     },
     "execution_count": 78,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system, target='group')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets represent the distance between the geometric center of the terminal groups vs. the simulation time:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, selection=\"group_index==0\", group_behavior=\"geometric_center\",\n",
    "                         selection_2=\"group_index==6\", group_behavior_2=\"geometric_center\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {},
   "outputs": [],
   "source": [
    "times = msm.get(molecular_system, target=\"system\", time=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/diego/Myopt/miniconda3/envs/MolSysMT_env/lib/python3.7/site-packages/numpy/core/_asarray.py:102: UnitStrippedWarning: The unit of the quantity is stripped when downcasting to ndarray.\n",
      "  return array(a, dtype, copy=False, order=order)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(puw.convert(times, 'nanoseconds'), distances[:,0,0])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or lets just get the distance between the geometric centers of all residues at the 3000-th frame:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "list_groups_1 = msm.get(molecular_system, target=\"group\", selection=\"all\", atom_index=True)\n",
    "distances = msm.distance(molecular_system, groups_of_atoms=list_groups_1, group_behavior=\"geometric_center\",\n",
    "                         frame_indices=3000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 7, 7)"
      ]
     },
     "execution_count": 83,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The distance between geometric_center of group 2-th and group 4-th at frame 3000-th is: 0.6818505282832528 nanometer\n"
     ]
    }
   ],
   "source": [
    "print(\"The distance between geometric_center of group 2-th and group 4-th at frame 3000-th is: {}\".format(distances[0,2,4]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Distances between atom groups positions in different frames"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The method `molsysmt.distance()` works with atom groups just like with only atoms. There are two input arguments to select the coordinates of a set of atoms at two different frames:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.demo_systems.files['pentalanine.h5']\n",
    "molecular_system = msm.convert(molecular_system, to_form='molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_6276b_\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >form</th>        <th class=\"col_heading level0 col1\" >n_atoms</th>        <th class=\"col_heading level0 col2\" >n_groups</th>        <th class=\"col_heading level0 col3\" >n_components</th>        <th class=\"col_heading level0 col4\" >n_chains</th>        <th class=\"col_heading level0 col5\" >n_molecules</th>        <th class=\"col_heading level0 col6\" >n_entities</th>        <th class=\"col_heading level0 col7\" >n_peptides</th>        <th class=\"col_heading level0 col8\" >n_frames</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_6276b_row0_col0\" class=\"data row0 col0\" >molsysmt.MolSys</td>\n",
       "                        <td id=\"T_6276b_row0_col1\" class=\"data row0 col1\" >62</td>\n",
       "                        <td id=\"T_6276b_row0_col2\" class=\"data row0 col2\" >7</td>\n",
       "                        <td id=\"T_6276b_row0_col3\" class=\"data row0 col3\" >1</td>\n",
       "                        <td id=\"T_6276b_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "                        <td id=\"T_6276b_row0_col5\" class=\"data row0 col5\" >1</td>\n",
       "                        <td id=\"T_6276b_row0_col6\" class=\"data row0 col6\" >1</td>\n",
       "                        <td id=\"T_6276b_row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "                        <td id=\"T_6276b_row0_col8\" class=\"data row0 col8\" >5000</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f85822e8690>"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Let see how `frame_indices_1` and `frame_indices_2` works in this context:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system,\n",
    "                         selection=\"group_index==0\", group_behavior=\"geometric_center\",\n",
    "                         frame_indices=100,\n",
    "                         selection_2=\"group_index==6\", group_behavior_2=\"geometric_center\",\n",
    "                         frame_indices_2=200)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 1, 1)"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The physical meaning of this former example is clear but not really useful, unless `selection` is the same as `selection_2` as we can see in the following section."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Displacement distances of atom groups"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The possibility to get the distance between the coordinates of an object at two different frames makes the obtention of atom groups displacements straightforward. Lets plot the distance walked by the 0-th group of the former pentalanine peptide between consecutive frames of the trajectory store in `pentalanine.h5`:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.demo_systems.files['pentalanine.h5']\n",
    "molecular_system = msm.convert(molecular_system, to_form='molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [],
   "source": [
    "n_frames = msm.get(molecular_system, n_frames=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [],
   "source": [
    "all_frame_indices = np.arange(n_frames)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [],
   "source": [
    "displacements = msm.distance(molecular_system, selection=\"group_index==0\", group_behavior=\"geometric_center\",\n",
    "                             frame_indices=all_frame_indices[:-1], frame_indices_2=all_frame_indices[1:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 93,
   "metadata": {},
   "outputs": [],
   "source": [
    "time = msm.get(molecular_system, target='system', frame_indices=all_frame_indices[:-1], time=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 94,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/diego/Myopt/miniconda3/envs/MolSysMT_env/lib/python3.7/site-packages/numpy/core/_asarray.py:102: UnitStrippedWarning: The unit of the quantity is stripped when downcasting to ndarray.\n",
      "  return array(a, dtype, copy=False, order=order)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(puw.convert(time,'ns'), displacements[:,0,0])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Or we can, for instance, get the distance of the center of mass of the whole molecule from the initial configuration to every time step along the trajectory:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [],
   "source": [
    "displacements = msm.distance(molecular_system, selection=\"all\",\n",
    "                             frame_indices=np.zeros(n_frames), frame_indices_2=all_frame_indices)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "metadata": {},
   "outputs": [],
   "source": [
    "time = msm.get(molecular_system, target='system', time=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/diego/Myopt/miniconda3/envs/MolSysMT_env/lib/python3.7/site-packages/numpy/core/_asarray.py:102: UnitStrippedWarning: The unit of the quantity is stripped when downcasting to ndarray.\n",
      "  return array(a, dtype, copy=False, order=order)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(puw.convert(time, 'ns'), displacements[:,0,0])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Distance between atom groups pairs"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets see the following example where all distances betweeen the geometric center of the residues of pentalanine is computed along a short trajectory:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.demo_systems.files['pentalanine.h5']\n",
    "molecular_system = msm.convert(molecular_system, to_form='molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [],
   "source": [
    "list_atom_groups = msm.get(molecular_system, target='group', selection='all', atom_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([array([0, 1, 2, 3, 4, 5]),\n",
       "       array([ 6,  7,  8,  9, 10, 11, 12, 13, 14, 15]),\n",
       "       array([16, 17, 18, 19, 20, 21, 22, 23, 24, 25]),\n",
       "       array([26, 27, 28, 29, 30, 31, 32, 33, 34, 35]),\n",
       "       array([36, 37, 38, 39, 40, 41, 42, 43, 44, 45]),\n",
       "       array([46, 47, 48, 49, 50, 51, 52, 53, 54, 55]),\n",
       "       array([56, 57, 58, 59, 60, 61])], dtype=object)"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list_atom_groups"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, groups_of_atoms=list_atom_groups,\n",
    "                         group_behavior='geometric_center')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5000, 7, 7)"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The method worked needlessly computing the distances between different groups twice, as well as getting the distance between a geometric center to the its self for every residue. This can be avoided thanks to the input argument `pairs=True`. Using `pairs=True`, as it can be seen in the corresponding section about distances of atoms pairs, the distances between atom groups pairs made by consecutive elements of two zipped lists are obtained. Lets see this with a pratical case:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0.vs.1\n",
      "0.vs.2\n",
      "0.vs.3\n",
      "0.vs.4\n",
      "0.vs.5\n",
      "0.vs.6\n",
      "1.vs.2\n",
      "1.vs.3\n",
      "1.vs.4\n",
      "1.vs.5\n",
      "1.vs.6\n",
      "2.vs.3\n",
      "2.vs.4\n",
      "2.vs.5\n",
      "2.vs.6\n",
      "3.vs.4\n",
      "3.vs.5\n",
      "3.vs.6\n",
      "4.vs.5\n",
      "4.vs.6\n",
      "5.vs.6\n"
     ]
    }
   ],
   "source": [
    "from itertools import combinations \n",
    "\n",
    "list_atom_groups_1=[]\n",
    "list_atom_groups_2=[]\n",
    "aux_list_1=[]\n",
    "aux_list_2=[]\n",
    "\n",
    "for ii,jj in combinations(range(7), 2):\n",
    "    print('{}.vs.{}'.format(ii,jj))\n",
    "    aux_list_1.append(ii)\n",
    "    aux_list_2.append(jj)\n",
    "    list_atom_groups_1.append(list_atom_groups[ii])\n",
    "    list_atom_groups_2.append(list_atom_groups[jj])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "metadata": {},
   "outputs": [],
   "source": [
    "distances = msm.distance(molecular_system, groups_of_atoms=list_atom_groups_1, group_behavior='geometric_center',\n",
    "                         groups_of_atoms_2=list_atom_groups_2, group_behavior_2='geometric_center', pairs=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5000, 21)"
      ]
     },
     "execution_count": 105,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets plot the distance of a given pair, 12-th p.e., defined by the groups:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The 12-th pair is made by groups 2-th and 4-th, and its distance along the trajectory is:\n"
     ]
    }
   ],
   "source": [
    "print('The 12-th pair is made by groups {}-th and {}-th, and its distance along the trajectory is:'.format(aux_list_1[12], aux_list_2[12]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/diego/Myopt/miniconda3/envs/MolSysMT_env/lib/python3.7/site-packages/numpy/core/_asarray.py:102: UnitStrippedWarning: The unit of the quantity is stripped when downcasting to ndarray.\n",
      "  return array(a, dtype, copy=False, order=order)\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "time = msm.get(molecular_system, target='system', time=True)\n",
    "plt.plot(puw.convert(time, 'ns'), distances[:,12])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Minimum and Maximum distance of atom groups"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Sometimes the pair of atom groups with the shortest distance between their geometric centers, or centers of mass, needs to be determined. Lets work to illustrate this case with a dimeric protein complex:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.convert('1TCD', 'molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_ab4d3_\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >index</th>        <th class=\"col_heading level0 col1\" >n atoms</th>        <th class=\"col_heading level0 col2\" >n groups</th>        <th class=\"col_heading level0 col3\" >chain index</th>        <th class=\"col_heading level0 col4\" >molecule index</th>        <th class=\"col_heading level0 col5\" >molecule type</th>        <th class=\"col_heading level0 col6\" >entity index</th>        <th class=\"col_heading level0 col7\" >entity name</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_ab4d3_row0_col0\" class=\"data row0 col0\" >0</td>\n",
       "                        <td id=\"T_ab4d3_row0_col1\" class=\"data row0 col1\" >1906</td>\n",
       "                        <td id=\"T_ab4d3_row0_col2\" class=\"data row0 col2\" >248</td>\n",
       "                        <td id=\"T_ab4d3_row0_col3\" class=\"data row0 col3\" >0</td>\n",
       "                        <td id=\"T_ab4d3_row0_col4\" class=\"data row0 col4\" >0</td>\n",
       "                        <td id=\"T_ab4d3_row0_col5\" class=\"data row0 col5\" >protein</td>\n",
       "                        <td id=\"T_ab4d3_row0_col6\" class=\"data row0 col6\" >0</td>\n",
       "                        <td id=\"T_ab4d3_row0_col7\" class=\"data row0 col7\" >TRIOSEPHOSPHATE ISOMERASE</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                                <td id=\"T_ab4d3_row1_col0\" class=\"data row1 col0\" >1</td>\n",
       "                        <td id=\"T_ab4d3_row1_col1\" class=\"data row1 col1\" >1912</td>\n",
       "                        <td id=\"T_ab4d3_row1_col2\" class=\"data row1 col2\" >249</td>\n",
       "                        <td id=\"T_ab4d3_row1_col3\" class=\"data row1 col3\" >1</td>\n",
       "                        <td id=\"T_ab4d3_row1_col4\" class=\"data row1 col4\" >0</td>\n",
       "                        <td id=\"T_ab4d3_row1_col5\" class=\"data row1 col5\" >protein</td>\n",
       "                        <td id=\"T_ab4d3_row1_col6\" class=\"data row1 col6\" >0</td>\n",
       "                        <td id=\"T_ab4d3_row1_col7\" class=\"data row1 col7\" >TRIOSEPHOSPHATE ISOMERASE</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f85821ea190>"
      ]
     },
     "execution_count": 109,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system, target='component', selection='molecule_type==\"protein\"')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets find out the closest pairs of distance from different components:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [],
   "source": [
    "atoms_groups_component_0 = msm.get(molecular_system, target='group',\n",
    "                                   selection='component_index==0', atom_index=True)\n",
    "atoms_groups_component_1 = msm.get(molecular_system, target='group',\n",
    "                                   selection='component_index==1', atom_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "metadata": {},
   "outputs": [],
   "source": [
    "min_pairs, min_distances = msm.minimum_distance(molecular_system,\n",
    "                                                groups_of_atoms=atoms_groups_component_0,\n",
    "                                                group_behavior='geometric_center',\n",
    "                                                groups_of_atoms_2=atoms_groups_component_1,\n",
    "                                                group_behavior_2='geometric_center')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "There is a single frame in our molecular system, thats why the shape of the numpy array with the pair of groups is the following:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 2)"
      ]
     },
     "execution_count": 112,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_pairs.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Where the indices found in min_pairs correspond to the n-th and m-th atoms group of the first list and the second list respectively:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 113,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([69, 12])"
      ]
     },
     "execution_count": 113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_pairs[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "group_index_in_component_0 = msm.get(molecular_system, target='group',\n",
    "                                     selection='component_index==0', index=True)[69]\n",
    "group_index_in_component_1 = msm.get(molecular_system, target='group',\n",
    "                                     selection='component_index==1', index=True)[12]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_3539a_\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >index</th>        <th class=\"col_heading level0 col1\" >id</th>        <th class=\"col_heading level0 col2\" >name</th>        <th class=\"col_heading level0 col3\" >type</th>        <th class=\"col_heading level0 col4\" >n atoms</th>        <th class=\"col_heading level0 col5\" >component index</th>        <th class=\"col_heading level0 col6\" >chain index</th>        <th class=\"col_heading level0 col7\" >molecule index</th>        <th class=\"col_heading level0 col8\" >molecule type</th>        <th class=\"col_heading level0 col9\" >entity index</th>        <th class=\"col_heading level0 col10\" >entity name</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_3539a_row0_col0\" class=\"data row0 col0\" >69</td>\n",
       "                        <td id=\"T_3539a_row0_col1\" class=\"data row0 col1\" >73</td>\n",
       "                        <td id=\"T_3539a_row0_col2\" class=\"data row0 col2\" >GLY</td>\n",
       "                        <td id=\"T_3539a_row0_col3\" class=\"data row0 col3\" >aminoacid</td>\n",
       "                        <td id=\"T_3539a_row0_col4\" class=\"data row0 col4\" >4</td>\n",
       "                        <td id=\"T_3539a_row0_col5\" class=\"data row0 col5\" >0</td>\n",
       "                        <td id=\"T_3539a_row0_col6\" class=\"data row0 col6\" >0</td>\n",
       "                        <td id=\"T_3539a_row0_col7\" class=\"data row0 col7\" >0</td>\n",
       "                        <td id=\"T_3539a_row0_col8\" class=\"data row0 col8\" >protein</td>\n",
       "                        <td id=\"T_3539a_row0_col9\" class=\"data row0 col9\" >0</td>\n",
       "                        <td id=\"T_3539a_row0_col10\" class=\"data row0 col10\" >TRIOSEPHOSPHATE ISOMERASE</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                                <td id=\"T_3539a_row1_col0\" class=\"data row1 col0\" >260</td>\n",
       "                        <td id=\"T_3539a_row1_col1\" class=\"data row1 col1\" >15</td>\n",
       "                        <td id=\"T_3539a_row1_col2\" class=\"data row1 col2\" >CYS</td>\n",
       "                        <td id=\"T_3539a_row1_col3\" class=\"data row1 col3\" >aminoacid</td>\n",
       "                        <td id=\"T_3539a_row1_col4\" class=\"data row1 col4\" >6</td>\n",
       "                        <td id=\"T_3539a_row1_col5\" class=\"data row1 col5\" >1</td>\n",
       "                        <td id=\"T_3539a_row1_col6\" class=\"data row1 col6\" >1</td>\n",
       "                        <td id=\"T_3539a_row1_col7\" class=\"data row1 col7\" >0</td>\n",
       "                        <td id=\"T_3539a_row1_col8\" class=\"data row1 col8\" >protein</td>\n",
       "                        <td id=\"T_3539a_row1_col9\" class=\"data row1 col9\" >0</td>\n",
       "                        <td id=\"T_3539a_row1_col10\" class=\"data row1 col10\" >TRIOSEPHOSPHATE ISOMERASE</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f858227f990>"
      ]
     },
     "execution_count": 115,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system, target='group', indices=[group_index_in_component_0,\n",
    "                                                    group_index_in_component_1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And the corresponding minimum distance between both residues from the two components is:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "0.38221311908773786 nanometer"
      ],
      "text/latex": [
       "$0.38221311908773786\\ \\mathrm{nanometer}$"
      ],
      "text/plain": [
       "0.38221311908773786 <Unit('nanometer')>"
      ]
     },
     "execution_count": 116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "min_distances[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "On the other hand, if the maximum distance needs to be obtained, the method to be used is `molsysmt.maximum_distance()`. Lets show how this method works with a short trajectory of the pentalanine peptide."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.demo_systems.files['pentalanine.h5']\n",
    "molecular_system = msm.convert(molecular_system, to_form='molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_703f9_\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >form</th>        <th class=\"col_heading level0 col1\" >n_atoms</th>        <th class=\"col_heading level0 col2\" >n_groups</th>        <th class=\"col_heading level0 col3\" >n_components</th>        <th class=\"col_heading level0 col4\" >n_chains</th>        <th class=\"col_heading level0 col5\" >n_molecules</th>        <th class=\"col_heading level0 col6\" >n_entities</th>        <th class=\"col_heading level0 col7\" >n_peptides</th>        <th class=\"col_heading level0 col8\" >n_frames</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_703f9_row0_col0\" class=\"data row0 col0\" >molsysmt.MolSys</td>\n",
       "                        <td id=\"T_703f9_row0_col1\" class=\"data row0 col1\" >62</td>\n",
       "                        <td id=\"T_703f9_row0_col2\" class=\"data row0 col2\" >7</td>\n",
       "                        <td id=\"T_703f9_row0_col3\" class=\"data row0 col3\" >1</td>\n",
       "                        <td id=\"T_703f9_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "                        <td id=\"T_703f9_row0_col5\" class=\"data row0 col5\" >1</td>\n",
       "                        <td id=\"T_703f9_row0_col6\" class=\"data row0 col6\" >1</td>\n",
       "                        <td id=\"T_703f9_row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "                        <td id=\"T_703f9_row0_col8\" class=\"data row0 col8\" >5000</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f85a4940510>"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The trajectory has 5000 frames. Lets see, for each frame, whats the pair of residues with the longest distance between their geometric centers:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [],
   "source": [
    "list_atom_groups = msm.get(molecular_system, target='group', selection='all', atom_index=True)\n",
    "max_pairs, max_distances = msm.maximum_distance(molecular_system, groups_of_atoms=list_atom_groups,\n",
    "                                                group_behavior='geometric_center')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This time we have 5000 pairs of group, one for each frame; and 5000 maximum distances:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5000, 2)"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max_pairs.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0, 6],\n",
       "       [0, 6],\n",
       "       [0, 6],\n",
       "       ...,\n",
       "       [0, 6],\n",
       "       [2, 6],\n",
       "       [2, 6]])"
      ]
     },
     "execution_count": 121,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max_pairs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[1.4298022125781427 1.5060004722702336 1.6863101013212674 ...<br> 1.8300611459902283 1.2458154349050328 1.392606254657962]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>nanometer</td></tr></tbody></table>"
      ],
      "text/latex": [
       "$\\begin{pmatrix}1.4298022125781427 & 1.5060004722702336 & 1.6863101013212674 & 1.89341918808217 & 1.1024484644691859 & 0.9249814713930863 & 0.8888898926800729 & 1.0229242145029689 & 0.9609540065450781 & 0.8911403223760836 & 0.8291672838663332 & 0.8148359397458627 & 0.8993172850546325 & 0.9244076377178028 & 1.0283987667571515 & 1.0350444792590712 & 1.1986305962234753 & 1.1764120086860177 & 1.1844748989767644 & 1.7794194493329931 & 1.3417264959404327 & 1.3523959275806012 & 1.5276405572105245 & 1.2604908890264386 & 1.2008248636277465 & 1.4387432161801306 & 1.2608331074159607 & 2.0676871586133743 & 2.021377157863496 & 1.9146173931952226 & 1.8299977138706698 & 1.496858172183875 & 1.7748612594810815 & 1.8067589310847672 & 1.2593955023999015 & 1.9581879627730696 & 2.0383139183068613 & 1.7382122133059983 & 2.06877762300261 & 1.5548909940280469 & 1.891539417339944 & 1.9164604865386874 & 1.7995248658296832 & 1.7443537164772414 & 1.6230337539340463 & 1.5633389620281257 & 1.3648248139028551 & 1.5074445452833825 & 1.0205515596449855 & 1.1397443537618999 & 1.6010362718755637 & 1.7688382024716682 & 0.997482229739601 & 1.487679556369231 & 0.8396056048240896 & 1.0617324827338432 & 1.2024649032739632 & 0.8498421199169809 & 0.9098479148117887 & 0.9508158327489693 & 0.9538226243573392 & 0.9018081215878136 & 1.0243051646067907 & 1.1847857642557733 & 1.7511162584427613 & 1.9619428245276334 & 1.8543181274935177 & 2.050412795821831 & 1.6926562716177151 & 1.9582310520358677 & 1.4417354554293436 & 1.680339051007751 & 1.8261491313878482 & 1.3149722259870085 & 1.5983844752467335 & 1.5438767746461106 & 0.9350832369649138 & 1.0061406973461526 & 1.030211675267764 & 0.9489696698467133 & 1.8549885003828182 & 1.9140741217368455 & 2.045154861076695 & 1.565607412927414 & 1.733771965214666 & 1.6922230739702044 & 1.8054625923805037 & 1.862321621303693 & 1.878208782421661 & 1.794286647714689 & 1.4604433020744507 & 1.9426831129267856 & 1.9850620268403862 & 1.928717978478713 & 2.031098999627133 & 1.9880260388142807 & 1.7012034898625796 & 1.932230695232169 & 1.8497206349085433 & 1.9517389802398841 & 1.9998866849668562 & 1.8680153594986393 & 1.8606541938813448 & 2.1081973190373904 & 1.8593183153849377 & 1.4706020267092688 & 1.8576852019379508 & 1.9325181113375136 & 1.0477466509547244 & 1.2383528165110769 & 1.0666774212154828 & 1.0813231239349856 & 1.0725760993671303 & 1.454722696856192 & 1.773091324186941 & 1.8572569991732852 & 1.793845879601145 & 1.9965900604104425 & 1.9740598969758671 & 1.357819584388836 & 1.9804811308585824 & 1.715322081938325 & 1.651893296033066 & 1.8558095280022462 & 1.90447974109736 & 1.7452381847201934 & 1.921440558065663 & 2.023308894299242 & 1.8599038161831305 & 1.8296632209194412 & 1.9053912888230424 & 1.8390028110616632 & 1.709498156788371 & 1.4707409960244988 & 1.837857335826305 & 1.2687488151019242 & 1.5492460393976328 & 1.3188471509468433 & 0.9985866690829475 & 1.7589007983761724 & 1.792183746572853 & 1.5679486118140264 & 1.9402090741337323 & 1.9931379131982634 & 1.9568137931460687 & 1.9739764906635673 & 1.6053168338371004 & 1.9150876241862829 & 1.6552235256438466 & 1.7337149501357068 & 1.2797181478853035 & 1.4454374823829421 & 1.4168616390299793 & 1.0682837897759399 & 1.1664376915179515 & 1.2998444842912962 & 1.8368961686824532 & 1.7887777188849603 & 1.636487229585043 & 1.5124627090022713 & 1.9672988113449261 & 1.7803282864679117 & 1.5769514979335457 & 1.5919783986818368 & 1.4931492461647677 & 1.600275700490925 & 1.2900707147973556 & 1.3990565687232026 & 0.9869705634208192 & 1.611421480794232 & 1.1828727820125708 & 1.5054552300295387 & 1.2322996608160295 & 1.4256434381236365 & 1.4149644973150324 & 1.3504102035932883 & 1.7273179607989666 & 1.6910116227563525 & 1.634336437517111 & 1.8134888164669192 & 1.6772485719393073 & 2.0889392180135626 & 1.8959007089293607 & 1.6210723571285404 & 2.0273478265951037 & 1.8350420714355895 & 1.868878452467363 & 2.036717319406568 & 1.4376057901159025 & 2.0510763011154753 & 2.009407443199036 & 1.9397891132057348 & 1.7584638001115551 & 1.613469560310754 & 1.588182926534966 & 1.4527935895838067 & 1.6597912122955774 & 1.2324296016837262 & 1.0885193422069244 & 1.2276449332014303 & 1.6644668227837727 & 1.573595563550515 & 1.953035313881006 & 1.851690916640088 & 1.4259800214504688 & 1.2382839368848686 & 1.55274795634259 & 1.617908566054678 & 1.8299793005291412 & 1.5522027159753689 & 1.7817734384887371 & 1.570508106594292 & 1.56010146911995 & 1.7183516687033782 & 1.5724364553835986 & 1.4673721154647665 & 1.3886259997532515 & 1.844176393196457 & 1.7047763200223403 & 1.8477485750539362 & 1.7031578551713253 & 1.9425062235093233 & 1.6425822049641228 & 1.7568445530572714 & 1.6643594267218338 & 1.3857968354394419 & 1.6436303877973661 & 1.0943405685732595 & 1.4936396698393852 & 1.647105630599356 & 1.7725837810696747 & 1.6109913637171978 & 1.3726889581664343 & 0.9112943400935088 & 1.108008072935322 & 1.4025355736979448 & 1.2858524885519333 & 1.7159599831339425 & 1.197759537532686 & 1.269682613328773 & 1.3946042549493358 & 1.8892071381324715 & 1.9402618173295714 & 1.4568825657379298 & 1.4939608652799456 & 1.646808053477437 & 1.712499427220713 & 1.4773533206352432 & 1.9602085530539288 & 1.8372962565443058 & 1.8204659576233275 & 1.687411500191045 & 1.4982086507052366 & 1.4673326516939451 & 1.727466537747594 & 1.5136135866612979 & 1.1513442090948518 & 1.248713228696325 & 1.0220861416962534 & 1.0493105504412013 & 1.12257956255951 & 1.1692279557177165 & 1.1545506382901989 & 1.5049065827109214 & 0.930585392819332 & 1.0248088637771342 & 0.7535761586125402 & 0.8221532284549469 & 0.8666352329066026 & 0.8378710949455054 & 0.9825125524244159 & 0.9367299131372713 & 0.9714511611241969 & 1.0544212463634555 & 0.9471498417895613 & 0.9633678954517647 & 0.9924108176998024 & 0.8443560094641928 & 1.0312738011099392 & 1.080948660054879 & 0.8170329644575188 & 0.980466899735718 & 1.1651930689383696 & 0.8924594914005767 & 1.0394926535298996 & 1.1021121803946947 & 0.8031263279405014 & 0.9591907287568119 & 0.9513087926055913 & 0.8345177012770081 & 1.1963859461511543 & 0.8819620092577822 & 0.8372331214368801 & 0.8147559667963933 & 0.9228943732266405 & 0.8894665332686282 & 0.9043889220833948 & 0.8124717903920945 & 0.8350915142920757 & 0.8627344614908451 & 1.1466307689427213 & 1.1167706852398096 & 1.3793549978040007 & 1.8385073140068555 & 1.3239876269006574 & 1.9857927072785724 & 1.9219180256873476 & 1.9233688258484483 & 1.5153992414546709 & 1.6597656268556285 & 1.2899498942080585 & 1.550556295442636 & 1.3691098734974134 & 1.5787857069539322 & 1.9455693213419933 & 1.803012449652147 & 1.8404265016328594 & 2.011147841522808 & 1.896236473128212 & 1.8294394728354564 & 1.768572220355012 & 1.4970081102416954 & 1.4209756572200083 & 1.9733037512190519 & 0.9809299331492657 & 1.1193037925729115 & 1.6142616747818073 & 1.655799708946922 & 1.5013591270001303 & 1.1958914111141055 & 1.3927654349981782 & 1.800472008565995 & 1.9939021852087515 & 1.4981630553377723 & 1.4856760182376454 & 1.4557747343570837 & 1.700116783069706 & 1.362559770035926 & 1.766150755842729 & 1.6791181594189573 & 1.424520068737047 & 1.424197563224497 & 1.6380014571700234 & 1.8641173576580086 & 1.7722690885310366 & 1.7591231666285365 & 1.7115818654326616 & 1.835650187052202 & 1.8385828463026108 & 1.5877609045279093 & 1.7019164796867798 & 1.5469038116430778 & 1.6114657189203592 & 1.7762029484491868 & 1.6677517063345202 & 1.5373936446083847 & 1.6690377385503568 & 1.643150620295897 & 1.542356097073081 & 1.1370718908197242 & 1.5042689481063776 & 1.8295190921903801 & 1.8935495817980879 & 1.9734759503099046 & 1.7551478862370051 & 1.5739648237496342 & 1.8371275285867883 & 1.903977699703824 & 1.57412347858478 & 1.5779541893644806 & 1.6237495205726482 & 1.9984319955276049 & 1.5415316440797397 & 1.116087867396664 & 0.9963476332262423 & 1.0213411981001366 & 0.9742408722609008 & 1.1927889133485376 & 1.8219498381111972 & 1.799341289133761 & 1.8533396330406684 & 1.866006495572513 & 1.4678501105844857 & 1.8029042417711953 & 1.902752484336002 & 1.8845934184382924 & 1.9615738208935285 & 1.698794916428549 & 1.7446125670355224 & 1.4761689704830772 & 1.7369100084903093 & 1.4888847774441762 & 1.251826608659578 & 1.705858338581383 & 1.7231515745748467 & 2.0393926751871088 & 1.5693969929404588 & 1.8882445579175717 & 1.7277097205647316 & 1.5617120036895809 & 1.819121696447359 & 1.7578643109115029 & 1.5453599361179526 & 1.4051405681071767 & 1.4416278415844177 & 1.4267958714653632 & 1.2255132581968762 & 1.589194252057732 & 1.7318716662687434 & 2.0877144933666227 & 1.951098953189986 & 2.111004365375758 & 1.9235432072217293 & 1.3786217676361907 & 1.7921640830498495 & 1.4019104937344922 & 1.0884418257784751 & 1.0722583767095883 & 1.1776669763282765 & 1.1490762998270898 & 1.003377984480056 & 1.1624891283440597 & 1.050397880987464 & 1.1563116285812836 & 1.2005965017242661 & 0.9331345318753668 & 0.8777676649248511 & 1.1451374546119195 & 1.1298694000958929 & 1.058572282995654 & 1.1383985796703986 & 1.2158792856362988 & 1.1047384223940675 & 1.1567107696533685 & 1.0344823629462336 & 0.9022857228421096 & 0.9456329345115476 & 1.644978835237994 & 1.295929199595584 & 1.2802169685717426 & 1.8401048023024114 & 1.525583666001599 & 1.4945976864722195 & 1.5712274534671304 & 1.359523740001155 & 1.2328310574271302 & 1.0823790555459372 & 1.0471603051730223 & 1.3889646635710426 & 0.984127363895031 & 1.0142240063379684 & 0.9288753496962046 & 1.123099873397277 & 1.0025081893700079 & 1.213741856606084 & 1.1609784478977974 & 1.0643080805747933 & 1.344216393453032 & 1.3031050501607255 & 1.890844819589769 & 1.6320533684240106 & 1.7249349672456453 & 1.0183771545109213 & 1.0774913315819952 & 1.4657435991884407 & 1.5943235768256943 & 1.8128837690986275 & 1.5723945260046999 & 1.7799370820998384 & 1.3323233673055797 & 1.9086889503719402 & 1.4634781821663052 & 1.183921402445725 & 1.439291876512236 & 1.2136263129160887 & 0.9576315784344536 & 1.4578388441555834 & 1.541860423974587 & 1.8337942704236216 & 1.5688668155825918 & 1.5190632265764796 & 1.5928373895471046 & 1.633486557722109 & 1.5870037873960463 & 1.7975146553231693 & 1.2172161915585828 & 1.4086492657789955 & 2.008632051578649 & 1.8369522678857917 & 1.9469695699510485 & 1.836966460085683 & 1.714743959234661 & 1.450761748778635 & 1.4740956217149837 & 1.6249602723490961 & 1.21344829633421 & 1.8287868686368964 & 1.4785414945851072 & 2.049734805146944 & 1.7828350100793111 & 2.0379834435857287 & 1.9419221088608576 & 1.4872975329121283 & 2.054699932379859 & 1.701338768819637 & 1.6686729364547956 & 1.49605118377852 & 1.8899238999632573 & 1.8544343103898646 & 1.7037024727561996 & 1.2135976052683937 & 1.0239785966588169 & 1.1354417160380332 & 1.0399629787675124 & 0.9936694035728091 & 0.787668247862776 & 0.822537888322773 & 0.9260055272338591 & 0.8719161922163773 & 1.1490247064955115 & 1.018718044917669 & 0.9741908314527887 & 1.022530403714393 & 0.9722547642681234 & 0.929697900044377 & 1.0909311084165183 & 1.0527429977401441 & 1.0068843429358896 & 0.7853265151298463 & 0.8922434281295487 & 0.852693717235626 & 0.7986658908559996 & 0.8867352295718172 & 0.844604512874397 & 0.9699667986772434 & 1.0076068238038396 & 0.8767643558787025 & 0.9744611865965193 & 0.977632097171643 & 1.239859286000065 & 0.9238025931348196 & 0.9611465395366416 & 0.8959066213560822 & 0.9617705469250292 & 0.8493155721335159 & 0.9611968512585266 & 0.8146154051606217 & 1.0722531764069143 & 0.8655437822505958 & 1.0106152834030737 & 0.9795424935984803 & 1.0585730359654726 & 1.0987869996442172 & 1.1031844224665335 & 0.8733229234770598 & 0.8653742117582338 & 0.8735743754098234 & 0.8911632717257424 & 0.898809189895053 & 0.9516506299402202 & 0.8996627572653976 & 0.8892155358781261 & 0.9252956451656726 & 0.8604801455313761 & 0.8032747441703669 & 0.883800097716612 & 0.8668492656956069 & 0.8738311524528279 & 0.8461399397770385 & 0.9314512223641838 & 0.9372999481954345 & 0.9810408238877111 & 0.9924091884235762 & 1.3138623955709094 & 1.2662396253795587 & 1.6830597209407538 & 1.7543137063981327 & 1.6231019722360567 & 1.4487983433297655 & 1.4596444663185857 & 1.058516560765687 & 1.4092854552296001 & 1.7397610603878457 & 2.0030695380770007 & 1.895378841935069 & 1.5504297260274795 & 1.9348940739930909 & 1.878874677934827 & 1.6637694197731157 & 1.2933456337217835 & 1.4689254544093524 & 1.3962328930641574 & 1.9020034758780517 & 2.0331285768086995 & 2.068094086627026 & 1.928428357118262 & 1.3359229517947757 & 1.1190942787676874 & 1.2556335335452617 & 1.8277862047323965 & 1.4468498914979646 & 1.4038002648278778 & 1.4194487968199583 & 1.7205231250378192 & 0.9747771121454974 & 1.0194707709758406 & 1.131718794675816 & 1.096475177624125 & 1.0257211857881008 & 0.9248685612116864 & 1.3633076223788874 & 1.1818788687597215 & 1.1124228430598164 & 1.2260665553983419 & 1.1920203733926016 & 1.1234840941754467 & 1.0581563231370703 & 1.5058894852422897 & 1.3954704076337792 & 1.4610207389897094 & 1.5943478115504799 & 1.530699433216664 & 1.4651261229105124 & 1.3545769692490568 & 1.5150086250909929 & 1.8032956779163154 & 1.777583733179987 & 1.092819610039235 & 0.9515108444314958 & 1.0571096605528287 & 1.6407629291246089 & 1.6869578238571443 & 0.9195825500373922 & 1.0751309065431307 & 1.0185581173577256 & 1.1550052186094613 & 1.4576892513958557 & 1.119966822828309 & 1.3818213816802136 & 1.9491807847864164 & 1.778533737432763 & 1.9575347184491545 & 1.8766145574373625 & 1.909786318567165 & 1.770611829541378 & 1.8691449322120177 & 1.6250122462837775 & 1.8532804235315934 & 1.5651528528133605 & 1.6836568716444211 & 1.8534010187704133 & 1.7879065262657585 & 1.8221181366967725 & 1.7347885290145422 & 1.3153355855946418 & 1.30529836979887 & 0.9433836799429662 & 1.0792940380122902 & 1.0187953030338117 & 1.1224405092097853 & 1.0590987522626152 & 1.0256958451897793 & 1.0989970680893486 & 1.0559801256537615 & 0.967747274243869 & 1.1447678514358421 & 0.9759438233694999 & 1.015585389263557 & 1.6991686856775872 & 2.0658734345933167 & 1.8785015146650657 & 1.561824906725151 & 1.6492023358996135 & 1.9496012124613868 & 1.94839483458698 & 1.9053741959414827 & 1.7412354577007982 & 1.90711032749822 & 1.6430687755686506 & 1.5915928755871767 & 1.6643629711923902 & 1.76691620279562 & 1.8186346684211074 & 1.7777185988119357 & 1.7825549252256698 & 1.6110468342703057 & 1.6619602358268786 & 1.8716527065215076 & 1.5205461547199963 & 1.756242344480706 & 1.733620478769065 & 1.6544305230592538 & 1.6279086265578675 & 1.7300266299498643 & 1.716606857622427 & 1.576073372917781 & 1.9334926915084443 & 1.675956569552323 & 2.0107498460907167 & 1.3619788072067212 & 1.8646318303233809 & 1.8568650141671346 & 1.9259637614765561 & 1.9527512281139074 & 1.8448223604223406 & 1.9338021355259676 & 1.882417965173119 & 1.6321854457241005 & 1.3764763150965307 & 1.1403463732343082 & 1.0585435901521794 & 1.2024653867304924 & 1.1826226698238995 & 1.3443731968562422 & 1.55579872601069 & 1.148408664659314 & 1.4711450773924624 & 1.1470282880487 & 1.0577114905606348 & 1.2934918315150166 & 1.8974671221206714 & 2.0197535665462483 & 1.753287107214891 & 1.4485584604735078 & 1.4979940713692335 & 1.5110018569017005 & 1.709004549884359 & 1.7032828974284264 & 1.924436073371948 & 1.3320517938366219 & 1.1968628396954455 & 1.2182868270505145 & 1.6703082288287612 & 1.84751828486995 & 1.0436422563156473 & 1.1946697686657728 & 1.096112245061576 & 0.911034397839571 & 1.0657297792132234 & 1.0604501193734266 & 1.222439705872492 & 1.1194119993105087 & 1.122003621335986 & 1.1802204128227487 & 1.1127845788349675 & 0.9385248444335732 & 1.1481133372869177 & 1.0345606722360419 & 1.1165702816796887 & 0.9245873275029792 & 1.0049286631227297 & 1.0083369702170948 & 1.2976287468646321 & 0.9987735446513013 & 1.6315581346963028 & 1.2288131834479523 & 0.8945511222422977 & 1.0084857483499088 & 0.8500043038176508 & 0.9077453066162808 & 0.9318028684459551 & 1.0509104778006717 & 1.7003494897610354 & 1.8099934615370663 & 1.7252024580668992 & 1.6470324078988101 & 1.3892259142046783 & 1.8074107026437782 & 1.708580490146286 & 1.7270633854317823 & 1.6679241148801138 & 0.9298412392721676 & 0.8112478160376785 & 0.9643090870500935 & 0.8090205771956552 & 0.9219204716217798 & 1.1860760212830623 & 1.0941389404268735 & 1.1676846728501904 & 1.1824858402715133 & 1.098587619276681 & 1.1041511341572514 & 1.1566617935919368 & 0.7615367938598864 & 0.801950556813513 & 1.2203498132700736 & 1.5572180252453682 & 1.4090036337664467 & 1.0551321446768445 & 1.2259018274986453 & 0.8954582541972499 & 0.8152477052130733 & 0.7607645741957644 & 0.8266182465966522 & 1.070305198196379 & 0.932350145103017 & 0.8665497400085208 & 0.8084784686613063 & 0.8722336151176412 & 1.2118230358426185 & 1.4309650346054288 & 1.253002296140632 & 1.6094813461380983 & 1.748688165762781 & 1.9241677773179309 & 1.823129596987857 & 1.8863476139276278 & 1.8391284362889564 & 1.520349904424266 & 1.584319778432971 & 1.5328236900397094 & 1.4189046016009805 & 1.6167275496005868 & 1.621281149060068 & 1.1632204421852759 & 1.2713689210659243 & 1.2087544578140765 & 1.4941543828800272 & 1.4977045442175942 & 1.3889548779071388 & 1.4994900588825228 & 1.4102089616022315 & 1.1585347277544475 & 1.6886402832616714 & 1.3515159068448286 & 1.3161767656514083 & 1.4540363665815925 & 1.3159279490742288 & 1.9058685343914763 & 1.3834427903612287 & 1.8029323005102467 & 1.649337197387095 & 1.8852371156492302 & 1.7980741834599672 & 1.6379023638872496 & 1.7284616572355882 & 1.4341481635170432 & 1.0407888163343506 & 1.7965807324191425 & 1.6590379782764462 & 1.5118020872985476 & 1.9459009219575638 & 1.7231408431637807 & 1.4235943525064336 & 1.6151063062237072 & 1.0838039004063325 & 1.3551973944565576 & 1.5374661257227638 & 1.6794374940395584 & 1.5595328717735129 & 1.6151076438393632 & 1.68570890615398 & 1.157603226867496 & 1.4016539388395473 & 1.5433555214275627 & 1.64748266443688 & 2.012802418741972 & 1.9439181470960827 & 1.6981917575488485 & 1.2523712237493918 & 1.4222783714855 & 1.5507691141166124 & 1.639893869303667 & 1.405232372599504 & 1.286504019591955 & 1.2052260321844308 & 1.7412270822560347 & 1.4873658967647132 & 1.7345019182498702 & 1.7758392283213753 & 1.7026510150649234 & 1.914551284274604 & 2.010398470918753 & 1.4979563449771731 & 1.3147384060793088 & 1.698394642372948 & 1.4573288081791431 & 1.391341065149428 & 1.4575167461435012 & 1.778019486101666 & 1.5672243204393126 & 1.280886875353187 & 1.8061449506560567 & 1.935443075658936 & 1.5838590121288714 & 1.4073699008095637 & 1.971506777367459 & 1.8803183931028764 & 1.4227929710579943 & 1.1641676210202363 & 1.5583059801725023 & 1.1722194793806788 & 1.3843665904059415 & 1.64187488022046 & 2.083858088601787 & 1.9392249683244047 & 1.6295258734729026 & 1.8387789579752976 & 1.8906570053222578 & 1.7919724972900015 & 2.059206990824834 & 2.068641278344372 & 1.823802945848322 & 1.9092980991251647 & 1.705692401084155 & 1.8561011590229768 & 1.8561620102710574 & 1.7934250137584702 & 1.8540778350975877 & 1.678052795163839 & 2.021204926907552 & 1.6497036176177493 & 1.9079837074269241 & 1.9270804950928497 & 1.8611060874543945 & 1.8870071324337374 & 2.011842003928564 & 1.7162733468485516 & 1.6184795108673418 & 1.6656080127716004 & 1.3548962858298434 & 1.994792392911353 & 1.8445117835811646 & 1.5313186387402373 & 1.4126871719627005 & 1.7540924912924087 & 1.656217917523898 & 1.7310834413769085 & 1.7586714288918948 & 0.8991401092001675 & 1.7277767935901243 & 1.877070338557825 & 1.462063773901494 & 1.775368775233363 & 1.7635926504955648 & 1.4494387825398447 & 1.9884988836824742 & 1.5706372205764403 & 1.76854033416846 & 1.9354061962107583 & 1.5451201199782536 & 1.8504914751606505 & 1.669058944797718 & 1.7359055169420812 & 2.0355556835822766 & 1.6425451158565862 & 1.749806204976181 & 1.8349633748847878 & 1.7403226040827147 & 1.9522429133528048 & 1.330455970960223 & 1.0653121594572776 & 1.0012028936341704 & 1.2226906043362058 & 1.148337851227743 & 1.0114473336554444 & 1.1713553276569635 & 1.4548714080190315 & 1.4954937114652302 & 1.819235686417609 & 1.0473225769638193 & 1.0128035538875495 & 1.0371671771526896 & 1.0835495110817237 & 1.327372657913676 & 1.0987826635910687 & 1.4286225412432045 & 1.857436769994017 & 1.7225210630116095 & 1.8923299430277845 & 1.7454264564725004 & 1.713980416838624 & 2.004290596701024 & 1.7637927794900803 & 1.8766118586455007 & 2.011162817825732 & 1.7203289899741672 & 1.7833520678291388 & 1.798347182953404 & 1.9213271270872572 & 1.6539522247592162 & 1.9160650799495536 & 1.9005944646274926 & 1.6772270649552776 & 1.7404339918807417 & 1.7869308077260182 & 1.8456397107420053 & 1.3412039307560568 & 1.4287503277957418 & 1.5113262455201366 & 1.365827006950065 & 1.3196693681285714 & 0.9300841946501709 & 1.154457869345651 & 1.2020653147466818 & 1.5440896759447265 & 1.5789777130459384 & 1.6105827982739516 & 1.4822506612807027 & 1.4080742494114749 & 2.0584818846889257 & 1.9212126388145594 & 1.9589875696338934 & 1.9955984789191061 & 1.955868795961039 & 1.8193193080064505 & 2.075566444909459 & 1.8529894626899301 & 1.6886559021379035 & 1.2989913618088975 & 1.3502785646482598 & 1.5948194926611918 & 1.9111542376165076 & 1.893969513603997 & 1.734573320777522 & 1.712764889012448 & 2.001705323997442 & 1.810748818440574 & 1.9048679575818448 & 1.3584987626218206 & 1.3629499380169026 & 1.8935089272391676 & 1.5108357278757174 & 1.452192782487963 & 1.6422302146754375 & 1.8375161282433148 & 1.8899908899816145 & 1.8082630147737555 & 1.5364403198999663 & 1.5595470322709568 & 1.7910297073655297 & 1.931172183408339 & 1.8056869297514486 & 1.911454725191438 & 1.6179967532521973 & 1.8332688920525313 & 1.9331120582540198 & 1.9792904232568587 & 1.909452855171071 & 1.614057212079978 & 1.5430022093336522 & 1.6193485994690606 & 1.107467724808414 & 1.194249631834451 & 1.0484561493904567 & 1.4808911823298265 & 1.492619680302161 & 1.5860256911718507 & 1.4442475338656597 & 1.3038740795942054 & 1.0420032132263521 & 1.394733614184173 & 1.2994272490578342 & 1.4024833830449488 & 2.023863383004262 & 1.2227067419728705 & 1.7765391563308506 & 1.3547980345679178 & 1.3875780406490759 & 1.2952951783256734 & 1.3885296610267994 & 1.5685411618083474 & 2.0174325675781444 & 1.6840782889826336 & 1.6372177722990293 & 1.4894270012194042 & 1.4195133005883496 & 1.571672067545158 & 1.4412376162815663 & 1.4098512034114548 & 1.3853071942488606 & 1.2230500829532838 & 1.9214714108694892 & 1.91117703090631 & 1.9649961450362325 & 1.9243001393179264 & 1.9826113911411176 & 1.9024001726135762 & 1.9621282152154196 & 1.8089898266250057 & 1.854537470874049 & 1.8839285018324856 & 1.7227341220395882 & 1.7562140058202755 & 1.9998300667975182 & 1.7910814029706048 & 1.7357233416726026 & 1.4781332619168681 & 1.522399146060537 & 1.7974319443911995 & 1.8402660955275942 & 1.4361277274221347 & 1.8807629265096693 & 1.5116829441303452 & 1.6720802858110133 & 1.2284243911414843 & 1.3188681374354965 & 1.6842428583498115 & 1.8539249057419138 & 2.0650856317364528 & 1.7959334819379926 & 1.7811712700781446 & 1.373298503136697 & 1.586704031921349 & 1.3389804976632682 & 1.24768684342828 & 1.0761995771734103 & 1.8184608333108434 & 1.9192075799576742 & 1.744046334245718 & 1.7614600970624692 & 2.0354964511811264 & 1.37158824249464 & 1.4272018083147893 & 1.2968064520587752 & 1.14650042795563 & 1.0742010482408264 & 1.5444296917719695 & 1.3709032619916681 & 1.5736080999030064 & 1.9542672414653006 & 1.5722326520710475 & 1.8501450088111622 & 2.005645860810314 & 1.8292953211979686 & 1.6535007195223572 & 1.6963219361456747 & 1.8962593827174592 & 1.8137705883795523 & 1.5623317879424676 & 1.9111112376857542 & 1.9274919366771364 & 1.6167534452626227 & 1.7184774646292849 & 2.0262186024193203 & 1.9446970210342889 & 1.6545099914057033 & 1.6246037933915893 & 1.9424511291824456 & 1.8151166638805698 & 1.8001362849836662 & 1.575335025223257 & 2.0513938732166928 & 1.8403492648148867 & 1.3263395375693903 & 1.5208949982072828 & 1.5256259545122426 & 1.719128233226133 & 2.0881005771070766 & 1.7551326229680277 & 1.8523253266740756 & 1.3875309017269926 & 1.8502507384867855 & 1.5819853770589067 & 1.5456463344874736 & 1.4933442986198155 & 1.669851647066019 & 1.9686263109384448 & 1.6161882772080995 & 2.149492193886413 & 1.4281572844843822 & 1.8788189508562507 & 1.847776707867825 & 1.712641972812931 & 1.4964428832380618 & 1.4353612672187923 & 1.8497008711897984 & 1.6642862631698974 & 1.918953496683568 & 1.6604241844585874 & 0.9938841156489081 & 1.0399682784025903 & 0.9993102986327336 & 1.076007586308226 & 1.2686400112305842 & 1.470856706921687 & 1.3994324816031793 & 1.4263875197959979 & 2.0357998540700084 & 1.8350746011244126 & 1.5081863312292747 & 1.7592336532535113 & 1.7115578539840222 & 1.64382235331859 & 1.9171414152003579 & 1.8237035900965786 & 1.9507108645307871 & 1.9749486970337338 & 1.6550074149445302 & 1.8366385837537584 & 1.8031145669534285 & 1.6472931715290304 & 1.968511173789063 & 1.564385069323703 & 1.5926086779351998 & 1.2139200046026157 & 1.4913019566966839 & 1.0583012038837865 & 1.5248697500712582 & 1.5422015143441552 & 1.7727299380793204 & 1.8635119854207667 & 1.5234410205992757 & 1.675162501036748 & 1.9985672157846854 & 1.8636077490131382 & 2.0758766647285833 & 1.4157538112612078 & 1.9527243727658017 & 1.7004784621800726 & 1.7176893870411363 & 1.480873392641715 & 1.4873885083222824 & 1.9061593851838097 & 2.0301514110342356 & 2.000626792197577 & 1.4834312289010725 & 1.978592688813519 & 1.9182701066475933 & 1.7921512835325368 & 1.7684752012109928 & 1.9698666208291409 & 1.9734710303150451 & 1.8434813110891042 & 1.870379844106812 & 1.935412903483029 & 1.5686636848869433 & 1.9778470075065124 & 1.6892428619344464 & 1.719860478120273 & 1.7663889525430556 & 1.9954676841669952 & 1.9899966834179337 & 1.6998579852159534 & 1.694872133761034 & 1.788377869721173 & 1.8442709413595066 & 1.9864269032325776 & 1.8973693010988264 & 1.9031078793723966 & 1.838136494431517 & 1.609932633453936 & 1.0364473785539554 & 1.080024073970163 & 1.0067520618098438 & 1.2526261005625439 & 1.3782215476473414 & 1.0306214380158027 & 1.0172002623775642 & 1.0600681457151193 & 1.031113940732241 & 1.0020099625757244 & 1.085579735361623 & 1.4798457739802533 & 1.384762795884006 & 1.0660805150598012 & 0.96620592457934 & 1.4928266295209278 & 1.3107221157000244 & 1.868713613113317 & 1.5642071464507874 & 1.5734748359462936 & 1.9273107279656891 & 1.9366062500010208 & 1.8804721564687492 & 1.9045133068731595 & 1.7436032951793916 & 1.7807299405094739 & 1.75082415244665 & 1.8164486306653493 & 1.9963289254493057 & 1.6096218925326276 & 1.792986776645001 & 1.450454593065533 & 1.2903793508221473 & 1.4766049633538574 & 0.9384182434031194 & 1.023191158596137 & 1.1198719609109096 & 0.9016673421508336 & 0.9801121892939109 & 0.9706222511631757 & 0.9948465445487454 & 1.3672581576116052 & 1.099223537166261 & 0.8661259126165752 & 0.8188980171980117 & 0.9552070467422885 & 0.8921316661425776 & 1.1153307471904554 & 1.750819852954364 & 1.758499239972067 & 1.9570961889004554 & 1.3913095748831283 & 1.7664889472467906 & 1.7630784505193486 & 1.5875713730495138 & 1.5517447445393409 & 1.6049901066823324 & 1.4729049247115593 & 1.822066943683085 & 1.617830088103496 & 1.6297255126950203 & 1.5465152077786266 & 1.8811147138434676 & 1.9293409851047052 & 1.7923090943611175 & 1.430466743801093 & 1.341619342573873 & 1.7503253878999812 & 1.6479209870721432 & 1.4937057306577552 & 1.775810101801771 & 1.6257094788611453 & 1.684184778148269 & 1.8889199063214726 & 2.080346556267443 & 1.72169564542363 & 1.83584910692961 & 1.5115915151397326 & 1.8477949028215281 & 1.4880668809639443 & 1.6552878889038105 & 1.5727202462979533 & 1.3606365293794085 & 1.4476508023680539 & 1.4600197271316797 & 1.317528189119925 & 1.3706267952568087 & 1.4079795815069749 & 1.1515024759557575 & 1.4652623395726636 & 1.0581262397102034 & 1.598130279408471 & 1.6176278763925247 & 1.488221112945185 & 1.5795380455363257 & 1.9644289198823217 & 1.4031485114428355 & 2.0448676439636544 & 1.814215580835378 & 1.3198243160365455 & 1.442410911102631 & 1.1631949824398056 & 1.891578477529606 & 1.666466567955905 & 1.665870025234545 & 1.0806507140722013 & 1.1302892429588436 & 1.0328296179671437 & 1.1506901998391617 & 1.487574666051184 & 1.773385131950331 & 1.8549521483707576 & 1.457768940066415 & 1.5459385923401332 & 1.5694989648127744 & 1.8584917254536872 & 1.9272825906580642 & 1.752177176794703 & 1.9079526121994026 & 1.9238668153209566 & 1.7158243394220118 & 1.790389568155609 & 1.998657148391767 & 1.486831439233335 & 1.6827811137334878 & 1.60592840676805 & 1.847002696115104 & 1.9358213410258134 & 2.0403773046188043 & 1.0825442939430918 & 1.7566544721768527 & 1.2628990627065164 & 1.1812167379025518 & 1.467019021687631 & 1.7126751621456375 & 1.825994303868809 & 1.2955014693561961 & 1.1646463616585307 & 1.0299217122768591 & 1.0442855075877107 & 1.7019105133201478 & 1.5829936654926136 & 1.4295005402973573 & 1.3367875109224145 & 0.9494494511156008 & 0.9511062594657138 & 1.390613277026711 & 1.2772536906173666 & 1.3864718020639897 & 1.3181413756029012 & 1.344499387561245 & 1.2459090097389964 & 1.3129143766477758 & 1.7047037187082503 & 1.5476963513799395 & 1.7157450915063654 & 1.4470323215194965 & 1.3933268381277408 & 1.7610822159100417 & 1.1586395572104322 & 1.089233896178091 & 1.8589401552593634 & 1.474956334305363 & 1.6188649879471573 & 1.8626149770930363 & 1.634878658701646 & 1.5394592890904888 & 1.7450163474943186 & 1.7355002385146843 & 1.1037740317575988 & 0.9690160579934703 & 1.4959665119142433 & 0.9134189078207505 & 1.237954723253188 & 1.073683916760154 & 1.1815822864202394 & 1.1785857000618822 & 1.682634658960689 & 1.6846712397724177 & 1.4555036665578098 & 1.946278597309856 & 1.7098981599849639 & 1.6724122222379327 & 1.2298098987091821 & 1.350485126350609 & 0.8883355537783916 & 1.218066143281213 & 1.106728192464215 & 1.0442645198486045 & 1.4526732666045632 & 1.6990653917833747 & 1.9057857266669622 & 1.7141258646302155 & 1.4870585007277302 & 1.4370826071954714 & 0.9854990972741944 & 1.508120677687309 & 1.1169354843715278 & 1.4286709298638167 & 1.3343521288245885 & 1.1416783086333422 & 1.1320946863179702 & 1.171755811015627 & 1.4978092465949997 & 0.943921618016004 & 0.862137120129364 & 0.9315042111598791 & 1.0033853477690233 & 1.6657918894871655 & 2.0188452465771554 & 1.6659714757820174 & 1.383008222211468 & 1.1570121462210516 & 1.3098827894881444 & 1.1704634750560272 & 1.295267995590509 & 1.6787528428146388 & 1.5632918362303956 & 1.5158925023158352 & 1.1637759884647279 & 1.2858756432578198 & 1.7816130749561092 & 1.6274994079424945 & 1.5420931637708912 & 1.96980263294187 & 1.8795602858100091 & 1.4047952051259196 & 1.6879608440167355 & 0.9844789454796259 & 1.3374533382382316 & 2.098630754358573 & 1.42916022561457 & 1.8654676324498438 & 1.974776532001761 & 1.2228425523452178 & 1.4976823564906838 & 1.5713074578413453 & 1.5602345279855139 & 1.5007396326315772 & 1.2553989530815255 & 1.9104346972663027 & 1.762012656030662 & 1.4453015957052937 & 1.8315622204838538 & 1.9093819655545856 & 1.8015377830020989 & 1.703427485042008 & 1.860731218422721 & 1.763566409427134 & 2.068895397617109 & 1.7833176404222686 & 1.6093109819691742 & 1.389206224693012 & 1.4564687753840915 & 1.524033031944888 & 1.1285282535508383 & 1.444674934929409 & 1.0439247549154964 & 1.319799826818243 & 1.4914377171029325 & 1.3704081578310194 & 1.2817554242569422 & 1.795424574448134 & 1.555504948861718 & 1.5510378561989049 & 0.8645491735137871 & 0.898750958335058 & 0.9939167835713598 & 1.0286659674781933 & 0.9492245495711921 & 1.1481910937461977 & 1.25112713232937 & 1.242877137659046 & 1.2472636251869507 & 1.9765331961435784 & 1.9900500517085098 & 1.898654552126638 & 1.5404996532521165 & 1.7755216810244077 & 1.8214137113667224 & 1.8843902298543416 & 1.6920368745272205 & 1.81727877582928 & 1.398070275470432 & 1.6301824601211226 & 1.2905040305986724 & 1.2977154317473223 & 1.3029595683332176 & 1.8081242414225804 & 1.612474169099461 & 1.415177181919477 & 1.5434762815869525 & 1.5243245097728604 & 1.1846842682511063 & 1.4099352090977002 & 1.4289273208714282 & 1.0178132260466521 & 1.399381705722438 & 1.5513925893128098 & 1.4694970006483195 & 1.3735943915523245 & 1.7251808854642314 & 1.8390181409269037 & 1.797059521146718 & 1.081825941035613 & 1.8547920858061366 & 1.7817465655998566 & 1.6586742037271804 & 1.5778244231066083 & 1.1097154341756292 & 0.9314748286282925 & 1.4051282382431611 & 1.8512678393544315 & 1.564825104451018 & 1.6542633218916638 & 1.5687452474209476 & 1.5855419033808247 & 1.9630095889205017 & 1.2250977182291856 & 1.4324024072637827 & 1.3369007487265776 & 1.1804400795126353 & 1.1920848042541405 & 1.7161301285824537 & 1.7375907183514299 & 1.9087468205039695 & 1.8922880597691714 & 1.7627091615082544 & 1.8641906254379703 & 1.8064764486519826 & 1.8879564557518422 & 1.9352139725378814 & 1.9581484035407326 & 1.8989540735490562 & 1.7195711931319948 & 1.7986167651004636 & 1.7758901582860172 & 1.944096942708387 & 1.7734528191499404 & 1.8441107352239374 & 1.1542485548591515 & 1.6271593354020908 & 1.76517847666579 & 1.052085120960208 & 1.4356702486192399 & 1.1657768912009308 & 1.9063834903877939 & 1.2663518935538578 & 1.1990718604856132 & 1.6893835427700525 & 1.3180753333556272 & 1.8644663606072065 & 1.7665468230787231 & 1.199927592502303 & 1.15988710332497 & 1.4556700094036055 & 1.8476225273378437 & 2.0911211161603567 & 1.4244316066699598 & 1.105940301491716 & 1.1469801793802685 & 1.1290692884910438 & 0.9927823979174321 & 1.4598072429188804 & 1.8160117969326892 & 1.5806892899404759 & 1.4654816517203366 & 1.9939328009807207 & 1.3501215156189117 & 1.1573883280788462 & 1.1893261387816745 & 1.197061662388168 & 1.3681922726180464 & 1.6932095617040928 & 1.6085547842804389 & 1.7810875036480798 & 2.1252270030738045 & 1.919399434756753 & 1.8690749394884907 & 1.745324171509996 & 1.9765210608294925 & 1.8160741343872604 & 2.021309772595082 & 1.6007057351226386 & 1.726385260206974 & 1.658583812597849 & 1.3541489099558712 & 0.9352392954724322 & 1.1567436327044218 & 1.055305988059195 & 0.8726973288829 & 0.9132841177760328 & 1.1136092163399758 & 0.9837589344050567 & 1.0130962745402647 & 0.8472143408095812 & 0.835022123240117 & 1.0618239749713492 & 1.0353649302491785 & 1.0120675069196963 & 0.9959540952342671 & 0.8682977888121955 & 1.121454236149312 & 0.9311205537141499 & 1.1487126948782853 & 1.7779519323210484 & 1.874524004411382 & 1.5922843710860788 & 1.5497938154539153 & 1.8627678496765936 & 1.9191006865243774 & 1.6083984213982436 & 1.6469097706838363 & 1.8803933158635173 & 1.4874057409160044 & 1.5743245315568917 & 1.8877727248484444 & 1.9055807467119086 & 1.4101999434718155 & 1.7091453903235458 & 1.733159724389306 & 1.9425488460296108 & 1.8037931772247386 & 1.520101141709326 & 1.2892897048859961 & 1.5470755574749089 & 0.9931394494821981 & 1.1065795176353026 & 1.290558973599481 & 1.1236370571950105 & 1.2122565974347372 & 1.1049478239632688 & 1.0930995667264236 & 1.09623052348313 & 1.2089515167241454 & 1.1868467092195594 & 1.1034074628561503 & 1.1533909845307189 & 1.027572110982904 & 0.9924130158373534 & 1.130962190572376 & 1.1520691740083475 & 1.3235929448876431 & 1.1511995548090208 & 1.064691330944268 & 1.105822219347998 & 1.1295576828932332 & 1.656547812193067 & 1.8900720243034452 & 1.9360176075902888 & 1.899512209507013 & 1.7702024923146638 & 1.6769534903217962 & 1.3369869621175923 & 1.1312817007894211 & 1.4661905478908257 & 0.9833816250700275 & 1.4043293370877932 & 1.9947089279509251 & 1.7283954146783513 & 1.2471537504379246 & 1.7090889083015028 & 1.810782185563295 & 1.7664768257946577 & 1.5690821513106945 & 1.6720799531507275 & 1.999142812303978 & 1.8661490630511226 & 1.542803368067162 & 1.5248476730273222 & 1.6401140368632057 & 1.7413421609477278 & 1.796857664047319 & 1.8763856486341859 & 1.9586157534645765 & 1.8344359805001265 & 1.4702807496705277 & 1.2893222078590891 & 1.5402596140117495 & 1.0491324204731594 & 1.318980973550159 & 1.2298314491497306 & 1.999951525290319 & 1.8855668028399064 & 2.005055752429761 & 1.8651985902037769 & 1.3327124621168265 & 1.033608584973414 & 1.290328854005684 & 0.9673394805650931 & 1.0186221742372168 & 1.0589403624701497 & 1.0283877823594159 & 1.1187297128374587 & 1.1084670023877237 & 0.921910911483368 & 1.100871147443169 & 0.9928071047453295 & 1.0377974527429394 & 1.0077354019302636 & 1.9771525529030234 & 1.524135017319986 & 1.8926882195146704 & 1.9053638905768244 & 1.5224798331661176 & 1.702227374359386 & 1.6197194830664705 & 1.615299530287487 & 1.274319875268217 & 1.0416881702194876 & 1.306312266806378 & 1.3993393489738362 & 1.2990597616118926 & 1.6629035861198733 & 1.1837812288374239 & 1.6198318247590806 & 1.5379181076086816 & 1.23480465106762 & 1.1067714960989643 & 1.1587670563616963 & 1.3937566560243158 & 1.68591071231321 & 1.089471780370213 & 1.036138759713958 & 1.3095372950423327 & 1.4777898804309335 & 1.5994180619662837 & 1.938858420888085 & 1.828085187654006 & 1.27756498387752 & 1.9168174061293441 & 2.014969313761148 & 1.7571734863594353 & 1.468886035092757 & 1.9530922011131053 & 1.8025675652366866 & 1.718999716241051 & 1.9345701560839006 & 1.9093418643641105 & 1.8901864998114737 & 1.881357128526148 & 1.724350846534867 & 1.3753387608540326 & 1.509041120296958 & 1.6720902738752357 & 1.4308697447989935 & 1.9392189490162965 & 1.3631263763127506 & 1.249735846763821 & 1.933667266992434 & 1.810484555652516 & 1.2963024097780251 & 1.6468002945560185 & 1.3565239414111674 & 1.5993782202559839 & 1.5096055017427625 & 1.7931578292208292 & 1.5776567910332988 & 1.4458839842374214 & 1.7086394737008053 & 1.8944125443537412 & 1.336833027182054 & 1.2864512836122894 & 1.3625509070270605 & 1.9127105194317826 & 1.761177179478419 & 1.5868380245639588 & 1.1158605384392408 & 1.4550396439697273 & 1.8819401648710765 & 1.7000706309148026 & 1.4439899888433378 & 1.721395181693709 & 1.8473971193781786 & 1.8024226524679814 & 1.9404291539888916 & 1.9701744242968364 & 1.6390908440292433 & 1.8571104472252542 & 2.0405904739371428 & 1.6312458321182295 & 1.7928753856840813 & 1.6304911736404648 & 1.7260011179957946 & 1.5827672725776565 & 1.2425018955551037 & 1.3742569913104963 & 1.7026332978244816 & 1.7598745356399363 & 1.5279527189091513 & 1.949056949740184 & 1.9374776776854115 & 1.6426291834291782 & 1.917578673917078 & 1.7472518786006916 & 1.6829360895706904 & 1.3013030424951906 & 1.5623910821425633 & 1.7076885340994858 & 1.8358316611882173 & 1.6018503827889434 & 1.8656904359056743 & 2.0202342953686365 & 1.885446110240868 & 2.0754188336366814 & 1.6113593601433551 & 2.0084325327902643 & 1.378410687815099 & 1.2678890663396611 & 1.4412752912683746 & 1.6120585279330517 & 1.8184929739713018 & 1.6562663028458307 & 1.6559178762692988 & 1.2622068323417084 & 1.6397215090259918 & 1.6083734585133194 & 1.6213097515706656 & 1.810756607637286 & 1.7142401731808623 & 1.4555868009518456 & 1.7551006245627805 & 1.7220978189748055 & 1.8157898222100626 & 2.012800872598195 & 1.916187032950183 & 1.647894021486489 & 1.811069279457473 & 1.8349603394121932 & 1.9345421217045422 & 1.455196771230628 & 1.0976872683613528 & 1.6368217945556969 & 1.9022526022889172 & 1.4735327371810831 & 1.7352304786379382 & 1.8005403586726174 & 1.994079586814525 & 1.8034426217822688 & 1.9901869291515615 & 1.5752693579181427 & 1.7793615198634665 & 1.8876968928728612 & 1.5831615469099378 & 1.5053888348044075 & 1.6743210820319958 & 1.9695991444436753 & 2.1160683416979262 & 1.874952006179895 & 1.4001908287889684 & 1.4310957980627594 & 1.3827025022453452 & 0.997794817825486 & 0.9030025829318519 & 0.9046610869330043 & 1.066217894994167 & 1.0256408621729363 & 1.0131252728850144 & 1.122596698745966 & 1.7151477876838082 & 1.8746846521681781 & 1.8309072270510596 & 1.7827896504682297 & 1.9626622793662298 & 1.6732098229585906 & 1.6779236421052797 & 1.476784930852199 & 1.4268267693297099 & 1.7754193231686026 & 1.9825556034233673 & 1.5082747187320455 & 1.2889388344124741 & 1.933970225779247 & 1.5336757200829452 & 1.9462992582986547 & 1.5515514449099803 & 1.2355996306129378 & 0.898377113778132 & 1.3145147123803427 & 1.5809340848598863 & 2.0144153840689083 & 1.8710477161204007 & 1.49690174141751 & 1.7330840636882043 & 1.8066356049223788 & 1.5868863059575642 & 1.4682267236865418 & 1.3123292965315767 & 1.6752196288606407 & 1.2506348377226717 & 1.2702346404769695 & 1.1707081603650809 & 1.5082196574991609 & 1.2670013753178104 & 1.8212471649231639 & 1.471708197795239 & 1.7394070247645164 & 1.6025369222043848 & 1.4826649845695858 & 1.5101551096566814 & 1.1534953087670203 & 1.523296161016375 & 1.76705319010883 & 1.6941166011321434 & 1.918888181736627 & 1.6571774710168687 & 1.690619139523642 & 1.7254821947521115 & 1.5652159876757108 & 1.4500835575423658 & 1.6430121992772815 & 1.3866271189212716 & 1.6272053177753325 & 1.539693212965077 & 1.6109030125167074 & 1.059273635856067 & 1.0993162280680462 & 1.336642152929956 & 1.9582605912861997 & 1.7341135861067443 & 1.6055336832087688 & 1.5423990267012042 & 1.4295718601683634 & 1.4415521408136638 & 1.6341797314815236 & 1.8081292854125897 & 1.5160518155773892 & 1.8106095042414774 & 1.7255012227464115 & 1.341317728207635 & 1.7737329122461887 & 1.8681634275347387 & 1.0443970169153032 & 0.9418196967480658 & 0.8970518496221173 & 1.53704270707958 & 0.9343519969100083 & 0.8453447219969499 & 0.9204694302360827 & 1.1396375866571256 & 1.0993650389978977 & 0.8616735260881413 & 0.7548299919455091 & 1.0244635287759416 & 0.8961891487784592 & 0.8043649679667675 & 0.8384371360771112 & 1.1254072031826425 & 0.8854283644243591 & 0.897747336795452 & 0.8711456894376945 & 0.9330934639582694 & 0.9984994150283214 & 0.8621498650814592 & 0.8919323359379643 & 0.8597911163736861 & 0.8632480732645689 & 0.9488482606311168 & 0.8752110177711645 & 1.0200419230085422 & 0.8928629858770342 & 0.8698084747199678 & 1.2131053978351154 & 1.2307560674471223 & 1.283448376942963 & 0.7962792541753073 & 0.7694516055272961 & 1.0735181688061375 & 1.0546086420429766 & 0.9876213722329983 & 1.452002810749631 & 1.5839122764700957 & 1.9232414800553221 & 1.951931898768176 & 1.6717825067075747 & 1.9423560197515934 & 1.856087925900033 & 1.8147933638038947 & 1.3862586226449962 & 1.948911164730059 & 2.070177564085247 & 1.7885302432088326 & 1.6739836642894945 & 1.9524122704068907 & 2.0150963629732046 & 1.8664800269403403 & 1.76727261383496 & 1.7398197790891627 & 2.050353567987184 & 1.452020027258232 & 1.0949805342910364 & 1.0941914328181344 & 1.56146134897279 & 1.6883592243187726 & 1.413100486837859 & 0.9906737746461791 & 1.5489121757492779 & 1.2575725968977511 & 1.8394627920709514 & 1.895276363022853 & 1.6795498950200742 & 1.680029940060171 & 1.7606473596444074 & 1.34911065268793 & 1.8371955420851032 & 1.5787430573409131 & 1.3248509547304432 & 1.42875660405108 & 1.4312038974791805 & 1.4750325878905304 & 1.6555986358073413 & 1.8254217035348657 & 1.854539831396758 & 1.785905804558182 & 1.637529187725934 & 1.844531710663693 & 2.033365344273602 & 2.1211000592227345 & 1.4998809847427477 & 1.5080736676083693 & 1.6915298521510005 & 1.9916497995087992 & 1.9286243988167675 & 1.5779464922842255 & 1.3348704964292524 & 1.0324481800511525 & 1.3427061587962186 & 1.3493345621381818 & 1.4220873289495592 & 1.6182235075884346 & 1.3269665894580014 & 1.696055071146878 & 1.5733220576808065 & 1.5076873030049036 & 1.4161761966682587 & 1.2649480853978659 & 1.448558073512346 & 1.6283150192491087 & 1.5532270191635253 & 1.1752994840113884 & 1.22531756502953 & 1.5605175541139558 & 1.5710847633125662 & 1.581919449228964 & 1.7884006918504907 & 2.0972902234127413 & 2.1004444573009184 & 1.8628785394932033 & 1.8638346730218556 & 1.9839272701138826 & 1.9057436123277278 & 1.8357891195217693 & 1.584253634097294 & 1.7410487558074326 & 1.2838457389471298 & 1.123459182634913 & 1.7544773463745562 & 1.8708623818566663 & 1.1841604294527588 & 1.0325416033478476 & 0.9935963867561416 & 1.2154899143709506 & 1.5822655738995182 & 1.5831496497255582 & 1.5744013646392327 & 1.2302293973072307 & 0.9750500445907063 & 1.589909777142215 & 1.2452810200056263 & 1.5952704978418797 & 2.028118786636142 & 1.2138424708610684 & 1.889320548425284 & 1.7491695790899675 & 1.7031530369086572 & 1.684739029504393 & 2.1052184978413604 & 1.8302374194266928 & 1.8377570973967627 & 2.0540161841066973 & 1.7139844394153634 & 1.699461859137517 & 1.5650307563594275 & 1.8385455612929995 & 1.7726362949923138 & 1.6805777131815283 & 1.3235953379485674 & 1.9083291386904568 & 1.8095447906008681 & 1.780727309845014 & 1.705508307999603 & 1.6477203721681686 & 1.6634755476286098 & 1.3873713228688596 & 1.0996224801693637 & 1.2318579983621227 & 1.6945301405177 & 1.744919913573655 & 1.6478583992475755 & 1.71688318312878 & 1.9027801522991472 & 1.9836862174841685 & 1.8420742407584803 & 1.9241472041835828 & 1.8310039273149217 & 1.8219544161471004 & 1.4850106918454478 & 1.8549130808949552 & 1.765177688423836 & 1.9477288286882333 & 1.9334074579847316 & 1.9132418716636548 & 1.3948731935166256 & 1.1376637055076215 & 1.1985739494739798 & 1.7107031478314887 & 1.952950549172439 & 1.222502529617116 & 1.6195864090257557 & 1.6965867589088708 & 1.959611648506649 & 1.8859706069605837 & 1.7623540579891521 & 1.773725708891624 & 1.3342614527468242 & 1.2523825820577386 & 1.7392348166249314 & 1.629166608669491 & 1.3826956496005922 & 1.1782918346038165 & 1.7123980720623733 & 1.7822700426662152 & 1.8847960727356712 & 1.8902579925156566 & 1.5230440415328659 & 1.5665785251249476 & 1.378282574223013 & 1.1614919916118849 & 1.062254001574737 & 0.9470903061128557 & 1.6435426946248128 & 1.6311405029720416 & 1.7790595575661559 & 1.8092520711156803 & 1.802037913054936 & 1.8912397544668 & 1.6651517764333512 & 1.5057347931095406 & 1.9106741792085282 & 1.5953128495556412 & 1.889741682636871 & 1.8349868522409993 & 2.0254381521784075 & 1.9325910760345872 & 1.9603009729291834 & 1.705040709260976 & 1.4991255081309331 & 1.6101429074824647 & 1.6722281683843727 & 1.8319362380269204 & 1.783157991944465 & 2.0664591179094254 & 1.937994001140496 & 1.6111147999337234 & 1.4162545529024617 & 1.6482110990357852 & 1.399031216293754 & 1.6136145506886526 & 1.877216041777874 & 1.645634454799858 & 0.9647380246036614 & 1.5078039317503324 & 1.227978858286148 & 0.9773200420206962 & 1.0940320074016305 & 1.0647184599350512 & 1.317441384461279 & 1.4532646661690654 & 0.9883435804265984 & 1.129236905025266 & 1.4251990998547062 & 0.8271318573057265 & 0.9758740079661128 & 0.8377559856415292 & 0.9386756271244964 & 0.9713824884723231 & 1.1922130254969936 & 1.4595068464959227 & 1.0705766943554262 & 1.6420752480669483 & 1.9234073902432898 & 1.6456604174793739 & 1.8397737431598256 & 1.3566577815836953 & 1.5336753676883708 & 1.3083508669906423 & 1.4451674633001306 & 1.2459893099576325 & 1.2105259618884627 & 1.2652223122699124 & 1.6946994988086597 & 2.0854351294384976 & 1.8476965512492833 & 1.7228662180473315 & 1.7068804661506576 & 1.7034241371482035 & 1.780688929251858 & 1.3735382438803678 & 1.1737502855840802 & 1.2114104000491341 & 1.8765826851678826 & 1.5409110401252122 & 1.5214823548262792 & 1.8927476309172049 & 1.8250796219657486 & 1.7442394130422199 & 1.869536261772611 & 1.7500892000602184 & 1.4693610524834153 & 1.4506870146763606 & 1.5413542061328627 & 1.6451154901693645 & 1.9202483490485593 & 1.6545118383390203 & 1.745087652937508 & 1.0472712831361326 & 1.0852595809173322 & 1.0743774564271331 & 1.2800865061823197 & 1.8174515443291481 & 1.8956908475398273 & 2.0882175530282043 & 1.7723799288296345 & 1.9588783693448688 & 2.0194970141506716 & 1.9473072217918868 & 1.9022123531457735 & 1.8906860378589527 & 1.3104046842396333 & 0.9374325484784075 & 0.9173462890630328 & 0.9649362319083458 & 0.8633246240432212 & 0.882760069265704 & 1.1833209546299939 & 0.8574579669600056 & 0.8626678157410979 & 1.0082332729005605 & 1.0214810111318298 & 0.9556435108530105 & 0.8612784425450181 & 1.082912517912314 & 0.8397950938132285 & 0.861430533498755 & 0.7863678572404532 & 0.9881361618359987 & 1.1938167323316824 & 1.0625564706822561 & 1.0319738163447503 & 1.0138662548705022 & 0.8358880033877704 & 1.0533545500947477 & 1.0524668297515922 & 0.9451892454645433 & 0.8560970606445321 & 0.9297586430184284 & 0.9221698586047868 & 0.9739064380473534 & 0.8151869357204378 & 0.8730826456084317 & 0.8323223211624244 & 0.8462103462182228 & 0.9811800998636471 & 0.975153737380829 & 1.082470268049964 & 0.8030656737527697 & 0.6997188118323369 & 0.8412310370469004 & 0.8790657772667162 & 0.9215533992392697 & 1.0690933475944493 & 0.9102474873544072 & 1.391625932973622 & 1.046487894401177 & 0.8065334116634357 & 0.8360268046163588 & 0.848384018247446 & 0.8169091161059729 & 0.7826493283453263 & 0.8456168454680179 & 0.8220009423663159 & 0.9185625363045111 & 1.0966053554733972 & 0.9515624163792836 & 0.9883789437102498 & 0.9729432603175281 & 1.4558370903183575 & 1.4639031932914783 & 1.6642059368598836 & 1.8233757192867406 & 1.8833830297394907 & 1.8299438447290288 & 1.713953993286958 & 2.0528727089270022 & 1.992156565074581 & 1.9623316439574467 & 2.0429988653783027 & 2.023622205139382 & 1.7564850561321468 & 1.330632512791455 & 1.8986594222313415 & 1.8179666838283564 & 1.0942929852480672 & 1.635529483798663 & 1.6296219177068503 & 1.9051879761249282 & 2.0145514991968168 & 1.6141931444420365 & 1.008390657353989 & 1.4855479411158152 & 1.6252066207149016 & 1.577943205276974 & 1.7676604956834352 & 1.92413852392881 & 1.3695295929736417 & 1.5521158808169244 & 1.3314957652508363 & 1.6923668477584812 & 1.2930939650673174 & 1.6728462548851375 & 1.874804716124746 & 1.8845750888515784 & 2.050192910154504 & 1.7668429441070805 & 2.015632888623964 & 1.2375162953456607 & 1.6150944314167066 & 1.7925485617942523 & 1.635217546127757 & 1.6459934237037148 & 1.8168185570885105 & 1.9617872228013944 & 1.9936788730121007 & 2.0615149880977737 & 1.5948678773621479 & 1.8318814205668397 & 1.7462254338870054 & 1.8015264765957935 & 1.63515043021631 & 1.9724342358127045 & 1.8450516279714648 & 2.0603706207290595 & 1.8527607921176608 & 0.9819121385914137 & 0.9022955789554119 & 1.585380421075159 & 1.924456068260779 & 1.6274982040155235 & 0.9067382580960625 & 1.1582654319834131 & 1.308904163135676 & 1.1917165990965541 & 1.764692637965701 & 1.6998116720334098 & 1.6816522631001725 & 1.3014038843576734 & 1.6461677025266455 & 1.6488140878750346 & 1.20753176942195 & 1.284192314292989 & 1.0476845577771952 & 1.1892917647710086 & 1.3852343395476903 & 1.1281579176429266 & 1.7043758757360186 & 1.8170471645889774 & 1.9537021898468943 & 1.472518829340889 & 1.8266458875804397 & 1.446190922037004 & 1.6717894761278318 & 0.9832474384253416 & 1.210100179129703 & 1.2341364151163836 & 1.7881730444928365 & 1.0768563722875548 & 1.1371853009831556 & 1.1170921069513984 & 0.8734074299501866 & 1.580300374847564 & 1.720013671719982 & 1.5640121449610234 & 1.9046944234157823 & 1.694123916779773 & 2.0473049989316583 & 1.941019274429363 & 1.4590740098816766 & 0.9850484012751052 & 1.2358666923907793 & 1.6899461467604304 & 1.6416730555021486 & 1.747078087055919 & 1.5752317671214668 & 1.4362097200816264 & 1.1953120955302947 & 1.223421946100146 & 1.191268572191468 & 1.8500452205013336 & 1.8244405842606581 & 1.815403706581904 & 1.9030238594216187 & 1.6667622322650315 & 2.026393790919713 & 1.7248085504903032 & 1.631688267542896 & 1.9732747517690912 & 1.8696363377268834 & 1.8270854216116599 & 1.596296724408641 & 1.7784615261231662 & 1.8870789166592186 & 1.787442594922092 & 1.448754217570342 & 1.5246916903864627 & 1.3303958357712509 & 1.3057442892438078 & 1.482226583619598 & 1.956180183375247 & 1.9636469815462312 & 1.8055160066148312 & 1.904085190983068 & 1.5860707263554852 & 1.9128979968026543 & 1.6839289463852838 & 1.5178193494211378 & 1.7868239953810665 & 1.3393233292630256 & 1.0657472181912497 & 1.3956863797569803 & 1.644490887275425 & 1.2170758031145161 & 1.8516099930087055 & 1.8936029829699728 & 1.5069019819275218 & 1.2902896566620725 & 1.37733654080577 & 1.6057246804865055 & 1.6823309100496018 & 1.669538578869081 & 1.8933225623458039 & 1.859859631514983 & 1.7783378891459631 & 1.7184222976981234 & 1.8502218238145673 & 2.0396679457483353 & 1.9324366854597228 & 1.264323852982865 & 1.4593612863919772 & 1.6238281592007013 & 1.4530224494014476 & 1.4283377163862108 & 1.828765340546093 & 1.8591165830307552 & 1.8634953208149445 & 1.874603893183841 & 1.7937231009174062 & 1.908155140738264 & 2.0585313711834514 & 1.9717749342072952 & 1.8295740761550672 & 1.9321295808224097 & 2.085131083622585 & 1.7281831803809147 & 1.6600191789216823 & 1.6284458497077436 & 1.8784361698193608 & 1.4963848192177476 & 1.8197538769998547 & 1.639342090779906 & 1.5264666547658088 & 2.0709681586324984 & 1.3369973770793617 & 2.000816459885886 & 1.3609853957659024 & 1.7817313339435972 & 1.932911209963804 & 1.9224694002455116 & 1.9898972538082667 & 1.8851670615547325 & 1.8221505905964286 & 1.4369761107390027 & 1.4451462297265303 & 1.1674558261640258 & 1.1177308979194718 & 1.7832359313051052 & 1.9110866351604103 & 1.586846546384378 & 1.7806093295998389 & 1.95320517325766 & 1.820181335819306 & 1.62824950267868 & 1.9720625763966873 & 1.9107354249020687 & 1.29351739828961 & 1.7325211681236437 & 1.5736698168069587 & 1.5634374153136732 & 1.8417679407543455 & 1.1713265922435274 & 1.0249080252922036 & 1.611244620508643 & 0.9805492147272645 & 1.4974421620044047 & 1.3760770723958473 & 1.2667442708322372 & 1.3059088572195292 & 1.5697975093613348 & 1.392952531599299 & 1.2854604410722161 & 1.8515854487424976 & 1.6037946745381757 & 1.0549793010470891 & 1.404936329290535 & 1.3854605122977914 & 1.4144759219334926 & 1.9119642199887756 & 1.2870469030378118 & 1.576740694554921 & 1.3944272364085326 & 1.8141102449325344 & 1.4840750265200269 & 1.9687584172003632 & 1.7216113918271847 & 1.2295597861245964 & 1.528369647357837 & 1.7421498224173837 & 1.5602065874014468 & 1.4973515489501643 & 1.4360195621264835 & 1.44299903117333 & 1.8568456966923006 & 1.6225080354343344 & 1.8439106497203581 & 1.5361130223800301 & 1.4122465710458072 & 1.4670467284048652 & 1.910926954890174 & 1.8326369701859486 & 1.9140690536801077 & 1.378496444705218 & 1.3762571054298565 & 1.1682098554232636 & 1.4529803283033873 & 1.5965728756102415 & 1.0393226554068082 & 0.8454630435534637 & 0.832977304359907 & 0.9034100452368055 & 0.9192263444713514 & 0.8422330596410186 & 1.0251246108623047 & 0.9367671310153899 & 0.7681970759531883 & 0.8387398620317712 & 1.1041622856088427 & 0.9070273762184309 & 0.9216013122744318 & 1.0548479273361036 & 0.8480083708699376 & 0.8757720140302324 & 0.861006513447656 & 0.7806391788757516 & 0.8500156910576769 & 0.7692931795289082 & 1.1184343333558717 & 1.1606692118855677 & 0.7538466027321884 & 0.9998044243514059 & 0.8767544744399653 & 0.973566628257547 & 0.968612842199578 & 1.0358211015356857 & 0.9549292173957967 & 0.9411547546028143 & 0.8896675363913374 & 0.9708630457933402 & 1.0341336155588563 & 0.907766222536919 & 0.9353128595048816 & 0.9840198209054536 & 0.9635263207628718 & 0.9042504903165968 & 0.9201103073335665 & 0.9056658877797046 & 0.9647373111153325 & 0.9361725911683193 & 0.9574463976412964 & 1.123110981855146 & 1.1550343752878853 & 1.0190196195793824 & 1.0608719228877435 & 0.816429047470647 & 0.9155175893236719 & 0.7597485814019909 & 0.905802870321405 & 0.9066159914424877 & 0.8869764958573484 & 0.8395329089468144 & 0.814231900795151 & 0.9846723904089694 & 1.0337398193810439 & 0.882858814996733 & 0.9053816704423986 & 0.8369874149498056 & 0.9003459927302342 & 0.892980491866191 & 0.9656411759402028 & 1.1637822126466921 & 0.910133049082074 & 0.8511426527758265 & 0.9550721546833743 & 0.845043358937522 & 0.7935573415661907 & 0.8638834924204527 & 1.0669459043996452 & 0.9406102365829844 & 0.854889875325556 & 0.8835509717093922 & 0.9912896102941504 & 0.8344761413245146 & 0.9821919850166926 & 1.177093471418959 & 0.8871049273591864 & 0.821519922903707 & 0.8583026629562915 & 1.1064015014375062 & 0.849313756186016 & 0.9128567272134159 & 0.8825080057484519 & 0.854954282840809 & 1.071342607318004 & 0.9111563182924717 & 0.9219225150476027 & 0.8430832520235405 & 0.8822251119307765 & 1.5807907939198222 & 1.4971879379859494 & 1.86499518392544 & 1.5315083159335492 & 1.902234599498587 & 1.7094633080406618 & 1.731565169205381 & 1.9182531542873764 & 1.9029336373352346 & 1.4752519772370818 & 2.034510106696673 & 1.7695192707244092 & 1.692497688542784 & 1.4628843463634558 & 1.8515646326290005 & 1.86082454691684 & 1.7868830563227047 & 1.8198889841506778 & 1.8023453208404174 & 1.1837361567814295 & 1.4219344114174157 & 1.3287340811753354 & 1.1746315233887723 & 1.5683506788001924 & 1.582605787941534 & 1.5763357767947217 & 1.7489773165026472 & 1.666550659868238 & 1.5363147102987489 & 1.430086042393402 & 1.4015680282026606 & 1.2350582547923545 & 1.3650277079979647 & 1.25211573783319 & 1.6524440806175071 & 1.8058462826877286 & 2.0336904276640393 & 1.864900941935069 & 1.7674930211473838 & 1.421008459684457 & 1.6486498957741502 & 1.340916941392068 & 1.1224901162707066 & 1.4873376168283408 & 1.9839218423284548 & 1.7087450369149693 & 1.8605315011485974 & 1.9162854153764792 & 1.7711714110988392 & 1.6403317936166446 & 1.5214898752272037 & 1.5585585608066732 & 1.8208688664606685 & 1.8049438817430736 & 1.739845801315962 & 1.7941651399845553 & 1.7611996367942355 & 1.6117797778032312 & 1.2942540970258036 & 1.717231461906586 & 1.7791861802343238 & 1.743733895353344 & 1.1999798120950131 & 1.418954072313576 & 1.3201067058724227 & 1.1906590809936504 & 0.9098748002817231 & 0.906318569014063 & 0.8235508767362891 & 0.8009554807878637 & 1.053028846549825 & 0.8305758931069066 & 0.9817486794012714 & 0.8546938180060762 & 0.8988601759176802 & 0.8251705350814117 & 0.9084383139288036 & 1.2000238000603014 & 0.9252244552587134 & 1.0666155134714188 & 0.9481436707837245 & 0.8879853083256133 & 0.8638276819620306 & 0.8496142152227851 & 0.891748683860516 & 0.8302981544532777 & 0.8435702710640108 & 0.8905273408586174 & 0.9574860370934539 & 0.9672203819519926 & 0.8889894360895287 & 0.9680605332005161 & 0.9033890688300663 & 0.8510133373713157 & 0.9033299214474184 & 0.9439825390483029 & 0.9097692551176139 & 0.9641235649071253 & 1.1867439981730714 & 0.9381077235187432 & 1.0962410080014873 & 0.9668199619569041 & 0.8404595038230028 & 0.8824998280117712 & 1.0997823457786196 & 1.1595647554963113 & 1.1510496971719755 & 1.1428607644578748 & 1.0073239486168144 & 1.160391152957147 & 0.7863565358959453 & 0.8071920468235602 & 0.8981367544886744 & 0.9951344363594377 & 0.9972606061546708 & 1.0667377924892296 & 0.8531681503164176 & 0.824749360524274 & 0.8533841000328855 & 0.83619189844057 & 0.845378346509 & 1.0724876106811054 & 0.8654849240428375 & 0.9585900212845455 & 0.9619915906492356 & 1.1789570991390987 & 1.1693442338618494 & 1.274858627898638 & 1.3182180853534449 & 1.4562144991698165 & 1.6594161252769066 & 1.6941765277889909 & 1.905224020814457 & 2.064046373487143 & 1.9191303005723384 & 1.8611486521196074 & 1.9769033664574946 & 1.7270313166473352 & 1.9242116042811843 & 2.006615123754511 & 1.9290174074079445 & 2.052139486471577 & 2.003434744505863 & 1.8838920527323435 & 1.7831098423525364 & 1.7587825236991146 & 1.3814263582676032 & 1.2858744073138322 & 0.994353437678418 & 1.136993887196536 & 1.0098336592913026 & 0.9684437116562029 & 1.2184471737202098 & 1.3829890712220503 & 0.97202583492295 & 1.001569528278517 & 1.047407164588748 & 1.3237149715494005 & 1.0473280585810427 & 1.0985870011553278 & 1.0898446903187202 & 1.4563956464066032 & 1.915442300426523 & 1.6730035916927892 & 1.9950835840417631 & 1.9721955979345447 & 1.8044944171562667 & 1.771189890554655 & 1.498904018580002 & 1.9877828033753222 & 1.7675545653027354 & 1.7813429375089291 & 1.8374893804432144 & 1.5328374805692142 & 1.9075430551647046 & 1.9939269408849325 & 1.8891320722049945 & 1.374916007102303 & 1.526564540113635 & 1.37192156916881 & 1.2968716572817944 & 1.8346083274144678 & 1.7622107184512246 & 1.8586429748236262 & 2.060964688316603 & 1.4653098084825296 & 1.5279693011306585 & 1.562323176102108 & 1.7371183981421727 & 1.830834759306039 & 1.6549719005752421 & 1.6122492207833548 & 1.516136400171397 & 1.7465575968871634 & 1.0315104921841762 & 1.357827712584176 & 0.8629377476973784 & 1.3346811702582804 & 1.4059551806329569 & 1.6991717824739105 & 1.6825849569891658 & 1.827764276506879 & 1.9105613373027852 & 1.7506913115052678 & 1.8562660977752148 & 1.2591952815993612 & 1.198105661772036 & 0.9749667222987871 & 0.9136563380602826 & 1.4190425083958333 & 1.5267904627739957 & 1.5291168964345627 & 2.003362198795966 & 1.7634193182949771 & 1.8564120735744118 & 1.2634604410335062 & 1.1462991993504645 & 1.5405293682438226 & 1.4613208794483865 & 1.8027089574658663 & 1.1648142287339103 & 0.9780958643997688 & 0.9135791286881056 & 0.9885134887706917 & 0.92256832467347 & 0.9301604857871456 & 0.783286193979152 & 0.8264203372778346 & 0.8667191590208898 & 0.9618693681697372 & 0.8613377675204482 & 1.1899819785346697 & 1.0868714656848428 & 1.089772565704438 & 1.1037935118468167 & 1.0160293782966638 & 1.044056644967132 & 0.9849351230599638 & 1.8106849657768473 & 1.5580028718263514 & 1.1343146466038332 & 1.0131602454029291 & 1.082895742098462 & 1.482955543985633 & 1.9388407518744477 & 1.6162198372452097 & 1.882442396856991 & 1.4732286626639879 & 1.782487722515092 & 1.8133882369603658 & 1.6286859997804717 & 1.77154679987098 & 1.9228096350627333 & 1.8663809497572788 & 1.2740387530332296 & 1.9380280574472006 & 1.7319434611709381 & 1.58065056679926 & 1.3272868748834417 & 1.4842087365987344 & 1.492327164489731 & 1.0950398095117178 & 1.2626405254131967 & 1.143913459241655 & 1.3554360693246525 & 1.3749789485669235 & 1.8173133199466132 & 1.8593517853395687 & 1.6157560485555773 & 1.5160961835304603 & 2.070374402139612 & 1.8419744442211734 & 2.072575651035142 & 2.0084511285802895 & 1.8014993653919578 & 2.0238275298179826 & 1.757791199741583 & 1.4315946156111494 & 1.5960775717886575 & 1.3682466079749889 & 1.6747618279067338 & 1.2104786943854997 & 1.8915219466664748 & 1.5235703943787944 & 1.7616991681238605 & 1.535841107338584 & 1.686890555484556 & 1.7834883035627205 & 1.8099286658788152 & 1.8154685209653336 & 1.3091344399266167 & 1.7747365105398671 & 1.3528704445594288 & 1.7697695526231414 & 1.6950761935988867 & 1.3427883308058812 & 1.4469293676399997 & 1.3228681705957508 & 1.0244270510932052 & 0.9758065113341907 & 0.9491172864865455 & 1.43010502051076 & 1.174442149481888 & 1.7725938915228647 & 1.6492324729630983 & 1.33331702492552 & 1.6348009731725093 & 1.5527882701334503 & 1.3585464079625387 & 1.8905591472034333 & 1.559345765924312 & 1.5913851727241701 & 1.6372021600595887 & 1.9700063813818598 & 1.7832740127394848 & 1.558196352913921 & 1.8082914025174166 & 1.96765904409556 & 1.569017168304949 & 1.4174083006420857 & 1.2759307804320021 & 1.6915089076115288 & 1.0958041350027956 & 1.2629308515902 & 1.6826127445557677 & 1.8042384437959893 & 1.8779023173693155 & 1.4453495985042148 & 1.776140871686353 & 1.566834490899554 & 1.8084979573664792 & 1.8598197131303542 & 1.4066706206003567 & 1.359927280496848 & 1.40015214700032 & 1.9465240019766072 & 1.7189527585167235 & 1.4786061239519988 & 1.4852875771318 & 1.5490175901835195 & 1.468871037630216 & 1.1358052510556864 & 1.4167648737060177 & 1.6129902691698754 & 1.3225836746360962 & 1.355974600163086 & 1.4961187908589548 & 1.7747105053687846 & 1.6075525422441057 & 1.8232164463214537 & 1.7194710026341096 & 1.6487877171224563 & 1.8791034225718153 & 1.894426437709986 & 1.6964041313842704 & 1.9639383105967403 & 1.4995981936666547 & 1.5559198903444877 & 1.3968702082024573 & 1.9606318615931582 & 1.9025589241240168 & 1.7653281968823225 & 1.9058802801249533 & 2.027760132257738 & 1.4133068881471849 & 1.5384508859204287 & 1.6204156023406557 & 1.7799262080909937 & 1.9163476553598011 & 1.9395120791272222 & 1.6554262615841686 & 1.697948330641596 & 1.3377363534891822 & 1.4223515319545166 & 1.6445956966296738 & 1.5855436725055265 & 1.3946101722492614 & 1.349431547895725 & 1.3394392332744747 & 1.7480297307294839 & 1.865867909960393 & 1.5804789109170843 & 1.9283792583262294 & 1.9412877693665276 & 1.597795380159447 & 1.7016657571727913 & 1.773298295753961 & 1.9918698444911234 & 1.8076686046679302 & 2.0459941246183107 & 1.8210353777209802 & 2.0032730537805437 & 1.536772507730058 & 1.8528993686260826 & 1.9314238822610676 & 1.411523679581269 & 1.1013732705318084 & 1.1090465782428518 & 1.1452140079450375 & 1.2247046684793164 & 0.9286395712666838 & 0.9425088537289279 & 1.5332551440460642 & 1.6023290995217034 & 1.9989681787020568 & 1.7257895679274744 & 1.4489562215597127 & 1.2298436459683209 & 1.1650820961922619 & 1.736791380278916 & 1.818156449205253 & 1.3781136215563696 & 1.714775306565857 & 1.573926021591049 & 1.7518215977954665 & 1.5329140859764017 & 1.336081895517482 & 1.8402704676378874 & 1.7787088583786195 & 1.4545100989915585 & 1.7020672281273248 & 1.9543293814320832 & 1.6265578016272535 & 1.9379131208903877 & 1.8148597506161237 & 1.6360670901101757 & 1.635924815162834 & 1.6723392248513673 & 1.5250654188420778 & 1.3328267439285362 & 1.0628753021713417 & 0.9375138382177097 & 0.8615473458595425 & 0.984220403451744 & 1.186687314081939 & 1.2291644830830981 & 1.676085140330237 & 1.5652320759438658 & 1.9368419529515644 & 1.7534129407593562 & 1.501607280731886 & 1.6312180576949362 & 1.6507076166098174 & 1.2581623312016088 & 1.775769419706427 & 1.698062420502526 & 1.280571461262226 & 1.3520604792825373 & 1.0134160573502036 & 0.9006937328102307 & 1.030069368552707 & 1.4068019424177174 & 1.954248150064671 & 1.690618245604411 & 1.7229311451030258 & 1.6693012712774662 & 1.621418677773205 & 1.9512300613976226 & 1.663559529374001 & 1.6847122823234149 & 1.5992255411842802 & 1.468240558107322 & 1.9895536277953296 & 1.6877582655638754 & 1.213271028827581 & 1.2594390618180678 & 1.912092351477979 & 1.6670122454777663 & 1.232929916088212 & 1.763921382086893 & 1.9918730051178473 & 1.361415763703257 & 1.0362006454925818 & 1.1500063865629493 & 1.4129022060289407 & 1.8340529330343551 & 1.1697374486646337 & 1.8897274292061832 & 1.1086291342599142 & 1.629643056270951 & 1.5125776199190215 & 1.986955801478664 & 1.6200635512993866 & 1.9746272298731806 & 1.7845867980524597 & 2.1208965581654096 & 1.8908498828150904 & 1.8377325584259427 & 1.9834939645096528 & 1.9525751552224444 & 1.9112023452696092 & 1.9044080058988275 & 1.9948656764395176 & 2.0430031204979073 & 1.9530696791370723 & 1.7532748796144102 & 1.8681877730003837 & 1.7061266623302336 & 1.7101257258558622 & 1.9044999659221544 & 1.8098224279475896 & 1.8050829250590223 & 1.7241508642890686 & 1.3440955791017795 & 1.8390324418406758 & 1.5985217765623565 & 1.6766281141260304 & 1.454824023957076 & 1.5390754514977543 & 1.374744308605684 & 1.3238891889348225 & 1.5982461406576356 & 1.5566697932336726 & 1.2988254630957237 & 1.8936931508784378 & 1.7742371158775267 & 1.76802866931483 & 1.885620367046638 & 1.5074815768064598 & 1.9105523153344426 & 1.8236518041103609 & 1.7872584591108136 & 1.5102615892728148 & 2.0327219020406635 & 1.7228853214799214 & 1.7489407565832973 & 1.977898166987188 & 1.4866055207136004 & 1.7518013693739407 & 1.414539929834727 & 1.1067563067654551 & 1.0858161555909782 & 1.082084401140632 & 0.9735101756590175 & 1.1380364072541487 & 1.7716642427803695 & 1.1398932065380525 & 1.4871131772910504 & 1.5957121986532345 & 1.5769272204099087 & 1.3574835009396218 & 1.5626230249136404 & 1.2551548684906946 & 1.3969327219719017 & 1.1040652172755803 & 1.2072032728520483 & 1.8473906959874173 & 1.839063270444786 & 1.9056907025498429 & 1.9028141813409087 & 2.0182876354142922 & 1.876472785392795 & 1.5825643604944715 & 1.624068537915253 & 1.1408226521309321 & 1.796205018505222 & 1.8918453696300512 & 1.872628782776562 & 1.685796068922056 & 1.446587475486706 & 1.6995438199755593 & 1.3501962206654983 & 0.8867724447404745 & 1.197000526978841 & 1.8196320805618296 & 1.3227152275763645 & 1.1676046909469548 & 1.8056399153405376 & 1.8783037557894402 & 1.8206801467468117 & 1.847264863151023 & 1.8523266342447915 & 1.6759757825724195 & 1.7685813184038826 & 1.93260179432251 & 1.991320633414668 & 1.7426729629219189 & 1.9210243225909869 & 1.9267301493976188 & 1.564375997859592 & 1.4891511398662436 & 1.4465791588081938 & 1.901816298404764 & 1.5920604701849619 & 1.816668603296444 & 1.7028203905037156 & 1.1356183651971197 & 1.2111962354974268 & 1.4998951507808382 & 1.8108736408066268 & 1.9306571540257875 & 1.7582962153208797 & 1.6334451929708431 & 1.6253337519179374 & 1.3159174116276307 & 1.660576419911526 & 1.4547875658704297 & 2.0249459344858893 & 1.6845152485570278 & 1.169964438053257 & 1.845797147064129 & 1.662657711997743 & 1.7551331152362513 & 1.9163965083718915 & 1.6866735786352338 & 1.936933350238 & 2.108525978487246 & 2.0547495427284073 & 1.549851609282529 & 1.5219896974321487 & 1.8061883420038867 & 1.6941595202399802 & 1.5316763808180336 & 1.5710683280687028 & 1.4847877687579525 & 1.6233874082677322 & 1.32452214489833 & 1.7810493526243902 & 1.6332381053318672 & 1.9902683801662093 & 1.769283965526003 & 1.5328164196591152 & 1.194001040632074 & 1.8092047988012068 & 2.018579209322724 & 1.8263431463639663 & 2.025382947071695 & 1.6497987037109898 & 1.9398214779906506 & 1.837977199629645 & 1.4853708347761492 & 1.7633105805442015 & 1.7955835559417799 & 1.9655778611698078 & 1.876075955742308 & 1.4255906064339192 & 1.7419572340489482 & 1.771354690424468 & 2.022722943681085 & 1.3420497004069918 & 1.2486407227357672 & 1.3144396077730514 & 1.1172845605819834 & 1.4450789325442963 & 1.3821026324929482 & 1.3890108403865562 & 1.6446068856342186 & 1.378399708992315 & 1.1989859626574175 & 1.7646084860002413 & 1.6890369246560961 & 1.8231478544544297 & 1.1968159549124044 & 1.9543707402538357 & 1.67398121739334 & 1.5712076495475111 & 1.5707933586551723 & 1.7243552629490233 & 1.9397560851649898 & 1.7738967960099326 & 2.0357592708589123 & 1.6791973817704375 & 1.9564091008945395 & 1.8751282265266889 & 1.5608141428820348 & 1.7007818199719045 & 1.7499296041577495 & 1.5262804983149922 & 1.8966941980476855 & 1.8233678095419974 & 2.0455837773018644 & 1.6218397697763205 & 1.389418125675031 & 1.256897575664063 & 1.781348002513 & 1.606073532605628 & 1.374353843423985 & 1.317864439832992 & 1.5622473382293873 & 1.7339396242984544 & 1.1468386594598734 & 1.4360192057621974 & 1.3309154088718993 & 1.6187128961428834 & 1.7495895769257397 & 1.7893041885565657 & 1.6809485005569653 & 1.8674807365711963 & 1.7328902769488919 & 1.9181588275426054 & 1.4634053033799475 & 1.7586314469384063 & 1.9419566893923634 & 1.74545091236608 & 1.5965192978539064 & 1.5567210945534689 & 1.8871494792651127 & 1.953320011656709 & 1.8907835251516476 & 1.740687698669032 & 1.6296826943104992 & 1.8141997852855731 & 1.821844026420153 & 1.9287090743082762 & 1.974018468843715 & 1.9814615439088388 & 1.9937668824147639 & 1.5543829584158415 & 1.360132309463404 & 1.456896691238589 & 1.163861019712125 & 1.1360698646632719 & 0.9782656313991551 & 0.9059863618976494 & 0.9508839492611894 & 0.9388877052018417 & 0.9041635270298117 & 1.1369576786648423 & 1.9814648004823288 & 1.8486028817288414 & 1.7633766791414327 & 1.8154343223612863 & 1.7634782049336215 & 1.3078069482155144 & 1.2333556710542612 & 1.388823783841163 & 1.3024684756960592 & 1.8020436720524684 & 1.418335548658811 & 1.9694307860416154 & 1.9331556483769123 & 1.6264583748139005 & 1.657004146301872 & 1.734310458090324 & 1.900295421415058 & 1.599331761751036 & 1.7198644908856981 & 1.7736714975643881 & 1.9534786720432513 & 1.9338263830660063 & 1.7977893763989237 & 1.9206559500670108 & 1.9553017241827668 & 1.804847278683832 & 1.656170158197489 & 1.641645553888044 & 1.9681646780415527 & 1.583160425080812 & 1.8671362102925069 & 1.509860564911515 & 1.3798834419448727 & 1.9925584008046502 & 1.727781640674282 & 1.6637316212085067 & 1.8381554820062889 & 1.8102615639433648 & 1.5772412065100208 & 1.8056954166157748 & 1.9565406704018713 & 1.4693483702347376 & 1.3762052157679885 & 1.6913094452246134 & 1.556228483823444 & 1.6032328769793536 & 1.2178127739342968 & 1.9676529672481677 & 1.930743719774087 & 1.7701447340527212 & 2.0417397389880945 & 1.8872119528642217 & 2.035585098489716 & 1.8289082755681 & 1.8445830543840966 & 1.576787881533704 & 1.850305026479793 & 1.2052456341057467 & 1.8542011446731412 & 1.622754387136644 & 1.9227463009200956 & 1.8777356620408767 & 2.0283182587936555 & 1.9907232403948167 & 1.5918401116461196 & 1.5414508956854394 & 1.7002329072194382 & 1.7747241178865898 & 1.5568788359683476 & 1.8705291246987525 & 1.7532513945798467 & 1.824759863971367 & 1.9621181707354287 & 1.7959685709153448 & 1.434994071833273 & 1.6770718037223626 & 1.9571131894502394 & 1.665042857588741 & 1.536440010919065 & 1.9670368921388777 & 1.948883102157122 & 1.5945468766519575 & 1.0604862337125605 & 1.026117241919789 & 0.9519924066924336 & 1.1138932845535536 & 1.0367967588890092 & 1.086516780960465 & 0.9086321844616425 & 1.4349872506019703 & 1.499503993377609 & 1.6251180433604449 & 1.195296366629708 & 1.1051769632344703 & 1.2255917943161247 & 1.2914535614234883 & 1.484688966797977 & 1.8653932528821433 & 1.2102962888358426 & 1.2583401097825868 & 1.4716607852997097 & 1.477110080635974 & 1.6237085146105243 & 1.8020393125815422 & 1.7802932899960924 & 1.8474544421502677 & 1.8711379902569076 & 1.8352420604456505 & 1.7128373303996642 & 1.6520896846223696 & 1.7661558889987437 & 1.5300569866464417 & 1.8796627817807836 & 1.9173081356895325 & 1.3755009998286858 & 1.4724994230947754 & 1.5000616969715945 & 1.3185553014223805 & 1.418473227877601 & 1.7522994736066153 & 1.7299063740808913 & 1.8027586227049843 & 1.847933033956097 & 2.0464238229738667 & 1.7723728884315846 & 1.4900674522917219 & 1.596939837472818 & 1.5724012760848503 & 1.7343114193804186 & 1.8569745201911514 & 1.9158918282777144 & 1.1764782250406456 & 1.704601909962713 & 1.760702614286003 & 1.723599616189003 & 2.06215250682891 & 1.8849340726169106 & 1.5413974715298002 & 1.6636670477041648 & 1.7542740352649726 & 1.9929774234160682 & 1.4244693703098208 & 2.025514010440352 & 1.907193168208751 & 1.7794371468380745 & 1.8221374020127319 & 1.858816099255746 & 1.6633391055570215 & 1.8671229686073942 & 1.4614013975171023 & 2.077624888065509 & 1.736876786511732 & 1.9408390430253954 & 1.936166320163696 & 1.8463230917444047 & 2.104021621345814 & 1.8946952298533548 & 1.820922893182131 & 1.5811541984673192 & 1.0342427898957443 & 1.3820340847116837 & 1.2347299364840125 & 0.9716785023321157 & 1.1794856505767226 & 1.1068430235020037 & 1.247338660366184 & 1.237976583727096 & 1.3609021144015285 & 1.2096358119578008 & 1.7052461484813584 & 1.6294166604690243 & 1.970456764869389 & 1.967986921952512 & 1.8280030804487875 & 1.741631058864414 & 1.807854892714853 & 1.90817697044523 & 1.9630780809522286 & 1.8876871689965598 & 1.2113624033132357 & 1.5486698488552357 & 1.5955443213370422 & 1.1584793864433909 & 1.1862230392860993 & 1.134412055584058 & 1.171556238812226 & 1.0202144864392244 & 1.325815117851496 & 1.1699882756583722 & 1.5158778182189707 & 1.686609362454607 & 1.540281468532036 & 1.73766742757703 & 1.738154601201111 & 1.7549117372423733 & 1.8880709257541581 & 1.66274548851136 & 1.7659592050975337 & 1.7581153120189292 & 1.1397104118926769 & 0.9523155268511087 & 1.4246222519753273 & 1.9800298368708225 & 1.8028887043182795 & 1.7792092499110423 & 1.5791461205424882 & 1.5422656301353124 & 1.3306954636869661 & 1.1789409965054225 & 1.2747043364475275 & 1.0925034983165516 & 1.2836906362324165 & 1.1125661661937758 & 1.622807996399835 & 1.3346685501099569 & 1.6690131357978546 & 2.066345973767571 & 1.8184726345492528 & 1.4651785018587882 & 1.5849657773358352 & 1.7597161240916273 & 1.9337019569219132 & 2.006982743409175 & 1.2719839513437161 & 1.3289987242829016 & 1.3786391308084367 & 1.354653751155413 & 1.2118022135340485 & 1.7302193884760135 & 1.5021637424496157 & 1.4464450041557002 & 1.2116947991186169 & 1.8368315202313072 & 1.918417525739996 & 1.8076414402837326 & 1.8522607769904798 & 1.960662551890447 & 1.8048736419966396 & 1.800429015949475 & 1.7996632003482473 & 1.7307738007064448 & 1.8061857741123861 & 1.4283760914288202 & 1.3319543177523108 & 1.6034372691677923 & 1.8205977449554382 & 1.651787231102947 & 1.8698915142242647 & 1.9241736210151434 & 1.9635846587383619 & 1.612386293005372 & 1.2988738291673263 & 1.687958990531785 & 1.8996684189574877 & 1.5623193693351383 & 2.0003710231754384 & 2.1168956240466072 & 1.772754325439409 & 1.3494915118021085 & 1.7479214437866364 & 1.7098338502288295 & 2.016298097412178 & 1.8155354214972954 & 1.8467194712063646 & 1.9433539013108456 & 1.911324610439847 & 1.4118538108175054 & 1.8315255795854541 & 1.8871834504109122 & 1.6553582057445189 & 2.073382874732994 & 1.7101418010087626 & 1.9445551215762247 & 1.6260238775317288 & 1.8174437631050333 & 1.9125266958294789 & 1.2736473667556432 & 1.2424950178064935 & 1.4358153789602481 & 1.0782237161642516 & 1.0728742275710215 & 1.06585192514482 & 1.007433674699503 & 1.292148179286435 & 1.153270734987705 & 1.1372118716526753 & 1.0663820173584102 & 1.2292790635306707 & 1.1702780389566028 & 1.1694068352677836 & 1.1458527631942104 & 1.1493614544101778 & 1.3928215578747065 & 1.4559185167209798 & 1.2426684007955606 & 1.22222152629832 & 1.2165028532611033 & 1.452165593721753 & 1.5102751597476878 & 1.4165266796576281 & 1.5317492464381721 & 1.5375718018941098 & 1.5479811017858147 & 1.8984715969892203 & 1.669332609648225 & 1.9226747186296622 & 1.869554119160259 & 2.0276553115999536 & 1.8335960253912824 & 1.9287332369794803 & 1.0176401348698556 & 1.06394541724933 & 1.0556125132053236 & 1.2769638524474305 & 1.5260926857778356 & 1.404583186660651 & 1.68915221993914 & 1.6821519059855974 & 1.9567932355007345 & 1.8534698828074527 & 1.680003270112456 & 1.514964450144066 & 1.7746708565665128 & 1.5326132262018037 & 1.5474957079287146 & 1.99751595007709 & 1.8790832229632766 & 1.5079678025312404 & 1.5743508666637427 & 1.4647094846866318 & 1.3261907002527011 & 1.424804528007104 & 1.6190899706306847 & 1.6849590890441595 & 1.1594224135542919 & 2.1165281515019316 & 1.574198360112396 & 1.3298632189451551 & 1.3509607747501724 & 1.4508755241623124 & 1.9272800198114566 & 1.9400360937641652 & 1.9050205153900177 & 1.9830242634143709 & 1.9953891606071896 & 1.6955800666279222 & 1.8144510072495397 & 1.5471714713613192 & 1.5430112306977928 & 1.0485470536348245 & 1.1636227882656984 & 1.3510796137352703 & 1.3544572777813026 & 1.2913852558956096 & 0.9766738305624625 & 0.8488962076858614 & 1.3227486375272637 & 1.0408345330275994 & 1.3437537579320549 & 1.3150297820893713 & 1.2480481640159267 & 1.0054349298074494 & 1.273140205539067 & 1.2488517377254191 & 1.5606534841313147 & 1.5805419555843179 & 1.4433428113035698 & 1.2560219913351123 & 0.8930447347215699 & 1.567726810819499 & 1.2534855388767874 & 1.9941947965702387 & 1.810845673775014 & 1.9096925325701548 & 1.8294885847987228 & 1.6438177093386683 & 1.7575560183829968 & 1.8417021582538209 & 1.7365194064873295 & 1.8165476594025198 & 2.0661166395799087 & 1.863935292194904 & 1.924502063229408 & 1.7971164657251595 & 1.8970168259617322 & 1.6558033833104184 & 1.9013422230504566 & 1.100516980609383 & 1.035585051399692 & 0.951173546355523 & 1.0905207689540193 & 1.1147884767630847 & 1.0930786220681155 & 1.3512277603259693 & 1.2665131275490475 & 1.7906186004934876 & 1.6146104483932537 & 1.977309740749992 & 2.0289186043901903 & 1.6385705764899545 & 1.903360404760087 & 1.60913110619705 & 1.863276390116831 & 1.8219098228523412 & 1.5459150734419373 & 1.968051437330478 & 1.6197472143344605 & 1.8801653390501398 & 1.6015278495073124 & 1.8565440245931468 & 1.687749374783462 & 1.3524436600947325 & 1.313131795716651 & 1.2829761629345544 & 1.65200522986375 & 1.9792261879985533 & 1.8661347500886476 & 1.5795409935092366 & 1.806868141576912 & 1.8679961417433948 & 1.560548957185067 & 1.6121256402635216 & 1.7303127027444702 & 1.9169631569388854 & 1.7070024267980863 & 1.6853328219842059 & 1.6828797620390472 & 1.515170390281876 & 2.099310846890384 & 2.0062070383382467 & 1.821742631142971 & 1.9222146650453884 & 1.852025328836611 & 1.7750412403356277 & 1.6462102766035596 & 1.8650961743240686 & 1.3164684507125428 & 1.5160685167935428 & 1.8674420546987027 & 1.934755602613938 & 1.7059203741838636 & 1.7395173394889214 & 1.193002811258331 & 1.4237200381777984 & 1.4860628366729405 & 1.311700336633181 & 1.4911138939507094 & 2.0544001108646457 & 1.9622285389060565 & 1.02138238744278 & 1.4644723451423733 & 1.637660532946138 & 1.649287792443751 & 1.4840645467825107 & 1.5420017670821329 & 1.5718707803183236 & 1.6667814816565878 & 1.679761448104639 & 1.727326474120865 & 1.7182654970019062 & 1.8591630470433207 & 1.7846294970661458 & 1.9081953479465024 & 1.8700888392038766 & 1.2910372486611872 & 1.1046095744983153 & 1.7956552742028615 & 1.8678935231653853 & 1.7683298900456828 & 2.079197670418612 & 1.8926740404948763 & 1.7023275648530298 & 1.2682872689208797 & 1.3397282972798301 & 1.2386712378991755 & 1.3297596726473657 & 1.059886830470181 & 1.0649275334004422 & 1.144245808174669 & 0.9440567438150461 & 0.8512059724557836 & 1.0367542857697771 & 1.2064186150752378 & 1.2062406980220564 & 1.1674327266149715 & 1.1386725338798438 & 1.292769996854647 & 1.286854413746907 & 1.5483984519354803 & 1.7695010662847852 & 1.4758915813507298 & 1.2290618571641385 & 1.337727810242016 & 1.2039119053537308 & 1.054511617201693 & 1.2414286818708344 & 1.1668400210578418 & 1.1706074948922063 & 1.0247676353122779 & 1.2283507670529694 & 0.9803624715267084 & 1.2007581266916296 & 1.1805998809553429 & 1.1737606138382246 & 1.1419677815401996 & 1.3250656482969088 & 1.250786458364457 & 1.3609106114862917 & 1.1905753522870532 & 1.17893256437182 & 1.0742529264154848 & 1.3021328689247602 & 1.0204178855023844 & 1.6652662316478173 & 1.8495384481381043 & 1.5976222922340177 & 1.4414090763337712 & 1.6793863596848353 & 1.6557624036057095 & 1.4772663604487029 & 1.6520516416140358 & 1.8225389667600274 & 1.3036142538721667 & 1.5411699921032962 & 1.151344223028441 & 1.3224895293263024 & 1.7572007069515083 & 1.3349102082187467 & 1.6416234940955667 & 1.593804293141101 & 1.2851320766106542 & 1.9634661063588155 & 1.570904975070743 & 1.7841735545106137 & 1.6051524502415386 & 1.435909697513672 & 1.5130117870905735 & 1.5599594092685298 & 1.5594037593658912 & 1.3846004945555268 & 1.9330807370753342 & 1.6561111413629532 & 1.4613783903115545 & 1.3530288072684757 & 1.6870103629465545 & 2.027149010559421 & 1.8064970450951012 & 1.8411147751978416 & 1.373534483554387 & 1.6504742581948255 & 1.3949012387239434 & 1.3644483427121765 & 1.1550454635681857 & 1.6220146843464274 & 1.3678019637774246 & 1.4879383294697783 & 1.5539179052918384 & 1.1063151587830113 & 1.1085927362541736 & 1.2024290827412356 & 1.3974462707510273 & 1.3145508569568405 & 1.9904934131187473 & 1.5734788321359607 & 1.6050234806792834 & 1.6276769637476347 & 1.7213814145447262 & 1.5341207317229335 & 1.4573633352791244 & 1.7849107204990833 & 1.7108180363884897 & 1.7770047076869735 & 1.7716575968963593 & 1.5807683223201312 & 1.7266207047786186 & 1.7388695864638544 & 1.5046855998383273 & 2.003045311558052 & 1.86446714802158 & 1.9022660988226923 & 1.914007304425548 & 1.519605294694327 & 1.7696536081506173 & 1.8487405641565784 & 1.59234723093614 & 1.396417244674519 & 1.9493465742442362 & 1.9339048075794216 & 1.5690586987072381 & 1.452133277483059 & 1.5586551580049368 & 1.5834928181966175 & 1.7805312817760182 & 1.593854451280778 & 1.1283241495607699 & 1.2856104627690141 & 1.7336911282320961 & 0.9727967323106818 & 1.3647449219388552 & 1.0784026209348552 & 1.0420039662755654 & 0.9829099366843981 & 1.2041585233079364 & 1.226955491553974 & 1.543707315599419 & 1.4138759574561057 & 1.3673175012805876 & 1.6946373158534604 & 1.5034979787862994 & 1.6770514675099366 & 1.7834418086384247 & 1.4934895097786054 & 1.9637079019153652 & 1.7699715592274596 & 1.611979643013666 & 1.8899306944164918 & 1.8417724291784483 & 1.8447954306493344 & 1.5150849533563062 & 1.4266621142601674 & 1.5132480798810566 & 0.93679629155451 & 0.9501483745667086 & 1.0338106855956113 & 1.2786354290213524 & 1.4142674266697917 & 0.84933591588202 & 0.9505111041498774 & 0.9276391631992783 & 1.4513660496414122 & 1.337294517528309 & 1.3902497102322744 & 1.2117141521563999 & 1.7827847829724548 & 1.2779129692830309 & 1.555320249650598 & 2.042967591642904 & 1.8402057403278886 & 1.920954295254088 & 1.616458467316943 & 1.5632426439440708 & 1.818630689105618 & 1.9087705005606754 & 1.58978668355011 & 1.762423586903623 & 1.9017458729679382 & 1.5412506436845799 & 1.6314668897493445 & 1.5248625555603974 & 1.8478650701994357 & 1.6972290502787257 & 1.7929164239211628 & 1.851848689475065 & 1.0301500118411218 & 1.5196339410505124 & 1.6294854143287247 & 1.8943398834298302 & 1.7154747446621892 & 1.6295379782535306 & 1.9196814985563608 & 1.9760125837791056 & 1.678651520633068 & 1.5364795356793828 & 1.6541668691456197 & 1.752484842731829 & 1.4317973057366815 & 1.055145074352282 & 1.1409681126632387 & 1.1516292662876981 & 0.9270089348030478 & 0.7884724624587747 & 0.8648156006296582 & 0.8227930146813381 & 0.960041535369548 & 1.0949127336735913 & 0.8945426409652638 & 1.1684562401166867 & 1.1565369991851602 & 1.1054665115902964 & 1.602409947930846 & 1.3777754448775181 & 1.9086028392084897 & 1.6199509790030777 & 1.2697018011534997 & 1.3321497825139956 & 1.6842104594532754 & 1.954742766347211 & 1.9809447129280733 & 1.2310667454137563 & 1.6773410326233822 & 1.7359566182578554 & 1.7976892479962738 & 1.096062609971466 & 0.9659916459241109 & 1.120612923250034 & 1.2055026336491015 & 1.5869105201855658 & 1.8484071490514689 & 1.9005609708797548 & 1.8907956417044884 & 1.462780465747208 & 1.1689528220957288 & 1.3544248634183427 & 1.3936673424231465 & 1.587311575032493 & 1.143964056157002 & 1.1772160586804943 & 1.6338903484699403 & 1.568852084034335 & 1.449333944099992 & 1.702203442857166 & 1.445608756490044 & 1.7408967971775664 & 1.3243271150107678 & 1.160208721562938 & 1.1462325627001664 & 1.0972245738927247 & 1.1871093686819096 & 1.146194533973297 & 1.6849330014576018 & 1.5476101928109727 & 1.511246445445519 & 1.36084360924042 & 1.2740528945918865 & 1.614280496937071 & 1.2272328382325057 & 1.6230763822610599 & 1.7746038827612896 & 1.308668874199442 & 1.5227042367124126 & 1.457894383036434 & 1.7155362868633866 & 1.6605208081332903 & 1.355498814014132 & 1.383815432407377 & 1.3565668858613893 & 1.6217397862327372 & 1.732554540408651 & 1.7730185465412718 & 1.5135154550358816 & 1.9140433616871835 & 1.607573659715646 & 1.665304948158358 & 1.2991278577236305 & 1.098044031105731 & 1.608547837104051 & 1.0588744474169092 & 1.4536418438481957 & 0.9940974331312076 & 1.2958890287851048 & 1.7133777781138158 & 1.7712012874965877 & 1.920876788868263 & 1.8723597720452492 & 1.742763482875747 & 1.8960916172186237 & 1.8860423119080207 & 1.7554926266569217 & 1.8111598762696175 & 1.907949849948686 & 1.7113125977777537 & 1.3257781308855459 & 1.4921767663893097 & 1.5792678059797667 & 1.432864789669123 & 0.9991909721798642 & 1.0856446626828629 & 1.1243586903802174 & 1.0536104173476728 & 0.8140339902896682 & 0.8791524830041466 & 1.1896270278306569 & 1.427945578091251 & 1.1227504713748002 & 1.2053156098489362 & 1.9084742132049624 & 1.5880883101110577 & 1.8413321270969811 & 1.821747276366444 & 1.679746860262395 & 1.72965550686073 & 1.7920432652243499 & 1.6596629601791038 & 1.149202422611062 & 1.1689889301973715 & 1.2783308388157846 & 1.1502149205730587 & 0.8178260234661533 & 0.8454232984146818 & 1.0258140483670168 & 0.8765251720051078 & 0.8509485981308542 & 0.8598068712263004 & 0.7477120675559128 & 0.8640814765566 & 0.9121012270900548 & 1.2257121235296204 & 1.1108027995258267 & 1.049706097633804 & 1.2135717991611927 & 1.5380237682787103 & 1.2065637222537353 & 1.4737561397556338 & 1.4673305243286674 & 1.297677301896166 & 1.3269869330006185 & 0.9977523181481169 & 1.433371053863937 & 1.7956911223670007 & 1.4527129886307575 & 1.8814120434008537 & 1.8478337177692428 & 1.537645099152863 & 1.3717683010896207 & 1.6268575522434536 & 1.458982989925253 & 1.811053575270542 & 1.9665408839322716 & 1.9869589146420743 & 1.9661032643985477 & 2.0057239890494643 & 1.803355474712316 & 1.892697247948744 & 1.9374326278475944 & 1.642485325305581 & 1.485696113313494 & 1.4220339828677075 & 1.7094270999933343 & 1.5807433199590015 & 1.3477097687915969 & 1.060483983571825 & 0.9904189335285986 & 1.0512666349513313 & 0.9334212793485266 & 1.0405771593980204 & 1.1350325460130715 & 0.9394754598924346 & 1.0193356548071744 & 0.8616348300564243 & 0.9119515835206953 & 0.9661611715988614 & 1.4538969005307087 & 1.029045332340004 & 1.485029360832436 & 1.7458327310918624 & 1.2430392849866112 & 1.482844516895009 & 1.5289946381972228 & 1.2626519915355725 & 1.3492318276206348 & 1.5446891738622717 & 1.8880244332155331 & 1.5340370997583954 & 1.3143473985587601 & 1.8849415694323808 & 1.7913423297183622 & 1.6182102425833427 & 1.536615026290792 & 1.824671743683079 & 1.9335230549001479 & 1.9680446398529337 & 1.5983268415898901 & 1.694117476314961 & 1.2822017151079366 & 1.4231729669294273 & 1.872475816525378 & 1.9001261780934038 & 1.9755111077490564 & 1.8593568093588184 & 1.6288391956430177 & 1.2012082061524538 & 1.605241449413267 & 1.944813882969481 & 1.9155077930220135 & 1.7690025374686948 & 1.7438808672855006 & 1.7517120127816093 & 1.6905444335530613 & 1.8038614128892458 & 1.369223461297297 & 0.8281277382614022 & 0.8535807019933185 & 0.8955947177952567 & 1.007027634601204 & 1.1761386837396197 & 1.1429368432938638 & 1.15198408403121 & 1.154355907422579 & 0.8660966544603759 & 1.0578807287219898 & 0.99129601057898 & 0.9591971558778499 & 0.7537026962540191 & 0.8746117395215948 & 0.8571799729724234 & 0.8908715397381715 & 0.9962031043027244 & 0.8610431707132359 & 0.8652279854317564 & 0.8880248540398236 & 0.8701774994587265 & 0.8103669300215396 & 1.0062873747378804 & 0.8500349780044495 & 0.7771176904226518 & 1.091903099412656 & 1.0370896536612761 & 0.9335102600676233 & 0.9289131692907425 & 0.9856802257933525 & 0.7824736484534547 & 1.0491792271876246 & 0.9226166230477095 & 1.6727421960328794 & 1.5116227848259047 & 1.6537237490746863 & 1.6089363929391791 & 1.4177092050843882 & 1.6869700580529912 & 1.5871470960782479 & 1.9789261949779566 & 1.9043951149565221 & 1.6614178727423272 & 1.9781873532229572 & 1.8852149676109813 & 1.7033485128649968 & 1.2260427341937623 & 1.1046269690015325 & 1.0971684506480164 & 1.174664720304024 & 1.3530472599966246 & 1.4968286370692017 & 1.3942815714492958 & 1.7515436820271495 & 1.780218205061557 & 1.671529352452731 & 1.9071883676943882 & 1.7538260431885848 & 1.8131673804217365 & 1.8550728645819083 & 2.051192280286822 & 1.8519315857980627 & 1.7883776714336919 & 1.8279615569441305 & 1.592302799040629 & 0.9878580193447759 & 1.0302502530689661 & 1.081241170251874 & 1.3055663058392868 & 1.6368740595179945 & 1.9053981905783826 & 1.5592852534532582 & 1.3699384701971977 & 1.7238020995197831 & 1.6794672402434816 & 1.6192851457826951 & 1.3765832153308448 & 1.7518731539146177 & 1.3003503522864426 & 1.2770121491547788 & 1.4980802559991573 & 1.293369211185847 & 1.3561965682087018 & 1.524813001185031 & 0.971554226976163 & 1.7148444775997544 & 1.700825564908426 & 1.8799605057640159 & 1.9625390197371753 & 1.8983169605702488 & 1.6167785124942853 & 1.135662273630446 & 2.097880304776395 & 1.9063340918464426 & 1.6905471227590518 & 1.8419206230673335 & 1.8646829217716243 & 1.8805729286490704 & 1.7053831878439256 & 1.8226347676483128 & 1.6453953447543819 & 2.0806433199128858 & 1.873313598694589 & 1.5056916670794975 & 1.272298492013934 & 1.421913208815541 & 1.4798758755383834 & 1.455369561196253 & 1.3468874648921645 & 1.2782372420594674 & 1.5053305637791106 & 1.614779746872839 & 2.0288404463683976 & 1.8115661604817221 & 1.7330445388170845 & 1.8739836515314041 & 1.8813328630537745 & 1.8296840772477874 & 1.3461688078711052 & 2.0816502108754302 & 1.9051458050497432 & 1.8769260631351286 & 1.9806280516919597 & 1.9922502417490724 & 1.4069080684317938 & 1.9083458394048198 & 1.487153675002293 & 1.607476160908978 & 1.8694516839253694 & 1.377213562495167 & 1.7230338536093655 & 1.6880087989562578 & 1.3483918437772844 & 1.5683278337913622 & 1.3503987618348452 & 1.0964976050543627 & 1.468911981617584 & 1.1983082608227202 & 1.311326498724879 & 1.8891650137394131 & 1.2893324657865735 & 1.5957121268435472 & 1.8823698013201235 & 1.7109406330486312 & 1.7794896723750941 & 1.391198054747166 & 1.513175365675637 & 2.0335999352934575 & 1.8988393133691888 & 1.097995285731257 & 0.9196487847354635 & 0.9756373372230149 & 1.6715520278482774 & 1.5213072859653811 & 1.9058505892003121 & 2.0082420282635165 & 1.1959099018165544 & 1.2459296257585577 & 1.372535479705297 & 0.9888805925425667 & 0.9678624520795525 & 1.111921734047911 & 1.4001581578182565 & 1.4756903335220266 & 1.5065570828121697 & 1.7007201238998382 & 1.3029990711017942 & 1.9034997074087914 & 1.6822262775155965 & 1.5832774852340303 & 1.7077673977652275 & 1.6549831513158582 & 1.3599717097438824 & 1.5058711765829285 & 1.5393217802002483 & 1.6740204219168089 & 1.8297207268354394 & 1.0501967650584048 & 0.8418219918489506 & 0.9501535344749348 & 0.8068837542431542 & 0.8281423533854404 & 0.8362697545077371 & 1.234316368573719 & 1.0919850506620918 & 1.2151243069537592 & 1.0062011726238496 & 1.062393784954657 & 0.9666234662483629 & 1.0321427666150411 & 1.085639481394655 & 0.9491684358352948 & 1.4629453254749731 & 1.0403030934895716 & 1.4427426914021888 & 1.8238993300973645 & 1.6243919382321355 & 1.6726554726037053 & 1.9093632404029115 & 1.9083393155696022 & 1.8996072033979143 & 1.5703091394159754 & 1.5593741575913476 & 1.7275921291851848 & 1.754013592888587 & 1.4757635732265115 & 1.826032890581498 & 1.6005604147408472 & 1.765414164121507 & 1.9240992902478593 & 1.9225500028338356 & 1.4913156261010554 & 1.8816845911542721 & 1.9535331318424904 & 1.9108076433953516 & 1.45577811800972 & 1.7862610209470855 & 1.9776724315571577 & 1.8160935902100206 & 1.9893793540604512 & 1.6496857571938197 & 2.0445928878266884 & 1.5031461948419897 & 1.634954211131476 & 1.9953430105589618 & 1.9832705317783512 & 2.0965072426784257 & 1.6657831684840614 & 1.7965452073263608 & 1.8550982871602284 & 1.7759881936046964 & 1.5796476117266702 & 1.3358893908874532 & 1.4903412391925848 & 1.365424737322462 & 1.5717421844917907 & 1.8714818983968453 & 1.6652487957236954 & 1.556772101220482 & 1.927547555618061 & 1.7963185916012439 & 2.0300584778398822 & 1.8028621307283919 & 1.8718547206623266 & 1.7980641545583416 & 1.572388237493483 & 1.685657107703112 & 1.7795501172286594 & 1.3476437290707 & 1.78900829702273 & 1.9421294082223743 & 1.628156803329903 & 1.673938237530415 & 1.5968930966398527 & 1.8339073018213212 & 1.8061973818363515 & 1.4883817438410014 & 1.3208438412289794 & 1.1892466616430795 & 0.9679162583742612 & 1.5928172221575019 & 1.5904919724083955 & 1.2232273472705828 & 1.5064552172175527 & 1.278045724988019 & 1.6858318505075318 & 1.8270513351463091 & 1.9377922252103212 & 1.8617669764993283 & 1.9000246855790788 & 1.6319038657151694 & 1.8800787808697437 & 1.8051358818777312 & 1.4361326150485576 & 1.7008005147612326 & 1.4548822855086763 & 1.6307307361542198 & 1.769509627955048 & 1.2846745250050093 & 1.33336942687662 & 1.593349600606447 & 1.1990626375755142 & 1.5521489776901212 & 1.177428606263079 & 1.0237121309462527 & 1.21939214114506 & 1.2525377159627382 & 1.0000566240477478 & 1.106089806647216 & 1.7672470299271872 & 1.8124093622662736 & 1.7331909850068887 & 1.0999541300176112 & 2.0141353354449696 & 1.7111245913745126 & 2.101497527130275 & 1.853332428657509 & 1.6393962798290755 & 1.6394321630407462 & 1.579284622950893 & 1.6633643020897855 & 1.5816067930827462 & 1.536638463856599 & 1.5700353933100077 & 1.695391134069146 & 1.4680153500339435 & 1.7243112234889308 & 1.1212016176956805 & 1.146241838979533 & 1.2512176492705664 & 1.4671192587789978 & 1.0210559673424078 & 1.3894968745378462 & 1.4693502880351037 & 1.7515423650437043 & 1.7933439099422879 & 1.9559782607677605 & 1.9489589426772438 & 1.4572011875348072 & 1.141360087576509 & 1.2150548646642347 & 1.4626287536208311 & 1.6659327878574735 & 2.0357528827255202 & 1.827375726926662 & 1.7705305319556468 & 1.2314783030212988 & 2.018885662204308 & 1.8991116719770569 & 2.0759982380821445 & 1.8313134277123373 & 1.550544107234345 & 1.3445662398612817 & 1.7736772354017152 & 1.7026937812871437 & 1.8994488551174702 & 1.6022981355306574 & 1.629453884510332 & 1.3138509242119984 & 1.7441710471261869 & 1.642113176013192 & 1.7064144217412813 & 1.1312872718329452 & 1.0460734106046359 & 1.071968373569933 & 1.1805773412449252 & 1.1480610935310407 & 1.155947691319058 & 1.5529776542123057 & 1.0458609604909264 & 1.060386614154172 & 1.229114677876708 & 1.763298529329558 & 2.092825053268416 & 1.731462013963953 & 1.9638003292940376 & 1.9325919185173053 & 1.5954138263440703 & 1.8538985892415194 & 1.4580443939876317 & 1.3764557550636771 & 1.641515746696553 & 1.4937076098456594 & 1.6468313715875251 & 1.301615611158819 & 1.1142146924226244 & 1.0888298700411676 & 1.4317686574995308 & 1.2864769181764406 & 1.3770937061652495 & 1.3524485794623964 & 1.5029659130888708 & 2.0007434045529653 & 1.9482317200836492 & 1.3605832854075095 & 1.270986240061585 & 1.1166314500914014 & 1.6985384492535938 & 2.0717843771955953 & 1.809317213936393 & 1.692560469816108 & 1.991314832145461 & 1.8640758616995932 & 1.5876687725946907 & 1.7425376413896514 & 1.826223318272644 & 1.5307319348404351 & 1.4088141527275089 & 1.7108364681034756 & 2.0628456999555684 & 1.8053132643006558 & 2.017484709130143 & 1.4325721851791144 & 1.4817471739883186 & 0.8317398081894991 & 0.8731894401083188 & 0.8964018359765946 & 1.0568822851194903 & 0.9319086584111184 & 0.9841236012500179 & 0.9931601714305374 & 1.2622467160156718 & 1.6193720107767577 & 1.5925749840069392 & 1.3968565906121926 & 1.7593267926637297 & 1.8495728577388317 & 1.910266627493744 & 1.9449223309067025 & 1.558431552115301 & 1.9568902615235748 & 1.6003741334076598 & 1.565095750402845 & 1.405365253590647 & 1.6210172200405055 & 1.5301249475640857 & 1.9106562080112002 & 1.8454313344751365 & 1.7706503279028942 & 1.804949679866232 & 2.037535957085262 & 1.7029369201077509 & 1.6851644897938292 & 1.5889279109335475 & 1.0526412629570239 & 1.6253595307435542 & 1.1111346201644767 & 1.8526551083505194 & 2.115382318618979 & 1.998368454336156 & 1.8551925196768104 & 1.1628209381843864 & 1.5325500852746643 & 1.3482556912345314 & 1.8650891493120019 & 1.9996797140579827 & 1.9284025924644808 & 1.9924229475541126 & 1.8499616595471733 & 1.727687134326699 & 1.9427531246902354 & 1.6996761961100715 & 1.3930927913909115 & 1.5576609291471648 & 1.7520446344523588 & 1.8653303607755263 & 1.8102916546247 & 1.7551339012941394 & 1.0796793208987767 & 1.1011153645052658 & 1.584392938163789 & 1.5293287112546814 & 0.9155713423824761 & 0.9936974275676316 & 0.9663168052070912 & 0.9400915528627216 & 0.8782382139772229 & 0.8752043411549809 & 0.8684027249950164 & 0.8052305354579435 & 0.836280241366981 & 0.9267255134046537 & 0.8746610907406356 & 0.8306508438666093 & 0.820513992037191 & 0.8809416042183065 & 0.8682333746889745 & 1.3281722344120928 & 1.4787393834079168 & 0.9849774242603875 & 1.436915221580178 & 0.9765331324886118 & 1.0322893436401315 & 1.0398985321871541 & 1.066208904470147 & 1.109908335653448 & 1.2005737293808885 & 1.1550638832538451 & 1.400436914974445 & 1.1890354600292519 & 1.0099419515008163 & 0.8782854217486511 & 1.7616639834363714 & 1.6649561794807484 & 1.7205735004682774 & 1.4117343491696024 & 1.2504327222188452 & 1.4913891987281187 & 1.706089365660831 & 1.9598319543709697 & 2.0032587695094506 & 1.7024178898644349 & 1.7530950458783194 & 1.513806543818205 & 1.1667133352548216 & 0.975296417613197 & 1.3050725379535528 & 1.3925365608989815 & 1.139024026695196 & 1.8711870116728246 & 1.997935117915603 & 1.9396744266041237 & 2.014780099568902 & 2.0711496385231203 & 1.8460917520169968 & 1.4663164999910807 & 1.9175944091662178 & 2.0141605262828453 & 1.5061489924127827 & 1.9034072659059595 & 1.7879482424647084 & 2.039676933083709 & 1.6977634144975777 & 1.673274082822702 & 1.7963019985116058 & 1.9913983377207913 & 2.0009589052253944 & 1.7446947341919967 & 1.7988301992090698 & 1.9520225112215148 & 1.6020020622521203 & 1.5310499948501284 & 1.495018836359481 & 1.4009732169296718 & 1.591105102146945 & 1.702970084186555 & 1.8379772951985665 & 1.9470709479191382 & 1.2920086447972632 & 1.855647815683114 & 1.9229844770236244 & 1.6790090134181108 & 1.6101923376007619 & 1.936241967032417 & 1.8890702589382944 & 1.2276193675379483 & 1.8027162634673608 & 1.6302747874707957 & 1.5763267489330512 & 1.3644200308212262 & 1.2306652520523886 & 1.5978371098253645 & 1.3097782398635491 & 1.305440589618291 & 1.407244586961118 & 1.137797455512989 & 1.3151625554295037 & 1.3987249891425804 & 1.8426562457145907 & 1.9361428783984598 & 1.966551739567484 & 1.5436988860069814 & 1.302726686050058 & 1.6632547834875537 & 1.5278586954716762 & 1.7417516539649402 & 1.4320093966207366 & 1.6103532360105113 & 1.1833009502086398 & 1.1198866175000979 & 1.1537597372984099 & 0.9872974836938002 & 1.1620858400655087 & 1.1663636679218028 & 1.2472677187071983 & 1.0230814070099663 & 1.1999942268364816 & 1.1594230399396002 & 1.1491810107137836 & 1.1569066970716657 & 0.9924205014460069 & 1.1680409300550758 & 1.131833552144088 & 1.3873374627659476 & 1.3544663691723509 & 1.3642811240608534 & 1.721309219738271 & 1.3574197697243406 & 0.9816575548424868 & 1.802083545224662 & 1.6970839726798834 & 1.5171182091158688 & 1.9583771592160297 & 1.9208511290990273 & 2.0097023643790584 & 1.6234808938006045 & 1.1831795578239026 & 1.324993757389812 & 1.930749430185958 & 1.3733303860635901 & 1.3113135972961354 & 1.3918727498399441 & 1.6179661333619375 & 1.5199949471945184 & 1.1425991731271286 & 0.8996337395871027 & 1.0991660296720107 & 1.0141406617407094 & 1.6799695791496116 & 1.226442964307859 & 1.2891130075523087 & 1.0431269226193662 & 1.186148083231726 & 2.0365216010401306 & 1.8583674563091517 & 1.6817415399328703 & 2.046657740115802 & 1.9738046751852625 & 1.5333022926522106 & 2.0011946249718067 & 1.678774488010753 & 1.3080240808020303 & 1.9605047763139734 & 1.9000006691018851 & 1.6088657039567684 & 1.9877000457319167 & 1.7520202786349361 & 1.7292941621738451 & 1.447571119269346 & 1.6814232125669826 & 1.8205710414183658 & 1.6639925284886978 & 1.7884945675342043 & 1.5335398061174865 & 1.5743401451274905 & 1.636868499171573 & 1.7547244753093314 & 1.8006386177596243 & 1.2079277037785285 & 1.72652109446928 & 1.4979761712799704 & 1.3902671840978924 & 1.5942158622667644 & 1.840047104116958 & 2.026219849797117 & 1.8577814907080483 & 2.0087163077498444 & 1.8862022317494735 & 1.7748354054446782 & 1.597324674454087 & 1.7020989582548367 & 1.802035604391665 & 1.8618781028842888 & 1.9267142303678682 & 1.4774312151836126 & 1.3503228509218137 & 1.5929100227261066 & 1.1769395743994502 & 1.132801900593574 & 1.1486588743985013 & 1.1244614860029751 & 1.0362377728593584 & 1.004017884751298 & 1.6920188689735671 & 1.6021701619341273 & 1.5702693511142396 & 1.550178861920974 & 1.8542212894039942 & 1.5174819280036602 & 1.3150584816829136 & 1.9182848887824622 & 1.0866004659687547 & 1.732602792900352 & 1.5149413057532781 & 1.1017565776371214 & 1.6435888689120404 & 1.5512383409340071 & 1.5106543171442666 & 1.8733961289501697 & 1.66911276870517 & 1.6941112827999465 & 1.7364545320547546 & 1.854802923076386 & 1.3602989681392543 & 1.401698320467573 & 1.894336642389012 & 1.7672014834875471 & 1.8030876302187437 & 1.0354474441757133 & 0.9928149017055266 & 1.0244833446947834 & 1.068900150261071 & 1.4766019312043746 & 1.4623788219607146 & 1.3903882404968535 & 1.8791593032790743 & 1.6681775915587016 & 1.7281895735769428 & 1.8160668108347293 & 1.9519593944690738 & 2.003945180274381 & 1.2706344920558579 & 1.7200213575858971 & 1.5463453966996439 & 1.5645784113665955 & 1.8297160077910457 & 1.979318159982298 & 1.6844573859339977 & 1.7367319228466842 & 1.1916233682231765 & 1.658680569304638 & 1.3534027158284319 & 1.5999640264849424 & 1.8851458110139312 & 1.4502711202005591 & 1.515052130324513 & 1.7541809741143894 & 1.6169820950573086 & 1.7665199730499936 & 1.8801965545359574 & 1.90059908955944 & 1.491714092393836 & 1.8300611459902283 & 1.2458154349050328 & 1.392606254657962\\end{pmatrix}\\ \\mathrm{nanometer}$"
      ],
      "text/plain": [
       "array([1.42980221, 1.50600047, 1.6863101 , ..., 1.83006115, 1.24581543,\n",
       "       1.39260625]) <Unit('nanometer')>"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max_distances"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To give a last example on this methods, lets wonder: what is the residue of the peptide with the largest displacement between each frame and the next one? (at each frame, of course)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [],
   "source": [
    "list_atom_groups = msm.get(molecular_system, target='group', selection='all', atom_index=True)\n",
    "frames=np.arange(msm.get(molecular_system, n_frames=True))\n",
    "max_group, max_distances = msm.maximum_distance(molecular_system,\n",
    "                                                groups_of_atoms=list_atom_groups,\n",
    "                                                group_behavior='geometric_center',\n",
    "                                                groups_of_atoms_2=list_atom_groups,\n",
    "                                                group_behavior_2='geometric_center',\n",
    "                                                frame_indices=frames[:-1],\n",
    "                                                frame_indices_2=frames[1:],\n",
    "                                                pairs=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Since we are using the option `pairs=True`, the output this time corresponds to the index of the pair made by the elements in both `groups_of_atoms_1` and `groups_of_atoms_2` with the maximum distance, or displacement in this case, for each i-th frame with the consecutive (i+1)-th frame:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(4999,)"
      ]
     },
     "execution_count": 124,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max_group.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([2, 0, 6, ..., 6, 6, 6])"
      ]
     },
     "execution_count": 125,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max_group"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And the value of this maximum displacements are:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table><tbody><tr><th>Magnitude</th><td style='text-align:left;'><pre>[0.7208760432816517 1.2344545032565934 0.8390016676580264 ...<br> 1.3131703199006979 0.8888794423096733 1.2606607317122343]</pre></td></tr><tr><th>Units</th><td style='text-align:left;'>nanometer</td></tr></tbody></table>"
      ],
      "text/latex": [
       "$\\begin{pmatrix}0.7208760432816517 & 1.2344545032565934 & 0.8390016676580264 & 0.7421069650436822 & 0.6345587000863449 & 0.5057001544212892 & 0.703429649666465 & 0.9325739347261565 & 0.8177009036951891 & 0.5542413712768599 & 0.38614141310275185 & 0.9159147052182508 & 0.6076029091492747 & 0.6909226416713318 & 1.2044525009190212 & 0.8611659254617126 & 0.47573577818093354 & 0.6162651558659218 & 0.7762669798375222 & 0.9397118305085396 & 0.72854925134532 & 0.6030404258393096 & 0.7964844312501513 & 0.9000613463863262 & 0.8863938880396373 & 1.0577935580049564 & 0.8202948468418989 & 0.39940201930587854 & 0.8906894686544479 & 0.6177683614024396 & 0.6816128384754159 & 0.7321630165087046 & 0.5027316082080839 & 0.9982231843675515 & 0.9087619060282164 & 0.5909690913216848 & 0.600198024413246 & 0.7121818106147034 & 1.1734764624999172 & 1.4974373725075982 & 0.7615774304033349 & 0.2959838096935978 & 0.5299786366653678 & 0.7359215478241091 & 1.2310263446494647 & 0.5962668590987706 & 1.2776273871286323 & 0.7162805054632062 & 1.0785295525498673 & 1.2258325200663052 & 0.9211301858696755 & 0.8956331176261374 & 1.0903515628435827 & 0.9690092231265737 & 0.7773243177109923 & 0.7671860491751021 & 0.684943475826367 & 0.5673624349755837 & 0.9003146566698467 & 0.7335894522465706 & 0.6872649725934388 & 0.5491301573359197 & 0.4423492730239783 & 1.0820103135326917 & 0.4984347729180218 & 0.4913321071422774 & 1.456072554534856 & 0.6402094514531371 & 0.6563383211914362 & 0.7757944964881475 & 1.0585072222099416 & 1.1032125736902587 & 0.5570780157173119 & 0.8356295744435386 & 1.1145077034330189 & 0.7777746486382567 & 0.8483432388940181 & 0.7473092129878894 & 0.8262608421574911 & 1.0018051343433527 & 0.3052969686443213 & 0.8571864022731335 & 0.7677940917429673 & 0.6943353063227228 & 0.7666794344105055 & 0.7613739546347874 & 0.8743515733242841 & 0.703238376760257 & 0.7228991745694598 & 0.9319553946780155 & 0.893673773679838 & 0.4585783172180234 & 0.6214247767822099 & 0.9869700928850778 & 1.0860008146336189 & 0.6494769431958893 & 0.7474494145345821 & 0.801014706566024 & 0.8522853794767862 & 0.6802299873248019 & 0.7091276282229896 & 0.5309409881495359 & 0.7969260455467153 & 1.197751063297027 & 0.8304713852653814 & 1.113095215551894 & 0.6058122540790677 & 0.7161075790854066 & 0.911168311463468 & 0.980595532626358 & 0.39185754838779846 & 0.42580848768763047 & 0.8766591899615584 & 1.263503467714762 & 1.0767538807160795 & 0.5143530209873943 & 0.5157190699872463 & 1.0941738277017248 & 1.072259631382832 & 1.34089474474418 & 1.0794068188323764 & 0.7420068866879991 & 0.7543660440165422 & 1.0331858579792628 & 0.5967884056828763 & 0.8934177389699655 & 1.0814951698772428 & 0.4674274219575384 & 0.9234744033336543 & 0.4849543134898656 & 0.8143974994768564 & 1.1597702524439464 & 1.1868129078268272 & 0.8186647717393386 & 1.2369964504843372 & 0.5443484421829978 & 0.4794264095787516 & 0.7634340154328615 & 0.7864659772737065 & 1.480671310338141 & 0.6752523788444077 & 0.6181314809995337 & 0.7786833660162225 & 1.1222074423292467 & 0.4720348577369121 & 1.1557290988355 & 0.47736118377835274 & 0.8712693467880875 & 0.41298427774366414 & 1.5478013569712814 & 0.41946218598201296 & 1.0644442937425485 & 1.1301402894410948 & 0.7519048202801597 & 0.9177565773038403 & 0.6534431391976059 & 0.5871861004248616 & 1.15586043369922 & 1.0707429016823533 & 0.5046742285385802 & 0.9857359253832184 & 0.2860165670413496 & 0.35901452192771166 & 0.9736027512724389 & 0.7246616341317681 & 1.3046282192270036 & 0.4628388680761049 & 0.9859777366869428 & 0.8254397376973976 & 1.6622605745804664 & 1.0239022544482304 & 0.7864522435134074 & 0.7850707600271443 & 0.6704902914475869 & 0.8815639875895885 & 1.003421176676209 & 0.5788699850772325 & 0.7368874368915881 & 0.860741243691531 & 0.8216861817063948 & 0.8065882654891384 & 0.5501216729957474 & 0.7173408077806422 & 0.6205058406101233 & 1.110018732455454 & 0.8822269376139271 & 0.97676143092479 & 1.2820703298152818 & 0.9792794485226961 & 0.41718059115675893 & 0.645341600317589 & 1.2672341247433407 & 0.8672067919218679 & 1.0711809561878312 & 0.5387329485815782 & 0.7939328645856796 & 1.0302125651354173 & 0.6984116271446227 & 0.9723290538439392 & 0.9561033592734116 & 0.6367210108091421 & 0.574286619949294 & 0.7360831360364263 & 1.3856265036475799 & 1.0579923773179967 & 0.9608606679348559 & 0.7906511025230956 & 0.5016979184095494 & 0.6915707256108697 & 1.372221419302129 & 0.9320190974752078 & 0.37945802027385134 & 0.5686163784073542 & 0.589840220796711 & 1.193864713374757 & 0.8810136308335934 & 0.8564372505212652 & 0.6308819475915222 & 1.1423183747469068 & 1.3485733399392246 & 0.6702928373978863 & 0.8825553942032801 & 0.7013649464061071 & 0.9763280011400435 & 0.8013005288412716 & 1.1840520425880232 & 0.8623887950334325 & 0.517038687295098 & 0.8700341968473388 & 0.9480754083791156 & 1.600764071664392 & 0.8736566768417405 & 0.6572227882120389 & 0.8157917583279807 & 1.1384148760997463 & 0.8494766781058709 & 1.0242116167382898 & 0.8020748200268685 & 0.750213728344879 & 1.071646747728631 & 0.9574088662288994 & 0.9939975876989852 & 0.9267506950125287 & 0.971592420990687 & 1.1265721996630025 & 0.992597222239686 & 0.6235312235464525 & 1.5629884990391127 & 0.5561542822929674 & 0.6449880957568209 & 0.37987346894605284 & 1.5279834490920572 & 0.7963094364712194 & 0.9947371317116497 & 0.4212495668435152 & 1.0303934092434452 & 0.5954537960364119 & 0.7454046980276443 & 0.6514323434510121 & 0.22070317837780803 & 0.47729858018756327 & 0.6656224592316243 & 1.1724193657983522 & 1.128085847926625 & 0.8631544218851174 & 0.8259019710689387 & 0.764792812005776 & 0.7959706530653112 & 0.8093787030626383 & 0.7486455042217527 & 0.3832613422719224 & 0.5989172738431492 & 0.32745731572027287 & 0.7203436737625452 & 0.779574869011624 & 0.6113903596485677 & 0.65386656088517 & 0.8496361259351313 & 0.63061244179211 & 0.6746531845875259 & 0.8493784795898155 & 0.7087473594397566 & 0.9714772220181556 & 0.6146894870773599 & 0.6375354129212547 & 0.7572519453733291 & 0.7593801336381079 & 0.6363337775801282 & 0.5845353265594415 & 1.025216758321204 & 1.1428837563663756 & 0.2338234735482541 & 0.5570519100802903 & 0.6655892679805416 & 0.9140192969096583 & 0.736288889376924 & 0.6941453991534946 & 0.8794590156731652 & 0.6161799951887412 & 0.8319104966423837 & 1.1211804174933735 & 1.2394553434140954 & 0.8579447725469496 & 0.48224178718861893 & 0.492050716965656 & 1.2176851429828173 & 0.9068676418452104 & 0.8270052241354608 & 1.1218215108022314 & 0.833596946256358 & 0.6696911540279946 & 0.5652689067793246 & 0.9888526929917186 & 1.060941331809485 & 0.7863879284442229 & 0.6103386736439176 & 1.3334892786263355 & 0.5145316337595113 & 0.3793162067569995 & 1.5829084218494713 & 1.590857642100073 & 0.6418543072451453 & 0.7754587041555758 & 0.9633703874984623 & 0.7288976312299286 & 0.9909488680599718 & 0.993159147864869 & 0.4684520829801705 & 0.3699208658865845 & 0.6156839874154549 & 1.0262282406746606 & 1.0406912702942843 & 0.7782959131905699 & 0.8529107143723507 & 0.8677859880276483 & 0.5669739345263985 & 0.37419902332721433 & 0.6397843828917192 & 0.9939720634221898 & 0.6610315706548128 & 0.4331935621877303 & 0.9809867371284858 & 1.080835265795617 & 0.9931859064137584 & 1.001946990511119 & 0.7281715132098759 & 1.0035590366388116 & 1.115499171948246 & 0.5382769399554104 & 0.8097460130713616 & 1.0289310768804345 & 0.7048281458713507 & 0.6372641607027555 & 0.6805398872902156 & 0.745806527500927 & 1.0196240415258284 & 1.141769227150238 & 0.730800952959448 & 0.879074755384029 & 0.890327759140661 & 0.7717391808031147 & 0.6055075392690753 & 0.31682783599235004 & 0.9756639861895842 & 0.5225481328653429 & 0.9014525894584569 & 0.8044855510640273 & 0.7391896317949698 & 1.0703303453786999 & 0.7243555119437018 & 0.9347901212257791 & 0.8575549282688842 & 0.8929708088099928 & 0.9597223926436284 & 0.8853179803741674 & 0.7932997247822543 & 0.7305999661870896 & 1.2471833825857153 & 0.8983922194455028 & 0.4777021699424386 & 0.6064825425508564 & 0.5693655156219177 & 0.8701598449080179 & 0.4053287279339056 & 0.5892509268517033 & 0.9622312156982691 & 1.3175177152753517 & 0.5682147981396073 & 0.6944816129536625 & 1.2668011139503543 & 0.9515502612517479 & 0.5999428740458866 & 0.5415795471562265 & 0.40756396134205475 & 1.292411493031644 & 1.3957797995175052 & 0.5952403258409587 & 0.9829827409793918 & 0.8696889211797022 & 0.7261223588001363 & 0.6454903050811263 & 0.6944631496149751 & 0.9639859393687947 & 0.9710609669976137 & 0.8845720459603739 & 0.4177950295007211 & 0.9290738300557299 & 1.3863893694686136 & 1.1398516565918113 & 0.7258986796690993 & 1.369710925920873 & 0.5691378438523325 & 0.9769894595036809 & 1.5233726906907519 & 0.6578601054009809 & 0.6888688159215728 & 0.5197828152475834 & 0.5070075406606058 & 0.40147801749053436 & 0.34399606192918225 & 0.7366045797784965 & 0.5046003962987431 & 0.9186182442692645 & 0.6638326524982243 & 0.6551995063609609 & 0.5572625932625839 & 0.6127114236470992 & 0.7383725349797633 & 0.4986074591349429 & 1.4292525183965366 & 1.112294625424967 & 1.268499044926597 & 0.7815100528002737 & 0.5692045829975922 & 0.5905814923313126 & 0.4721010837388078 & 1.0763707056919913 & 0.9184853340020932 & 0.789642050277981 & 0.5239064965339751 & 0.4224033303010049 & 0.7291334045998752 & 0.9079673938305722 & 0.8341502545017575 & 0.5343452475084057 & 0.7935353056011618 & 0.5589028958388615 & 1.435756432480112 & 1.219953389514328 & 0.6606413913663968 & 0.9575303648923806 & 0.6892977139377084 & 0.7905868192196193 & 0.5596798340943169 & 0.6836352264476432 & 0.6504583596816446 & 0.9873808796105984 & 1.2566684386605471 & 0.8458500329176779 & 0.5441458060842788 & 0.5155222782989443 & 1.2808645494503532 & 0.7574256539994649 & 1.1074038726191708 & 1.5928954236686204 & 1.2580737646758886 & 0.6248985183165695 & 0.7868441435602449 & 1.369388109772469 & 1.3580821508752878 & 0.9548602446339123 & 0.47960812226566346 & 0.5936265572847222 & 1.0688137778181885 & 0.730009203894825 & 0.9298523177951181 & 0.4387433321798352 & 0.9106718837424749 & 1.039880519189586 & 0.49293483146925504 & 1.0852188243884742 & 0.650206824991768 & 0.36962969413322516 & 0.3670678034655582 & 0.9749758876584292 & 1.4465086353302696 & 0.7709302854567384 & 0.8253613062515636 & 1.3081094831756093 & 0.8487065125532126 & 1.0577110687825426 & 0.864613316873926 & 0.6485092428987277 & 0.6715359216368886 & 0.5809724418547765 & 1.3815748154908702 & 1.234460943353396 & 0.9618315489778858 & 1.413321786153716 & 0.43595117686582646 & 0.9316355301835532 & 1.0867573851208736 & 0.8890529980752278 & 0.43461978011777064 & 1.2083710981643754 & 0.951876909191003 & 1.0575070405777658 & 0.6746250679027835 & 1.3068218227313189 & 0.6549807299201306 & 0.7852111564863437 & 0.7404842357343794 & 0.9340918508236377 & 0.966076602845007 & 0.8688947752672572 & 0.4522213426597652 & 0.4207016742846331 & 0.8105616902968337 & 0.649092557311607 & 0.6791047427701111 & 0.6741862864250884 & 0.8382700268474341 & 1.0993042531275832 & 0.6965311088263538 & 0.33077521857427594 & 0.7319095563606681 & 0.5162734653919783 & 0.7662150159577684 & 0.922527308021832 & 0.7457127745985359 & 0.8047082616817063 & 0.5579252131231703 & 0.6714695356354237 & 0.5820941023416393 & 0.5958807502975884 & 0.8027398929399571 & 0.6368323221204765 & 0.34867457762951914 & 0.537486571567431 & 0.9350911984290436 & 1.1192212252237255 & 0.3813990017210364 & 0.9719437922742755 & 0.6574414910490103 & 0.8359431983670478 & 0.7850405364850783 & 0.7519486807452552 & 0.8124715145920551 & 1.0262997828986866 & 0.6107144472495 & 0.9975507815802105 & 0.37658316496407107 & 0.963992949954982 & 0.858192436480486 & 0.5659988049159158 & 0.5444538766950774 & 0.6725781546806904 & 0.33728314642442214 & 0.28393027168685625 & 0.48656987944240015 & 0.8338572099923685 & 0.6095726627556473 & 0.7436124660918175 & 0.5153861772501352 & 0.6217448109063255 & 0.7518793322006992 & 0.7464882988248314 & 0.41515586096118 & 0.629125378148589 & 0.7688742755154366 & 0.7663884633377158 & 0.5774972143620287 & 0.7402880988903928 & 0.7164074773987221 & 0.6609745594206317 & 0.45383621157997156 & 0.6490967344608216 & 1.2862723342873306 & 1.1634136496581124 & 0.8441317768707135 & 1.048200507100131 & 1.0030783534597365 & 0.7202522734156337 & 1.1302483406676114 & 0.6569931431147709 & 0.44112183584644266 & 0.7680723388158454 & 1.1628894498184057 & 1.061357822896629 & 1.0126931903339529 & 1.0935710145113249 & 0.9433345361944504 & 0.5528305191634407 & 0.5405941819201198 & 0.42505419279926376 & 0.9924517516693261 & 0.7040888109324102 & 1.0335130262017622 & 0.8941208116669338 & 0.9331116498861066 & 1.0488780828912623 & 0.7726540843675969 & 0.8144328619402539 & 1.1770171572387325 & 1.0256647254398916 & 0.995119205497949 & 0.8524129849061576 & 0.8715122629900607 & 0.6937621461758277 & 0.3946359896432456 & 0.5364312718151283 & 0.7154725101375865 & 0.8134420073874215 & 0.7375864605882669 & 0.8354642290478681 & 1.1021157952571723 & 0.6413746226510064 & 1.1214236818973107 & 1.3270124958074612 & 0.4937215064824545 & 0.9446727029541384 & 0.6401739768739764 & 1.1443524085872985 & 0.9373567443970466 & 0.6896395311243528 & 0.7773585575887537 & 1.1547289247605488 & 1.1860924251738918 & 0.46466112791687947 & 1.0888775859646995 & 0.6822560479034292 & 0.9105667345765265 & 0.6199060146956776 & 0.18633353072628764 & 0.6472118131150527 & 1.5025391303584794 & 0.7765468685395014 & 0.6707957489872304 & 1.0144104949304618 & 0.8774841314497055 & 0.733630537301858 & 0.46286908057836845 & 0.5696563943444032 & 0.5097774979437479 & 0.3749792922709015 & 0.7244712592463273 & 0.467317445644754 & 0.9789148555729064 & 0.5170029501354213 & 0.642807795107545 & 1.054581506275042 & 0.714546500428894 & 1.3468947853064919 & 0.7711327497332316 & 1.0365580767516942 & 0.874985285178024 & 0.8216389735320918 & 0.8528001709602578 & 0.6969658173560437 & 0.7367635105108712 & 0.6819356195673769 & 0.5051849586796374 & 0.6972433112401811 & 1.0299255744583917 & 0.5790139748063939 & 0.683372861637547 & 0.9211651703116154 & 1.1006894623494174 & 1.4621351943305945 & 0.8667707535536207 & 1.2762640028734975 & 0.9207680075907743 & 0.47286655434410607 & 0.894231049918786 & 0.4899504749085669 & 0.3199956401329587 & 1.2290751117748988 & 0.6437233332359261 & 0.706733969196299 & 0.7860618647143438 & 0.587222444505538 & 0.5924419601381837 & 0.9778462919694957 & 0.5063692022086874 & 0.7249693346024262 & 0.5014594396485614 & 1.02478205377169 & 0.5625107260449279 & 0.9620273036472846 & 0.5688565025738617 & 0.894570200149544 & 0.7077199301701204 & 0.5476170410659549 & 1.1275684493207003 & 0.5644851230984064 & 0.6039839005684007 & 0.9275777026361495 & 1.1962369826036936 & 0.6848861396529821 & 0.640720595362608 & 1.396989572291914 & 0.7786921472603145 & 0.6104622336281552 & 0.6906926083695359 & 0.6402585868582124 & 0.6581064455107961 & 0.9971535431209857 & 1.1193230510863743 & 0.8797343696555413 & 0.9214520188865161 & 0.9160380287816803 & 0.4286561287836208 & 0.5918533863742088 & 0.6502714373951854 & 0.8813026705561797 & 0.6812733503473593 & 0.8393082558772096 & 0.4385626920172836 & 0.7178434442270024 & 0.6641452552066242 & 0.8888130324034559 & 0.6120879511137364 & 0.9058192848602763 & 0.964340232091005 & 0.9841010627445048 & 1.108678491717356 & 0.43493938444601243 & 1.22434801835947 & 1.1591663670815706 & 0.560186677121328 & 0.7473217434623529 & 1.4878873566931963 & 0.8801417167054473 & 1.2708510120443028 & 1.009312360000031 & 0.7493329751977288 & 0.44936705379578906 & 0.7605217754966127 & 0.6914614166642217 & 0.9457253241268312 & 0.7748590964059924 & 0.9553874456621108 & 0.8585263083102966 & 0.9902893516007021 & 0.6823065991939198 & 1.0486069300452943 & 0.4472685358971039 & 0.41377642655319274 & 0.3447837970780754 & 0.8577060679625603 & 1.0498314740933068 & 1.0828411296476506 & 0.8263103186940878 & 0.89443562114666 & 1.0350339579192163 & 0.6144158128388391 & 0.6742618901074329 & 0.8756489785677407 & 0.5285250201842164 & 0.6927885478370452 & 0.5052268189664265 & 1.141576577299468 & 1.0923452602374164 & 0.7510279723547559 & 1.2446448916156974 & 1.1099889491343087 & 1.5324462741145313 & 1.146046058159625 & 0.9989539554021981 & 0.45833494816073184 & 1.2145998084639293 & 0.7304710368618929 & 0.4981269539887362 & 0.4556409080783487 & 0.5509269152062236 & 0.700226382415277 & 0.773519843670873 & 0.68570065805776 & 0.9240972991326656 & 0.701653058118148 & 0.73002293137358 & 0.9681029508634109 & 0.4788181359883549 & 0.7087998129019106 & 0.7925467247970226 & 1.0655685310161025 & 1.1339443361314856 & 0.8159555659618076 & 0.9918658852064175 & 1.003940366651158 & 0.7014892945893823 & 0.456165037980377 & 0.25874993058142887 & 0.5559949312062324 & 0.6581693994007484 & 0.3063573759482081 & 0.8015542581924193 & 0.6432981353969798 & 0.6820143254496049 & 0.5993602280632504 & 0.9331695929931008 & 0.9852717349767818 & 0.6393326736011614 & 0.6670935883091321 & 0.4843181059272642 & 0.850886763040732 & 1.354714017647607 & 0.8588038754271248 & 0.8418524123689537 & 0.6487166123250445 & 1.168149146223153 & 0.6894566089631475 & 1.1889106154020517 & 0.7211221372788779 & 1.135931040992751 & 0.7243735310642353 & 0.9945847804576139 & 0.5511060375594211 & 0.599561884240936 & 0.6846077317842006 & 1.0164159370925452 & 0.7466636680699857 & 0.6020164259107245 & 1.021209229506151 & 0.8121395963497805 & 0.561011578563051 & 0.8561639258456046 & 0.7467643222705787 & 1.0073085584843062 & 0.8095122687179478 & 0.7151843801144482 & 0.42962618635884303 & 0.7937057587444075 & 1.4435664627571896 & 0.8937118723339718 & 0.8917642293638827 & 0.832300505603178 & 1.3463556534594154 & 1.024902407244385 & 0.584927919752163 & 1.144109056339328 & 0.7541212718289747 & 1.3154183213655621 & 0.7124165723095921 & 1.0351235058771733 & 0.6116359275140004 & 1.6569167262216151 & 1.1844227497948823 & 0.567772968516783 & 1.0721653655672798 & 1.1231344060075432 & 0.8682910012259178 & 1.312212442925047 & 0.6925489085266004 & 1.3937810528312786 & 1.1976093793104226 & 0.34285517141962807 & 0.2695368402808778 & 0.7755098821745692 & 0.5353374450498133 & 0.778180126432341 & 1.0602856160462695 & 0.8166000493632956 & 0.9207839553966934 & 0.8381361577618148 & 0.8360635671707212 & 1.4542155167591873 & 0.7916087205170216 & 0.7576056331082359 & 0.6372646024405816 & 0.8456980911632587 & 1.0094407052086716 & 0.5905911724453511 & 0.925258127248283 & 0.8654895721009102 & 1.3000369723743135 & 1.2965570190849218 & 0.8062760547257951 & 1.281728884931643 & 0.5027006419828284 & 0.6967853631590402 & 1.0281101214838362 & 0.7923476398260426 & 1.0619319224862687 & 0.9184979957650146 & 0.9314015467120037 & 0.3808741158338941 & 1.1391613635967763 & 1.083208524989831 & 0.9971810189644452 & 0.8378455844329796 & 0.930483259953793 & 0.9729215433422991 & 0.6675799643596432 & 0.9084441017915253 & 1.1516837480806672 & 1.2629894671939406 & 0.8889251229263786 & 1.1136656179535664 & 0.37271370511779184 & 0.36431878903687737 & 0.61723444600795 & 0.4608162250014846 & 0.9596906386149041 & 0.6154475730501515 & 0.4077628084308879 & 0.9983986405279022 & 0.9515786776920057 & 0.8247726053099091 & 0.7185311014514209 & 1.0790379929114993 & 0.686154733088872 & 0.8197368159794193 & 0.9870796289593681 & 0.8227730883679197 & 0.9611946248233929 & 0.6540640813222792 & 0.5956797534181405 & 0.7973646804735521 & 0.5172215690752638 & 0.5946410028239937 & 1.0532921741381702 & 0.682515667451725 & 1.1356149593949934 & 0.5649513742601809 & 0.5461945296236947 & 0.699381092396947 & 0.7529125990901039 & 0.9408736395083195 & 1.1969770425022876 & 0.5993916657953202 & 1.1098208230772217 & 0.7110806514580407 & 1.3134279051218474 & 0.8897445325549153 & 0.6751765920519884 & 0.873973615732453 & 1.254738125126284 & 0.9568579715668253 & 0.9795804604290417 & 1.1120695866754633 & 0.7458270440195194 & 0.984775234262708 & 0.5110459526348167 & 1.1438995944941177 & 0.5943510298329537 & 0.9598130492269177 & 1.0579324433882695 & 0.4493973055461622 & 1.0672219929702855 & 0.872919544068697 & 0.6352147979066146 & 0.7991312354806366 & 1.270297250878659 & 0.7629106422807909 & 0.5354785569687375 & 0.5089587242554672 & 1.1004237166111286 & 0.6091214465282253 & 1.0778395349664085 & 0.9725191961527583 & 0.6241482971840107 & 0.8199907346393652 & 0.6404561704835016 & 0.6499959901519499 & 0.6268742012212865 & 1.0094243132150569 & 0.8730748774776895 & 0.8858798961543876 & 0.8418407097649686 & 0.7938678560187835 & 1.0884242986276638 & 1.1839706265880507 & 1.077197725111714 & 1.275981947924779 & 1.0590624420836459 & 0.5682362915146195 & 0.3465613604217095 & 0.640014340147211 & 0.5865762695548751 & 0.5823783110532119 & 0.8806054004910342 & 0.5082850044884081 & 0.8660214284044406 & 0.7715359711768855 & 0.9192662734776411 & 0.858056293020939 & 0.6873288783764216 & 1.3900700181842858 & 1.151078967550617 & 1.0010404098367867 & 1.0782912387095842 & 0.3329938498877647 & 0.752335152629795 & 0.8375255634110582 & 1.0718240439302746 & 0.6776981590335749 & 0.6663752000280369 & 1.2083481299173127 & 1.324892533479377 & 0.8504046252092256 & 0.9471864352832006 & 0.6278374114254883 & 0.9312421639535865 & 0.6829136205406747 & 1.3183571529437004 & 0.4164314884560757 & 0.7221343270923712 & 1.0296828332881292 & 1.0653271423505815 & 0.5905449219587452 & 1.0026073817239312 & 0.6184557311867271 & 0.9712215441011142 & 0.7085639827826299 & 0.8977978143040063 & 0.576741255881065 & 0.705865927286551 & 0.9347580768546786 & 0.4994821216794357 & 1.361336971178089 & 0.7839003449260458 & 1.2960557367995316 & 1.1511739917052728 & 0.5182139925964734 & 1.6944444294125083 & 0.89438702340857 & 1.2356508023163328 & 0.4912456348029101 & 1.1500317547409296 & 0.3896945933241621 & 1.008487760243236 & 0.4408910140969781 & 0.42806776724451273 & 1.0069752722352239 & 1.1938030049567105 & 0.49103652584228047 & 1.0124089353220287 & 0.6580744446961959 & 0.8191291097897171 & 1.1106639022476956 & 1.1748255747761025 & 0.9212582928932376 & 0.43450821252958083 & 1.2100909925709196 & 0.8537641851624879 & 0.3433029370924868 & 1.3246541991810654 & 0.9767330691681968 & 0.8157729447004807 & 0.8786887248236983 & 1.079588133034864 & 0.3690547077662481 & 1.3685109637190505 & 0.8006709496910335 & 0.5847195750597284 & 0.6621356191823143 & 0.5344598707907572 & 0.7020470652541188 & 0.9001542345641819 & 0.7170600998736181 & 0.9755000913190608 & 0.6162956354775624 & 1.1001321211635204 & 0.9713624241482749 & 0.6094729784048651 & 0.46471155042586004 & 1.0240401464661717 & 0.8787434571831869 & 0.6835809316593298 & 0.7648763071585065 & 0.8411312207146573 & 0.9290756141744979 & 1.0449664920426975 & 0.48004198473945386 & 0.5333795000059679 & 0.3838455567784872 & 0.6756605519064618 & 0.9719558682470171 & 0.6245202579946969 & 0.5268625384519867 & 0.3535172055731286 & 1.0055733922533445 & 0.419386161055523 & 1.0404105551129181 & 1.1484390984076125 & 1.4590570619849903 & 0.3585480513950551 & 0.3791284584468558 & 0.4923112339574316 & 0.47024357998098676 & 0.5698770232024528 & 0.6513077206794126 & 0.6169725111598343 & 1.3708167354552754 & 0.8523819243334176 & 0.841709888686408 & 0.5956141720095522 & 0.9629733351307928 & 1.3927247426591507 & 0.7065639510425653 & 1.3027753657054522 & 1.1032048302389972 & 1.0451056331903337 & 1.0155733116659544 & 0.672369270271378 & 1.3368751014850453 & 0.5628384625733192 & 0.7601998933231373 & 0.4774359150144959 & 1.3254013053880842 & 1.2503081261490356 & 0.9132850153664328 & 0.6789163982135304 & 0.8171929293425941 & 1.1277603455945238 & 0.8993575564559203 & 0.46483324621392635 & 0.9095579852204073 & 1.301095610331531 & 0.810776685235668 & 1.1202992948157418 & 1.0509132718660283 & 0.7759996137375827 & 0.43978146760758263 & 0.9814799718658832 & 1.1374779807744237 & 1.3359713834195368 & 0.9723817296405353 & 0.42512790334215655 & 0.9123754283998367 & 1.0020465497028248 & 0.45245870448893877 & 0.7571391299864159 & 0.8170479974763617 & 0.8876897701989185 & 0.9828662609037556 & 1.0796958749110268 & 0.6850137536493462 & 0.8466084221385082 & 0.6724380056036807 & 0.526667162874637 & 0.8792817797782497 & 0.9625176792384429 & 0.7344442596557632 & 0.5880153747318727 & 0.6164593402835437 & 0.8175780760059174 & 1.0904058822548026 & 0.3969566675019139 & 0.4342689206861816 & 0.5666664405912614 & 0.7653462108663007 & 0.47974196887801 & 1.108415536811764 & 0.8807838285094441 & 1.115197101512459 & 0.9314962641736544 & 0.9963138910220555 & 0.7039321178625164 & 0.7330304606443119 & 0.5616034539845001 & 1.1126166723261193 & 1.0353755554649933 & 1.5508036203860516 & 1.448129957057678 & 0.9625178607600309 & 0.9279938582939758 & 1.2084090750985717 & 0.8753483671107282 & 0.7770405739458983 & 0.9421721142755773 & 0.6997157706237626 & 0.9740907575152116 & 0.8198233455520116 & 0.6262138239977031 & 0.7633223470489112 & 1.3069244712053063 & 0.5351798271091432 & 0.4266854190344914 & 1.0807881919501088 & 0.6813319863940065 & 1.0262075413425076 & 1.2414313553421104 & 0.6102147078221689 & 0.7351383682657535 & 0.669494348191842 & 0.9695421341554621 & 0.9240709207738905 & 0.9599328851435955 & 0.5180991185576151 & 1.3462077682229159 & 1.1409034888842322 & 0.47564245611456374 & 0.9454580840084283 & 1.2092222549873735 & 0.6724490368476079 & 0.7920670633195463 & 0.7168818230049956 & 1.073036276038589 & 1.0562059147312175 & 1.1250760069085668 & 1.2301134689460174 & 1.1970933999447912 & 0.9691168637346991 & 1.1426166259673738 & 1.4788883224493499 & 0.8851400327649916 & 0.9305790232074395 & 0.9391767419937591 & 0.712948958728261 & 1.1371172970397616 & 1.099075019984649 & 0.6555209363593381 & 0.6504750688020089 & 1.2851583612906992 & 0.46948610291566156 & 1.0896157481434088 & 0.8900298593924681 & 0.5198075581731111 & 1.2486930707208945 & 0.62408556012739 & 1.361125925297262 & 0.446567482785073 & 1.1736763819287581 & 0.5556541318144288 & 0.6530495034600745 & 1.1832686693279622 & 0.5865015406061318 & 0.5509373282184584 & 1.0390836139727417 & 1.1389891036490312 & 0.39097951489293975 & 0.6693100788443633 & 0.641395294425587 & 0.84080145456059 & 0.34878922318451117 & 1.0141477306043882 & 0.9919067797626334 & 0.49374951905469905 & 1.0392070670860325 & 1.0072886245620842 & 1.2402308513925187 & 1.0748951544546859 & 1.3108774736479591 & 0.6990119588858096 & 1.2068785022384376 & 0.5530338663807758 & 0.699910319517359 & 0.8506434805385638 & 0.7396750460931161 & 0.7124070654478479 & 0.9588370339739295 & 0.8824461404565934 & 0.6979297453275924 & 0.6058249345363897 & 0.6555441682600427 & 1.3590492972168013 & 0.8867015311830511 & 1.1888611177431494 & 0.5180119123873003 & 1.0376270082070291 & 0.8750079017581824 & 0.7540552920477387 & 0.8276240516345561 & 0.49767791735476324 & 1.2125224241607877 & 1.2133345137477642 & 0.8999426172629205 & 1.122141634661848 & 0.6130353066086172 & 0.5610364394430802 & 1.150678264962307 & 1.295979169135066 & 1.2513709134424946 & 0.7408221826355872 & 0.6983037461136457 & 0.6803091000142051 & 1.0300384230959487 & 0.9467097434440445 & 0.7177330597418026 & 1.141755060526375 & 0.6986044268942632 & 0.9027257382390196 & 0.8570368142066712 & 0.5100934637163691 & 0.6250557623252656 & 0.718986864575638 & 0.530457963821739 & 0.8211436457195894 & 1.2793432924021764 & 1.0797750370009533 & 1.03665358101079 & 0.7625551191358381 & 0.5072343537222576 & 0.8190068230090395 & 0.48326801714598894 & 0.4422974758223941 & 0.7005032822353117 & 0.9688651463791637 & 1.0041755913848647 & 0.5729165960721047 & 0.6250698969916606 & 1.1732483615067644 & 1.0982861419260008 & 0.7875152950448646 & 1.050780266444625 & 0.7129819466035787 & 0.8486255575676945 & 0.8016824411469351 & 0.5716087015137942 & 0.5430836416678443 & 0.9454041301630719 & 0.8863849203755347 & 1.045426676620805 & 1.3069228813008524 & 0.9001830960997297 & 0.5634122600078805 & 0.9274854430048673 & 1.3949176608497662 & 1.169663635167578 & 1.3239667841098097 & 0.7446044410803986 & 1.1545462988577468 & 0.5204174921777581 & 0.7079012484058841 & 0.6984904185176432 & 0.854963636426518 & 0.9203817393605509 & 0.48624906862180933 & 1.191920915592225 & 1.0413994346836979 & 1.087598632245255 & 0.5603519728839669 & 1.0274236074592435 & 0.7221561708857477 & 0.7591617689044693 & 0.7251895961607279 & 0.9295091573595202 & 0.7138842365836404 & 0.8413796557781384 & 1.2908218017147455 & 0.7192794694679833 & 0.6777608003042876 & 1.0215034838573231 & 0.495458669796064 & 0.6175686284157796 & 0.7856690632172904 & 0.5300457643016117 & 0.7450092132020082 & 1.1454624992637068 & 1.1380139293808695 & 0.660457513867147 & 0.483958074074314 & 0.5738434503075224 & 0.6207555634641114 & 0.5922259103481265 & 1.0007966277737055 & 0.5924288840003759 & 0.36632757238928687 & 0.9998071794707734 & 0.6418000494831712 & 0.9314935131701159 & 0.9576231592211838 & 1.1306494662677704 & 0.86322256519316 & 0.8907365439689318 & 0.5741910066825795 & 1.202150427938293 & 0.696540759059179 & 0.8516146515000897 & 0.9895416814808072 & 0.919120453125925 & 0.6442165079778798 & 0.9861423117330298 & 0.9710155084273746 & 0.4215642006825054 & 0.47822218266806527 & 0.5471008222538241 & 1.254740867195922 & 0.4638263281340683 & 1.1917185423375238 & 0.842205381955017 & 0.5265292663471702 & 0.9737302112092546 & 1.0911768748090505 & 0.8649557996563514 & 1.0201146632280722 & 1.4469258249790562 & 0.5749819723806102 & 0.5899195803020726 & 1.2165217814085345 & 1.2717376735106714 & 0.7002508719111084 & 0.9023238115409707 & 1.029784501351469 & 0.6966659400057709 & 0.6095909410252642 & 0.8358806341071187 & 1.4437050163570557 & 1.2295315474152801 & 1.1726042348229138 & 1.3238718327721841 & 1.0469129728233004 & 0.5019561992298447 & 0.48877222535911946 & 1.2450773868992189 & 1.065994453956234 & 0.8349308681021697 & 1.0538655242338129 & 0.8479950203145249 & 0.4501534114248146 & 1.1868547736613946 & 0.8423057841858899 & 1.0864342671059997 & 1.048712365826611 & 0.49060302592474 & 1.2282519802367307 & 0.6967904261019544 & 0.5500847367538684 & 0.5384787444305714 & 0.8311501090918524 & 0.9813639680263188 & 1.211856068572252 & 0.7400335420376474 & 0.6254948540467524 & 0.8318912342239343 & 0.6920812868680215 & 1.1419285190602544 & 0.9181736597341258 & 0.9045118417111554 & 0.9866555773606431 & 0.8106953080575036 & 0.542577883748088 & 0.9328915244833604 & 0.9922855085307106 & 0.5668982759778837 & 1.0955842903977526 & 1.0662277683089585 & 0.8405036144203224 & 0.45442069616767977 & 0.9471008121338964 & 0.6358360424591255 & 1.173011015734169 & 0.6998130343060988 & 0.7062474473819402 & 0.7786866455867912 & 0.6145112523056464 & 0.9652924352531692 & 0.9079233416342076 & 0.5475343104906057 & 0.6693787264561157 & 0.5934665063652276 & 0.9760483686951862 & 0.43296226666660237 & 0.9960289216516696 & 1.146941485533795 & 0.7729556903120252 & 0.6980487313611884 & 1.0163671624140393 & 0.6558835809655477 & 1.0154923353633347 & 0.5284917668900909 & 1.2400603313734277 & 0.6869601980678576 & 0.5378280540747851 & 1.197218618845399 & 0.8341159492306306 & 1.2224254240304273 & 1.0449851486178863 & 0.44429047302077096 & 0.8660319513830891 & 0.959612563392687 & 1.4532687271913072 & 1.0529574682316176 & 0.8739657494865445 & 0.6120753074717389 & 0.413973537542905 & 1.155832723715235 & 0.6817797980385785 & 0.687613296516411 & 0.9088613511251152 & 0.8492159424075945 & 0.9109482993456068 & 0.5414854353584171 & 0.5496400390082653 & 0.846593590791902 & 0.747862641218877 & 0.5435040917811406 & 0.7050270489181467 & 0.4565304181842679 & 1.027347056628755 & 0.9747756851821388 & 1.0395578999193167 & 1.0085842904483453 & 0.7253621007728238 & 0.8446846011940128 & 1.052708870930766 & 0.6741401578593467 & 0.6103756502709312 & 0.8141283040936271 & 1.3030104296984737 & 1.1473400765372828 & 0.6468487851950818 & 1.0088673461624498 & 0.49290937465944945 & 0.7753082907995958 & 0.49497369208480047 & 0.7540460284666065 & 0.6974309297325472 & 0.7477630699615344 & 0.9399416221248404 & 1.0909301578089277 & 1.1423069067442 & 1.0124541196533057 & 0.8141365413405475 & 0.5867518068437811 & 0.8790889654289342 & 1.025646412982973 & 0.7692795822034552 & 0.902357812926597 & 0.5393193091818821 & 0.40435981388782294 & 0.48215510445974236 & 1.180572207505355 & 0.7456650368471147 & 1.1724734441933538 & 0.8172946465398379 & 0.900735299545267 & 1.3343179013633575 & 0.7154461034709276 & 0.8523271931773548 & 1.1901434541348712 & 1.1243322391426174 & 0.7463955203612969 & 0.9915838470210911 & 0.994539629906048 & 0.665934358238881 & 0.8298498891632567 & 0.8891625745423095 & 0.9420638466432357 & 0.42473670253886237 & 1.1339512084106786 & 0.25673189398445573 & 1.2501312720057771 & 0.9237105640990667 & 1.1091340851113465 & 0.5305157553297603 & 1.4058527242608383 & 1.3683746212339856 & 1.114143839953025 & 0.8547290661893837 & 0.6031981599931139 & 0.7596880203246008 & 0.6988543326270054 & 0.6501975904953804 & 0.8758630194365282 & 0.4628253194438785 & 1.0967735687869717 & 1.1754817196726535 & 0.6296313274320463 & 0.77317769579095 & 1.137493373852946 & 0.44680944707204345 & 0.8954083554227446 & 1.1190839830851114 & 0.8150728441365939 & 1.1393742116726142 & 0.8563213301568111 & 0.4911707511600953 & 0.5573063766386118 & 0.903900958896635 & 0.5406446243905326 & 1.257625352229898 & 0.5598296709055578 & 0.9200485780879538 & 0.5641331794466533 & 0.7537818389501549 & 1.115237005713135 & 0.5980133141966147 & 1.3521245678476015 & 1.0947634317009634 & 0.7883820827320264 & 0.9845209685234291 & 1.097730927218774 & 0.9993861419601664 & 0.4057826889803619 & 1.4376140033399312 & 0.9039997135098791 & 0.8625177208108226 & 0.9017818160504927 & 0.990672155654221 & 0.6206055804054732 & 0.5010523871586462 & 0.6778252183848553 & 0.8492820253014072 & 1.2772431438066567 & 0.7583692822132916 & 1.0417460954316615 & 1.5921521232092846 & 1.613669868836413 & 0.4013557304331203 & 1.2579766065253173 & 1.0867351814453763 & 0.6761879758919405 & 0.5781209199503455 & 0.7378361612503194 & 0.9039729471378428 & 1.2893100459489868 & 0.6464922201123532 & 0.8990153627742179 & 1.096618490548705 & 1.0844407879929019 & 1.3177918051075441 & 0.9131340975888591 & 1.3280246910476523 & 0.4838859367490013 & 0.6551176090279635 & 0.5987150733963815 & 0.7862386933203876 & 0.9155241316968942 & 0.4135038917904998 & 0.42378479796536306 & 0.9760769693044378 & 0.6736570000955021 & 0.8173982848919769 & 0.8472901835388478 & 0.4472296159614102 & 0.4770670101949959 & 0.5569705271454443 & 0.7524848849903139 & 0.5365394965502329 & 0.7812192880988992 & 0.8183840732569287 & 0.5413228665601048 & 0.7256042667223563 & 0.4927551200590928 & 0.7425869170908269 & 0.7748912040877725 & 0.3336253820012068 & 0.22495505194849413 & 0.7213543331153021 & 1.0185426331824168 & 0.724611515567241 & 0.636953520627417 & 0.8065488302360745 & 0.7507748370526126 & 0.5608919792102398 & 0.6129468228295357 & 0.4738317568286887 & 0.6233241745510285 & 0.6111635597868049 & 0.5779374725656123 & 0.7048390090902757 & 0.9275219540690752 & 0.809463494351249 & 1.5353108045434034 & 0.9127896405085865 & 0.6385095479713988 & 1.111462127978127 & 0.4148316301813138 & 0.3779439145468199 & 0.9372677416054673 & 1.0737023783174309 & 0.9327981473332856 & 1.4437660614662393 & 0.9860160990908191 & 0.7702429707732866 & 0.556225317775752 & 0.5202899547101524 & 0.812202584970362 & 0.954597397247124 & 0.4698116289248913 & 0.4982187992128765 & 0.47792987175279206 & 0.6752077562131057 & 0.7525171149401938 & 0.7457525370507557 & 0.4426813758382415 & 0.8990217350418636 & 0.36742501326523713 & 0.38567382156630753 & 0.7314913756974302 & 0.4316576121924965 & 0.7062828946348757 & 1.0360489132325996 & 0.717327086420942 & 0.7480248554605365 & 1.0071632734504783 & 0.6110305098185554 & 0.5700096932900099 & 1.0022566103895405 & 0.812493773718313 & 0.6799041217192946 & 0.6857379624060428 & 0.798775120342488 & 0.5646710638613324 & 1.3288292726621485 & 0.9788056535887028 & 1.0350736901942255 & 0.494991402792133 & 1.3596439052621514 & 1.2234707180562459 & 0.9991386791937189 & 0.4036131079748398 & 0.9278200145167554 & 0.7240130945260772 & 0.8155315505279227 & 0.443531222582759 & 0.5408686354144474 & 0.8198625711800164 & 0.5341774553918868 & 1.0417171633923334 & 0.6824821551625131 & 0.6100033653459864 & 0.7532894419759449 & 0.41594398864358134 & 0.5806928645438066 & 1.0187020743811168 & 0.553092526944592 & 1.0114960051042063 & 0.8381612800854898 & 1.4438031238143867 & 0.7933315388473811 & 0.7593188150992584 & 0.8275790052583153 & 0.38886887041952295 & 1.1041992779795966 & 0.7878767812887163 & 1.2617428912821234 & 0.5772523480588273 & 1.1161359521799634 & 1.1411411170827817 & 1.1175297684797227 & 1.1210600023871629 & 0.4224925064531741 & 0.6022244200956829 & 0.5601257818263957 & 0.9255431040308676 & 0.3346342075359743 & 0.8475036220576049 & 1.0116144640955225 & 1.289324622584946 & 0.4311864284529643 & 1.050860430510073 & 0.4155529750437309 & 0.7996866010497747 & 0.8075919043170734 & 1.0424163219918923 & 1.2091284059986498 & 0.3007664987923525 & 0.9705240876717831 & 0.578469822740808 & 0.6937727402075051 & 0.6851636489996915 & 1.2436704584205722 & 1.1308121896524894 & 0.639271694011832 & 0.7461459033664808 & 0.8418794940755419 & 0.5300216112019157 & 0.5519033946648999 & 1.158377785709355 & 0.8928329348922415 & 0.6180134399337538 & 1.3744083494726793 & 1.019836942492843 & 0.43487373213417624 & 0.8094648814932657 & 0.5874731090049781 & 1.0894352662666973 & 0.8048977373363613 & 0.8002718043897094 & 0.8244085621715397 & 0.9289599466788142 & 0.5277175964584724 & 0.6087305118838181 & 0.5369046911637162 & 1.609952860502221 & 1.0594310119424635 & 1.0705753599957626 & 1.1341368880439568 & 0.8547221351651787 & 1.2573965780791356 & 0.9844751381534214 & 0.41016307590517237 & 0.9684417109607691 & 1.1114058129582545 & 0.6833672020042121 & 0.9780577190734254 & 0.9414638624455177 & 0.7285568960425528 & 0.7938428567583092 & 0.6939430135816962 & 0.9980404401935754 & 1.0661298089045625 & 0.3986366060485657 & 0.7665298037869276 & 0.9344711216170115 & 0.6793041170987744 & 0.6171502269329668 & 0.49044211298413487 & 0.6235818040693544 & 1.3134550956813975 & 0.7024684973070612 & 0.6519607278061025 & 1.1846279268058175 & 0.8706081213729783 & 1.3648540703012169 & 1.0305960211012068 & 1.339926214182078 & 1.6538491475802606 & 0.5990831664462593 & 0.5160086158291214 & 0.8576024062417723 & 0.9779685759500678 & 1.0006316043728456 & 0.40158463383919973 & 1.3574611930508322 & 0.8829583466478913 & 0.6312527192167945 & 0.7320698587920799 & 1.104553448088228 & 0.7876907745366671 & 0.6857463696521872 & 0.6260474770829529 & 0.6244647959262565 & 1.0628987900584952 & 0.6101379218805777 & 0.6481223589891356 & 0.6877002849140952 & 1.1540835295284941 & 0.43994539982175696 & 0.9587424156785262 & 0.478928256122262 & 0.8836097485506034 & 0.5749621634120057 & 0.7282594823965813 & 1.0505022144995706 & 0.9787966527007218 & 0.5689128657272213 & 0.6407210175383985 & 0.6315853187873944 & 0.4399432906882239 & 0.563645198325983 & 1.0073544529870002 & 0.5138780048426419 & 0.9782097361189829 & 1.1268800214573689 & 0.5224833446950168 & 0.8431667647014551 & 0.7534369211610079 & 0.9431677596487539 & 1.0484729082988327 & 0.44785720116968014 & 0.8497801316504543 & 0.8454347476923725 & 1.1610046716573807 & 1.294638016815435 & 0.9856811139319949 & 1.331501059925322 & 1.3868920926570898 & 1.1603904311228757 & 0.640203369382078 & 0.4957476037200197 & 0.5985180858032917 & 0.697821431723 & 0.883918965932486 & 0.7462322181214235 & 0.8246164467999179 & 0.596479148430182 & 1.0030812042036692 & 0.6602304857870037 & 0.7915077892220651 & 1.0553117952062403 & 0.7877452194335026 & 0.9669417884137324 & 0.8392473350396954 & 1.002863255462282 & 0.5775328491561882 & 0.9818324433481657 & 0.7366934499560073 & 1.11824235991803 & 0.6919807869214099 & 0.6677008609581739 & 0.8567962122785517 & 0.7176938055217861 & 1.1282686425328574 & 1.3167093035932582 & 0.9447004046836827 & 0.6034480896283424 & 0.7341932530193442 & 0.5889886167830465 & 0.6380686420350566 & 0.39913143733202916 & 0.761408487621769 & 1.0073756040404478 & 0.40190506280967286 & 0.40202658133799973 & 1.2761912530488295 & 1.3662014312567872 & 1.288168738324041 & 0.8904799903569023 & 0.628981540057826 & 0.9323025383387895 & 0.9098398231221951 & 0.9463068408654386 & 0.6391725738783953 & 0.7038203026000535 & 0.7542967906991668 & 1.2730747481209903 & 1.4016925071227393 & 1.3677746237650692 & 1.2239086009238231 & 0.6631641644062877 & 0.9033546190893054 & 0.49194816140011643 & 1.2261950071119097 & 0.6008039107716733 & 0.6606113814120794 & 0.9808135173130953 & 0.7837744637319766 & 0.6337661138077602 & 0.5716489201911142 & 0.7974326309707426 & 0.796189456045394 & 0.8478631956756473 & 0.8893885107253272 & 0.34380338358429935 & 1.0340939167997902 & 0.8221592432479291 & 0.5471823205323572 & 0.9139644876897159 & 0.9796559127635039 & 0.7066739855215431 & 0.8417667278224173 & 0.4499332084352987 & 0.5674612054888024 & 0.9984471321559422 & 0.9509759814839781 & 1.100380217840603 & 1.1699952454446445 & 0.8033346953845402 & 0.4770463405713952 & 0.6747683201407635 & 0.901784327770344 & 0.5629531811765117 & 0.606562843090331 & 0.48163506138968687 & 0.6984450568392906 & 1.1380072841054798 & 0.7974497792347264 & 0.7868320829379469 & 0.801549546053272 & 0.9872287905063191 & 0.8961131068518502 & 1.2202081532483597 & 0.7238810643286359 & 1.1363804451121982 & 1.2295959433523447 & 0.9954335042151832 & 0.6967589785942679 & 0.7522161012125028 & 0.6099202430834981 & 0.6112410889631881 & 0.28721431074926623 & 0.8869919050544776 & 1.0636854470820578 & 0.8066456722783999 & 0.28216519979432236 & 0.8869526659481093 & 0.5525806628674006 & 0.8131851171254045 & 0.7933598515344886 & 1.1581570240580479 & 0.3042964757685461 & 1.203051625050625 & 0.8535265066166516 & 0.8908394404053488 & 0.7268810907744898 & 0.5804149055187436 & 0.6600148023610638 & 0.30952629853525865 & 0.6360331474103138 & 0.6938084889971442 & 0.9450356689389122 & 0.7285548874007116 & 0.6306759728255183 & 0.726431729046281 & 0.8375720701879351 & 0.588830293122511 & 0.869155701819554 & 0.5847587867177552 & 0.6613856857539985 & 0.5198268575438826 & 0.872231850339355 & 0.16833082080265363 & 0.687854063887169 & 0.6642510298409078 & 0.35279735035498483 & 0.6900408202364361 & 0.6512351754387492 & 0.2769872819305153 & 0.5831864521080973 & 1.1857375156873897 & 1.1118058726892033 & 1.0276200654145389 & 0.7821122288994581 & 0.5236215551429725 & 0.7542967123601851 & 0.905777612625136 & 1.071421786613142 & 0.9503742185282028 & 0.5329626408055606 & 1.0101463887439588 & 0.941149182097861 & 0.6330501150319275 & 0.6488659534008699 & 1.188421714204112 & 0.5007036620507772 & 0.5999492101331383 & 0.750889980177066 & 0.575593838649741 & 0.869632112404025 & 0.8308585058949662 & 0.7213165931182028 & 0.6239682022475015 & 0.6807147920769797 & 1.4781599053841594 & 0.5742177693726457 & 0.8276828853545191 & 1.1679362730466116 & 0.6948392517934936 & 0.663965260619577 & 0.5900800300912241 & 0.7427930009292698 & 0.7968591919308636 & 0.9123726869974808 & 0.8941608927809435 & 0.8175109035015694 & 0.9293671597932124 & 0.6843204980248159 & 1.0560860207451876 & 0.47307909326224273 & 1.2397418886511775 & 1.35177639421981 & 0.39888784954797474 & 0.9833698561193532 & 1.14610376468369 & 0.9863557070529654 & 0.3643496643951075 & 1.4427709886081799 & 0.8862184324584897 & 0.5798861068351168 & 1.3756224624696312 & 0.7306362279184327 & 0.5214337062093186 & 0.48315588677823884 & 0.7943674552953376 & 1.1707518347162176 & 1.0158030523058037 & 0.4373036359872711 & 0.9526235308422359 & 0.84638661619117 & 0.5007334423844841 & 1.048332696419127 & 0.7776154722141091 & 0.7136776430046159 & 0.48573094783527526 & 0.9086802895396208 & 0.8901617360801463 & 0.4422806542295688 & 0.6831567420394645 & 0.3681991698462866 & 0.4038423430175466 & 0.5347737630762783 & 0.6826811986583052 & 1.1230617780831305 & 0.5932123745002352 & 0.7723870904119424 & 0.9786712016248372 & 0.9183415409953584 & 1.110566480190115 & 0.8624963564054482 & 1.2098594835473782 & 0.6140512322309213 & 0.8208729293537116 & 0.7340532964962565 & 0.7790157155225677 & 1.1262656149546715 & 0.9937080084909485 & 0.8493587013557274 & 1.2842571803051905 & 0.8578922816066594 & 1.141697439842651 & 0.9275438537455131 & 1.1269742240024523 & 1.1029026756751517 & 0.8983760970416068 & 0.9013855021331562 & 0.3056996655465381 & 0.46361936689886446 & 0.7280739129882342 & 1.1027442717727527 & 0.7022361467001454 & 1.3178503352795277 & 0.8644506254018465 & 0.5053104658686194 & 1.096191503831201 & 1.0285041741830907 & 0.8090016441731995 & 0.5956948981799806 & 0.6910555257999336 & 0.9209298579342745 & 0.7627117059838924 & 0.7163550556801388 & 0.7641175869827391 & 0.6686208269746872 & 0.9992251392111616 & 0.8066463640283326 & 1.4166899257403796 & 0.4765408692651242 & 0.9774957123915305 & 1.2470042975003346 & 0.4774580504266285 & 0.41479983482542193 & 1.0651908076035488 & 0.8643842760303309 & 0.7177732544888704 & 0.9562597138527278 & 0.6880067436340752 & 0.5090852567769786 & 1.0235548688343952 & 0.5200937519090364 & 1.384847972661523 & 0.8688322899438068 & 0.505052962523624 & 0.6664421255403823 & 0.7394354332298678 & 1.7062030963204056 & 0.8361049497070195 & 1.5239961926745094 & 0.45331095882734096 & 0.6576102811532673 & 0.8515516411608821 & 0.2985716134319566 & 0.6412623901770041 & 0.7733306389314673 & 0.948966883262822 & 0.685810358358712 & 1.277589892406397 & 0.6720039473186299 & 0.4403457423136465 & 1.0398328815231586 & 0.41883651765490143 & 0.7694535965712835 & 0.8723871498928539 & 0.5762316890890704 & 1.1687628839933673 & 1.0914130661211259 & 1.3009522298277847 & 0.7428679979913413 & 0.5345085304885439 & 0.6556141965265525 & 0.6373665565121687 & 1.1478284822426237 & 0.9011730055541178 & 0.42864632119420076 & 1.6004656689891334 & 1.2437442123592963 & 0.7256349988821527 & 0.9591252515722366 & 0.5964430554573188 & 1.0766649599675828 & 0.6207539210096757 & 0.7346958180648235 & 0.7678036080463022 & 0.4524552160320342 & 1.0463036926953007 & 0.6886762272472072 & 0.9416070267023497 & 0.8013735781129873 & 0.9761759355569177 & 1.2401409000959998 & 0.8764942723669482 & 0.8670053619757284 & 0.4808993752988321 & 0.5120476074524829 & 0.7642121218097071 & 1.213198072677088 & 0.8100381969131245 & 0.6802755720266428 & 1.3132429577776856 & 1.0458663728940727 & 0.3488075202267859 & 0.22507195004434236 & 0.8003484345268891 & 0.6159132600847143 & 0.6785836858882816 & 0.6693390344156501 & 0.5106986920709625 & 0.6294361876646156 & 0.9348465528548504 & 0.8472024150830086 & 0.5713283214507437 & 0.8921085593173981 & 0.9825314197436813 & 1.2337477474732235 & 1.163549873685625 & 1.0389855101830994 & 0.659318914186819 & 0.6866640613092041 & 0.8294572371094694 & 1.1643546095145547 & 1.1959257429405536 & 0.95726702873727 & 0.7303323226306236 & 0.6549723608125636 & 0.5912296965805661 & 0.7220597678016135 & 0.5928201460478619 & 0.7603891610283139 & 0.8073201924792118 & 0.9086564032016334 & 0.726291931120555 & 0.4518575005371218 & 0.5296049204367721 & 0.4578024504695771 & 0.7393223180800814 & 1.2936646720948657 & 0.7261527591941089 & 1.326093238232798 & 0.5302473592189291 & 0.9572723903508082 & 0.8704896709085921 & 0.8189835986718953 & 0.7176145859517057 & 0.7168254954584328 & 1.2978075704797063 & 0.7339021216520109 & 0.9820570650145151 & 0.7297507142051108 & 0.925244736101544 & 0.6626245001841532 & 0.5491549592840936 & 0.4018811185025898 & 0.6708366929597328 & 0.8607461193679184 & 1.055904368203699 & 0.6486023446721115 & 0.6562470392046376 & 0.8393126083177792 & 0.6395782246945769 & 1.0583392752478533 & 0.8792676355187636 & 1.3559959723379391 & 1.1017592197513049 & 1.1911080137854941 & 0.887206925976457 & 0.9641253188729506 & 0.2361026424665542 & 1.0248071475226999 & 0.8317555875647221 & 0.9773010334852767 & 1.156919928596883 & 1.3195924860852446 & 1.0889814088293124 & 0.7459196962117045 & 0.8751457111912556 & 0.759908280171258 & 0.6967432710452358 & 0.8636288398900915 & 0.9343601412483639 & 0.6358981741941128 & 0.7524445653045895 & 0.6395625688480984 & 0.6269536920275741 & 1.1851868701483794 & 0.7950006258023326 & 0.6763223990641101 & 0.9334616714774082 & 0.5513251453302318 & 0.7658831268034427 & 0.7451738435862972 & 0.8477985664186043 & 0.8308514416728594 & 1.108920919477275 & 0.7939735986314181 & 0.8725362731655186 & 0.3370979459207941 & 0.6746364978929087 & 0.6621673851042726 & 0.6568634445089707 & 0.5679558582666455 & 0.606568354559967 & 0.7333280041205285 & 0.6499157405039907 & 0.6195908279379496 & 1.059294448558252 & 1.137656784191378 & 0.9025827417309666 & 0.8073000086430664 & 0.7964995759539841 & 0.7180860672995416 & 0.5722688137080885 & 0.7815169951800123 & 0.9078865173246154 & 0.7085826347150612 & 0.6578917497965641 & 0.5935114077274499 & 0.5408675735963894 & 0.8156615311282379 & 0.818894540304404 & 1.031747308250616 & 0.573566466708627 & 0.9909249477418541 & 0.4882911802763226 & 0.5372057055923595 & 0.6448546981975994 & 0.5370878614924447 & 0.8394074505400273 & 0.7318463436115084 & 0.5920232378003487 & 0.8185934498439408 & 1.1762061265876655 & 0.6581702389741441 & 0.5154022121204728 & 0.6021923268477155 & 0.49190078751516275 & 0.727429922139111 & 0.363162181022844 & 0.6260886777758707 & 0.5674772811446902 & 0.9392097395235777 & 0.8631517871716431 & 0.6240155842700205 & 0.41510560722816986 & 0.710471198108988 & 1.020258384662732 & 0.5769228575363607 & 1.1186173438676938 & 0.6209951589270345 & 0.995274267194419 & 0.9328492251415877 & 1.1285253512831717 & 0.986013473581346 & 1.3045345683309384 & 0.5201293328531248 & 1.0427864860605311 & 0.6806516945668312 & 0.7484429922816412 & 0.9820466271655846 & 0.33190310613068325 & 0.820145221432595 & 0.7484108268747249 & 0.6479885157113444 & 0.7677787761379381 & 0.6141374368367926 & 0.8525061007433846 & 1.1153723175531067 & 1.322431100172972 & 0.663215740475403 & 0.6716741469744891 & 0.7165648290056654 & 0.9739613882038263 & 1.3963436322726832 & 0.6512514034427443 & 0.5640105616852539 & 0.5855795208532566 & 0.6282606067148596 & 1.1365685252379059 & 1.1465807656454157 & 1.1928494091849022 & 0.658416288331498 & 0.7812181300245788 & 0.38752911629914744 & 0.8398772749083068 & 1.0826545338340954 & 0.9127172575807118 & 0.9255800736202929 & 0.8178884153906708 & 1.4374047539546826 & 1.0983875993799068 & 0.5626278649462662 & 0.85913314983102 & 0.8968559011827566 & 0.8393941346284356 & 0.786963814234743 & 1.116322393289571 & 0.6273363295313155 & 1.0630372048103056 & 0.5017846247377225 & 1.118380534626701 & 0.3411746264434322 & 1.010498124498031 & 0.3808149483627944 & 1.2050745617116776 & 0.8410448201482122 & 0.8250367707308394 & 0.9019011711036974 & 0.8504785483549889 & 0.6291508695041361 & 1.3412128645057122 & 1.0902305667818928 & 1.247264030461522 & 0.6104573305619726 & 1.0906785442384999 & 1.0964191822392182 & 0.8697287280167039 & 0.8207655493946505 & 0.9370738828174334 & 1.1603741713796494 & 0.525742798083541 & 1.0914429473369907 & 0.8041230638450241 & 0.9925417411068124 & 0.4580417911652207 & 0.7450321565010195 & 0.9702326200560542 & 1.1037540887655044 & 0.38960368674323853 & 0.8228118558946814 & 1.0387703190222226 & 0.7453044482536823 & 1.0077810436486618 & 0.7862334063401537 & 1.1842066248366552 & 0.9616712674073314 & 0.5419056763894883 & 0.49646356763046057 & 0.7271378683234567 & 0.7014876134997248 & 0.8925248081198108 & 0.9884631918130974 & 0.8375158197330435 & 1.3098304809351995 & 0.39881101324186613 & 0.9811253420693397 & 0.9226758894252015 & 0.9416333105905996 & 1.1595745134712676 & 0.6073972061335042 & 0.7967014884898634 & 1.2289249851316806 & 0.6713113766572743 & 0.4205914463995146 & 0.7445332344578502 & 0.4350457910108456 & 0.535287723284409 & 0.580324193763855 & 0.6222634600685356 & 1.6847103310858937 & 1.0027508348840373 & 1.2176940614051408 & 1.1211337441158051 & 0.44183969291116254 & 1.4110645938978916 & 0.6425231863168844 & 1.2777813098612587 & 0.6406732301710965 & 0.8087109855394571 & 0.947119788748832 & 0.8893051131838795 & 0.6510331457778845 & 0.9014357022926339 & 1.3054227950657047 & 0.827353746976923 & 0.948109338657427 & 1.2309004564021286 & 1.5159611721617312 & 1.004910125300666 & 1.0692430283750312 & 1.0006098966118597 & 0.829030316765663 & 0.8183173555680794 & 1.405543302332503 & 0.37902298309726734 & 0.8229577738488728 & 1.0774130925008198 & 0.5287484839859811 & 0.7275973340894558 & 1.4787554722857186 & 0.8643644716918564 & 0.9250027092146103 & 0.7099617843186334 & 0.9603767122661041 & 0.4322915903102801 & 0.8533557364924703 & 0.5939311860221864 & 1.031967722006712 & 1.128097773225475 & 1.1863052640388896 & 0.7643199801062933 & 0.5440985131890641 & 1.1192512393100595 & 0.7149161851276633 & 0.41749036033885867 & 1.3434087658641893 & 0.7254964431314505 & 0.7001456435427127 & 0.6657220077537528 & 0.9060271091786529 & 1.0837866152573117 & 0.7246401972969854 & 0.8005719071322255 & 1.1078148068550921 & 1.4142853594321116 & 0.8202198074891409 & 0.6288822609918412 & 0.5843365674570795 & 1.017668709161053 & 0.6879570581788556 & 1.440797192027471 & 0.5036482395895459 & 1.4156421192258832 & 1.2026262363385594 & 0.7177824272356845 & 0.7266312796679274 & 0.8418652664879996 & 0.8651701079055709 & 0.7903162146944103 & 0.5485849843721157 & 1.2967100059198315 & 0.9294996537873781 & 1.4434991393294074 & 0.7585351344875869 & 0.5299266147316315 & 0.3938708629445129 & 1.5489990339526998 & 0.6913818237154633 & 0.8849992420110608 & 0.6798025111838235 & 0.9488802137957123 & 0.6635725886436507 & 1.034698293689635 & 1.0300427459704717 & 0.5891149972405976 & 0.7859864429846083 & 0.8419345029273341 & 0.9139799089087147 & 0.6464467630373594 & 1.4098354607171166 & 0.45636980433919516 & 0.9389851187668599 & 1.2038423003872365 & 0.678713786835321 & 0.5376889055951234 & 0.7102986923719149 & 0.834578689288674 & 1.2337095063170749 & 1.0190343451448163 & 1.184162055586678 & 1.1045540456634397 & 1.023586173728028 & 1.240308092976147 & 0.5129779769572065 & 0.9083222166317683 & 0.5816033407108614 & 0.9469139608428572 & 0.4872739673593326 & 0.9827779171507536 & 0.546745518210994 & 1.100078716969384 & 0.7098201721092868 & 0.3184436415284399 & 0.8681140281327343 & 0.8885719812518201 & 1.1428293730393502 & 1.0033765676009405 & 0.9798066940824401 & 1.3022266314630693 & 0.5054672357436129 & 0.5535266145307403 & 0.9411433719230908 & 0.9218261537580626 & 0.8776741125459252 & 0.7530801210406737 & 0.9818490617289336 & 1.0690152108729238 & 1.4734326275882579 & 1.186231913416139 & 0.9278844726883368 & 0.45306118591775635 & 0.7927840565990857 & 0.5057278848345798 & 1.1747394252678915 & 1.0979429148275004 & 0.7296678941884523 & 0.9354447789020502 & 0.7160258607881513 & 0.851431102156279 & 0.8325084622939247 & 0.6454470533685155 & 0.8807886619725512 & 0.9062953544054732 & 1.5127737330649698 & 1.1465762091651648 & 0.8966368750325943 & 0.37774774656692317 & 1.0925720270090917 & 0.5533501135281408 & 0.5552649326121175 & 0.2903178737551575 & 0.5455266331055758 & 0.6234664144395654 & 0.5515807234138793 & 0.6302098029292694 & 0.587434769348225 & 0.6306153222365293 & 0.7149326962868168 & 0.5639739762345477 & 0.5533288268436701 & 0.47770471987858293 & 0.882722439667081 & 0.5508016060257129 & 0.6577860852676309 & 0.6974526563971549 & 0.750457332338275 & 0.6677920485277412 & 0.8121493625388593 & 0.6640250457382706 & 0.42597368583488393 & 0.5645488075586603 & 0.74617833050265 & 0.7995801525672377 & 0.6828429204825932 & 0.6091492508330723 & 0.7404843572186154 & 0.6198806961064975 & 0.46598527035677423 & 0.35571906174103973 & 0.7078413812230434 & 0.40514411406613626 & 0.41091162757472616 & 0.5495871191778634 & 0.32982358088176367 & 0.3436497971631401 & 0.5861649730051498 & 0.5708807753422053 & 0.529227642429587 & 0.627606798378205 & 0.8359805058047798 & 0.784728932319095 & 0.6755515768546332 & 0.7756188863681825 & 0.9861114159471924 & 0.9647126565617615 & 0.6407274375422239 & 0.48362527110867043 & 0.48143690654147614 & 0.626774248042016 & 1.011328357326455 & 0.6489933924260631 & 0.48818486581335685 & 0.3302761960628715 & 0.6035075069051478 & 0.6888068439506018 & 0.837427731354465 & 0.604407315172707 & 0.6325034492040051 & 0.34162816694451226 & 0.5894474482973937 & 0.6257074728912618 & 0.7453821191155395 & 0.7516923912487211 & 0.513310690405066 & 0.4308814299581095 & 0.74225338233924 & 0.5949737073331239 & 0.5684121227860981 & 0.818853509295289 & 0.7678318856816143 & 0.7464467654359878 & 0.7858221555646162 & 0.20420122598172713 & 0.4621321938469665 & 0.6347462657085893 & 0.9078381664871923 & 0.5182610073167182 & 0.7444486198752981 & 0.7754978379931575 & 0.6692137884732143 & 0.7232050149556422 & 0.40514429393504786 & 0.6960574359179026 & 0.5401634452569777 & 0.7663265592490294 & 0.5634755726749788 & 1.0627831272032853 & 1.0669207856917868 & 1.3321346610076938 & 0.9482917344232881 & 0.6913589764983414 & 1.112304917101371 & 0.5298403829619798 & 1.2028825908824103 & 1.280264784505782 & 0.6367125924475604 & 0.597884435826775 & 0.7297684610247581 & 0.7275083218900665 & 0.4435121323115366 & 0.9698511188865331 & 1.198213354129979 & 0.5714240002985164 & 1.0247700037674243 & 0.6414557876061119 & 1.28061931307309 & 0.5210873958801682 & 1.0564448924163277 & 0.7813457267165117 & 0.6804952559026091 & 0.9067128975885365 & 1.0300115148305982 & 1.1681343469290377 & 0.6639219179960162 & 0.8118843890041936 & 0.8270036008553087 & 1.0097405098540118 & 0.2957041350660916 & 0.7859858575553043 & 1.0557145147429174 & 0.7843145018364663 & 0.6115060022579909 & 0.8561048326389534 & 1.187703929211075 & 0.81674442524202 & 1.0942428206104096 & 0.8975841886294648 & 0.9781977598454409 & 1.2298004706889585 & 0.9041181235364144 & 1.0259366238118275 & 0.925896811270147 & 0.5971978030987661 & 0.9298317774164369 & 0.4893774138338884 & 1.0326954633666696 & 0.5049060718711263 & 0.5844886590127405 & 0.7230070645320626 & 0.5581480286592436 & 1.053825475759812 & 0.6851182118206295 & 1.3665746852705871 & 0.8509215739617055 & 1.1448671888808875 & 0.45558397570126236 & 1.006482663383033 & 0.6616460753506996 & 0.7010120518174005 & 0.31349597016706365 & 0.528369001079666 & 1.0114760390031006 & 1.0077131663498653 & 0.7571280378111154 & 0.8900528993536064 & 0.9317676055286667 & 0.7523546956643172 & 0.6067129908576749 & 0.769898360457033 & 0.8190722399205527 & 0.8518141209926957 & 0.9122762242716178 & 1.017413235402757 & 0.9568639544517215 & 0.7344302076317891 & 0.2869514517561655 & 0.46524560226000683 & 0.6249918803381529 & 0.3746388266322471 & 0.6563409535497943 & 0.7622806144117692 & 0.529199449593497 & 0.1711901871344348 & 0.5456376085829749 & 0.6844824690128968 & 1.0410909254899474 & 0.8659341639914271 & 0.6313783861496414 & 0.8053592990245017 & 0.6209440127875431 & 0.8135432861733841 & 0.7042445231439021 & 0.45237359404677085 & 0.4844980351241982 & 0.8095968129205726 & 0.9396000777187923 & 0.4751572177447702 & 0.824158387067391 & 0.3975750789883708 & 0.6309445286904768 & 0.677480845846731 & 0.9892502296349099 & 0.7710415243128486 & 1.144374497040107 & 0.7094524099703353 & 0.5216275952967273 & 0.4742885331863393 & 0.9886645882259708 & 0.5079173978086075 & 1.0085353051706858 & 0.8878917294064997 & 0.524662813512744 & 0.8385339638703292 & 0.4987819683071264 & 0.6687852409107339 & 0.4547983594466044 & 0.8704518849229385 & 0.5692400887296926 & 0.31796547051467905 & 1.132941365842447 & 0.8687174073611995 & 0.5934893197652008 & 0.6718321845540706 & 0.8356187311074194 & 0.5522888467030413 & 0.7511329236938938 & 1.0137590241187486 & 0.37240113064295016 & 0.5630084942190774 & 0.3194110923847102 & 0.47095505630796247 & 0.9583955495686205 & 0.7469393747781187 & 0.919314067626373 & 0.8796479228229889 & 0.4215953608545637 & 1.1729727690607876 & 1.1593483432256342 & 0.2438498428924728 & 0.580202352886492 & 0.8844729614046526 & 0.49537174422944613 & 0.98156297640987 & 0.6022768714889033 & 0.5827367284317534 & 0.42776003215867525 & 1.193577156354686 & 0.9066898753270332 & 1.0580758927389584 & 0.4621569982280772 & 0.6650185304406286 & 0.8933245025313472 & 1.126389504842132 & 1.0753110194812125 & 0.7390669360959914 & 0.959549829789789 & 0.6198984721335851 & 1.1015005532553548 & 0.44374314526990505 & 1.066633229785637 & 0.9159605890133327 & 0.657156482120017 & 0.676495656175527 & 1.1274754654270656 & 1.206783218196442 & 0.5991468010842323 & 0.695748449866816 & 0.7172015914241523 & 0.5657633058378843 & 0.6259682575342548 & 0.24444787066928678 & 1.1162745354902046 & 0.5653704986185719 & 1.2115421261415515 & 0.5292569828553184 & 0.9582806021577862 & 1.0387061297182394 & 1.2396694940104716 & 0.9817328127681366 & 0.6740990091824941 & 0.7910047711559252 & 0.891898210875108 & 0.8941002380258021 & 1.0542135976164186 & 0.7424706253244021 & 0.9318045026864719 & 1.0295284987202442 & 0.33431004645647655 & 1.1676635458202727 & 0.8692966485314768 & 1.2188286108784327 & 1.1066910459697559 & 0.7563467267997611 & 1.0920661734908845 & 0.5623130327109748 & 0.5204004854547455 & 1.12836259836367 & 0.7015266820764547 & 0.7034282913596915 & 1.0872289511148525 & 0.7448692596011565 & 0.4431598012751855 & 0.41605412103356115 & 0.7729130497825604 & 1.0381283919866486 & 1.1176285775629156 & 0.8449945761122817 & 0.8042281327130066 & 0.9625507368650205 & 1.080697335086843 & 0.4996244337154387 & 0.8792704374778965 & 1.2717805126961643 & 0.7006742327264052 & 0.8548526546828052 & 0.5280277902880086 & 0.8126964136786362 & 0.576163065207124 & 0.5328342016319263 & 0.6483201088197329 & 0.3360603258601297 & 0.9206514726861014 & 0.7265762658153735 & 0.17247871314950955 & 0.7490443207350029 & 0.36890709349190703 & 0.7317043105502007 & 0.8880046097844173 & 1.174115246101028 & 0.4143138362655543 & 0.5086620575296402 & 0.5949022573199679 & 0.7584395631270473 & 0.3826753789634622 & 0.6597980660609605 & 0.49122056780313594 & 0.6193472851466113 & 1.2026678850810495 & 0.8039507088142134 & 0.8119884451559098 & 1.2168959468027458 & 0.8952735959785223 & 1.3403639251532757 & 0.5453665320316741 & 0.7723297740996103 & 1.0730312677542189 & 0.4846697738236057 & 0.5222962456015828 & 1.041435566524553 & 0.948538325080641 & 1.290841156902053 & 1.0268988616057473 & 0.9804917181875451 & 0.5294406807459748 & 0.4664933012731502 & 0.5567592746308865 & 0.41186856416936163 & 0.5071761278828116 & 0.410977698280622 & 0.6564723818862234 & 0.7523010679386736 & 0.34623716823192086 & 0.7738925626718578 & 1.1264236983976494 & 1.090168755926363 & 0.6873130278888893 & 0.598463437476413 & 1.0573745005196067 & 1.249432865905259 & 0.730849654034754 & 0.5152112551661232 & 0.42954101993324273 & 0.43702817067207966 & 0.8053393696838971 & 1.2635366123544625 & 1.2786846503209917 & 1.3634852063159655 & 0.7614243218111925 & 0.714187025854636 & 0.7694108299475549 & 0.5889910610881006 & 0.9790712678003358 & 0.38401133049291347 & 0.9709133592433407 & 1.3413868920651166 & 1.149227647766826 & 0.940626183974569 & 0.862461770388544 & 0.9132488724152589 & 1.1979620666628505 & 0.7979431123200682 & 0.6798078917805392 & 1.0782167121873927 & 0.3592690953334794 & 0.4620916417243863 & 0.7864048401276088 & 0.7390672468697045 & 0.5787880443383795 & 1.217496444381768 & 1.0322867772663045 & 0.8626412852700092 & 0.4952841547478573 & 1.1465062835827575 & 0.6032086854251111 & 0.5810164010538391 & 1.3515219530039757 & 0.5605933323791884 & 0.6122730351440606 & 0.534525365296797 & 1.1636211679046293 & 0.741749184557071 & 0.6640067118260532 & 0.7423093960370117 & 1.1185102179669215 & 0.9808726623913435 & 0.8468753494412811 & 1.0964107456228285 & 0.9911723163662115 & 0.654361543850842 & 0.6460981122498656 & 0.3564647661146803 & 0.975746277312716 & 0.7796187321394287 & 0.7702141244092453 & 1.428988165749919 & 0.7736484920851584 & 1.2696627121157034 & 0.9341261007038814 & 0.9011025534280053 & 0.9776490493281389 & 0.5562874590556502 & 1.289571394428042 & 0.8762891206658552 & 1.357063703496359 & 0.4657605184057274 & 1.0521815455720616 & 0.6572059155321873 & 1.1162296028325904 & 0.7989452243449319 & 1.1736501812911428 & 1.1523851578286082 & 1.3925399445289208 & 0.4783536955532154 & 0.3734506463984895 & 0.8426741002231861 & 1.147773008074545 & 1.1296931947314055 & 0.619920915326075 & 0.5327119223609481 & 0.8895882092334093 & 0.8725498532795924 & 0.6876702089543524 & 0.5901691446380829 & 1.2123867596650975 & 0.9126766139496326 & 0.874370595411255 & 0.7375669661519844 & 0.6416262710703595 & 1.536952329791217 & 0.5009777158891443 & 0.8793781446287103 & 0.49861671763486726 & 0.9222756337730055 & 0.8214055105874108 & 1.1862622233804296 & 1.1734789235568575 & 0.9872024705673811 & 0.38107713121453546 & 0.5811193266741517 & 0.6346187440417678 & 0.8748192413074909 & 0.4580841278593402 & 0.6196324305617241 & 0.8202784203440584 & 0.5401404631244267 & 0.6765871197661134 & 1.4563278633588064 & 0.8425220791122836 & 0.6418429278404858 & 1.17361355714185 & 0.516067368143758 & 0.8418130491001847 & 1.002024188091372 & 0.7327172588300122 & 1.2036990945057782 & 0.3463481256466076 & 1.4163760799115988 & 0.5131955546092878 & 0.7721907157499387 & 0.847181755863927 & 1.0079800661285716 & 0.49062056414250116 & 0.9475417983948717 & 0.7241172258756969 & 0.6570926120942115 & 0.6853252824235295 & 1.1435560767805633 & 0.6733851700125443 & 1.148733318276884 & 0.27150328182826317 & 0.8966697987572969 & 0.6426663009527499 & 1.0025388844722123 & 1.0715603438398908 & 1.0639639257657982 & 0.9069377696470744 & 0.8400710405529431 & 1.0145507611515223 & 0.636691999102908 & 1.2290708310638372 & 0.6249361002074827 & 1.31432673780587 & 1.073555753907526 & 0.8595196529460728 & 0.7975285012935179 & 1.0671647901870536 & 0.8103412236750942 & 0.8179358391924171 & 0.38456311749053956 & 1.0423624295253429 & 0.5645925690978023 & 0.8440527314454483 & 0.9798298511661829 & 0.5177043614150039 & 0.8128233902156361 & 0.45519209582327513 & 0.8312359401183482 & 0.3447873919359402 & 0.7117745575538513 & 0.5495706383088487 & 1.003296161688253 & 0.8311822565753753 & 0.8532125482682364 & 1.1811149944973995 & 0.9280789518475252 & 0.3904059897421063 & 0.9717504638957295 & 0.5932532092937521 & 0.6550869826854931 & 0.851446221830495 & 0.9036298803638364 & 0.9638131913111234 & 0.7358594017125446 & 0.770549039374158 & 0.7671360171669975 & 0.7056502975476123 & 0.8427679092103031 & 0.4261311199450215 & 0.7198856066112825 & 0.6892372592128507 & 0.45065961442881186 & 0.5901865429221398 & 0.7652706857061392 & 0.7447574836254094 & 1.2914258280318212 & 0.8821444900023102 & 1.1469625618245878 & 0.4099115435533475 & 0.6089629693948658 & 0.8109109568608497 & 0.6070073939478859 & 0.6247514238054672 & 0.5321123916992333 & 0.7718419669991899 & 0.7139993446195078 & 0.8163880181944111 & 0.6888031593720485 & 0.8533849854909155 & 0.93438254773459 & 1.0019119314812353 & 1.1352409247911714 & 1.2450943880422085 & 0.820862487211617 & 0.9391186208075425 & 0.7369062207035981 & 1.1870331407702228 & 1.1630681634967213 & 1.1318361578049076 & 0.6117155603307246 & 1.2208585946879527 & 0.6726660995200783 & 0.7639500215159029 & 0.9043882765232734 & 0.6591246471948086 & 0.8924505202487815 & 0.9123209930813997 & 1.2599228525999435 & 0.7304207150253469 & 0.7958051564374935 & 0.44417431205348223 & 0.5855766218212081 & 1.5116828353639664 & 0.7218286474906122 & 0.5102628995350352 & 0.43538645587306785 & 0.8514765702542667 & 0.7513852366832318 & 1.1244483498083342 & 0.5848106202156386 & 1.207951637334838 & 0.8356350952870407 & 0.6427076825701996 & 1.0388279472023891 & 0.6873700669272523 & 0.9375667942859832 & 0.3103644757968006 & 1.0731444873338156 & 0.9699351621012975 & 1.3448452572862544 & 1.0955293587136994 & 0.8216675976226475 & 0.6042299142646637 & 1.291763907581376 & 0.9599294574091943 & 0.740955235470839 & 0.36825692080829364 & 1.1371878165664933 & 0.80310396075682 & 0.9077869247825453 & 1.1182295144247871 & 1.5064884405928758 & 1.3575053591209965 & 1.3684844080458156 & 1.5031041269452696 & 0.5815803467040821 & 1.0897578184338326 & 0.41385190680246664 & 0.9300935034167112 & 0.5503866321452957 & 1.1428651243909005 & 0.9760785713373668 & 1.0961586334151472 & 1.1840927510101393 & 0.9473322755748728 & 0.5175750533382601 & 1.160392975222819 & 0.6363328717559128 & 0.9175391970211166 & 0.7280288497325607 & 0.8309428718743558 & 0.85652553127521 & 0.8583359027378711 & 0.8505421651844212 & 0.5790901463026054 & 0.4861460268810734 & 0.6435026516737138 & 1.1947635960034098 & 0.7419352835289383 & 0.8445466091367624 & 1.2093313516449564 & 1.0872237236729387 & 1.3305812080783816 & 0.2574470904378975 & 0.8894150167062194 & 0.517885141739892 & 0.9537703253983145 & 0.8964213512380736 & 0.891393326460897 & 1.029060113312205 & 1.0349788071684871 & 0.47367140194982865 & 1.1599395574265636 & 0.7968699092583272 & 0.5208894441133461 & 1.1671917329078705 & 0.89221958503564 & 0.8732081736464457 & 0.7219914912199584 & 0.5030996112542094 & 0.6653295128494985 & 0.7219861776886143 & 0.5371582529256705 & 0.6869869801912881 & 1.1253600063369777 & 1.2280629351345886 & 0.9567779793512069 & 1.1893962957184738 & 0.6632760006309966 & 1.0754965289239071 & 0.3777707934539523 & 0.8528414548054306 & 0.5248131859947972 & 0.6174633049688355 & 1.049249157149411 & 0.45410566891058907 & 0.5891014402312098 & 0.6650038188932759 & 0.5916673712348766 & 1.3062354535253538 & 0.6665405711483146 & 1.1681823536277633 & 0.8282977985565807 & 0.8600481263339128 & 0.7720545387643185 & 0.7563912184125973 & 0.5509735822252338 & 1.3255204391887816 & 1.2894308135770007 & 1.2616181328767988 & 1.1094336844470993 & 0.706747010769788 & 1.0771253519869262 & 1.1479854976645152 & 1.1990961671475493 & 0.8987570446743919 & 0.8311713064903469 & 0.7783789464971558 & 1.1001687366390716 & 0.8373446480796809 & 0.5918496959483575 & 0.9272216209643271 & 0.8088611036912992 & 0.610356021441415 & 0.740766294411851 & 0.3256124435717223 & 0.35467251410458117 & 0.9514194202508073 & 0.6027876219085018 & 0.7628555725458916 & 1.1872030159231888 & 0.9591875286680709 & 1.3283790477473185 & 1.320447017659087 & 0.4864895499224095 & 0.6749915877469852 & 0.798036494837538 & 0.7203371538233778 & 0.882219731609165 & 0.7161850018972546 & 1.2431221924866258 & 0.8619829591549918 & 0.8670455635107196 & 0.3529461522421393 & 1.0020384093032784 & 0.8670692909117149 & 0.911042059780644 & 1.0013460928928373 & 0.7734551869273584 & 0.7916862679261178 & 0.9890157466187133 & 0.9463155040301263 & 0.7290664982196141 & 0.8442700448575805 & 1.0782056704613578 & 0.8115474375478834 & 1.2298995486870066 & 1.3700292823964546 & 1.538508172065655 & 0.282166491511822 & 0.6965983433369932 & 0.9060771075970163 & 0.89150866058045 & 1.0702462036237388 & 0.4216301675015368 & 0.5683749224453425 & 0.8146893868970936 & 0.7831449998624197 & 0.9183945524954223 & 0.7575834764194861 & 1.120500031598792 & 1.0949899412096633 & 0.6844152873128873 & 0.3969204413147478 & 0.38119337060527675 & 1.1633978245906853 & 0.3627222083304517 & 1.2988902783609186 & 0.8486278398040874 & 0.4903366895085203 & 0.3492591976696745 & 1.1577751096927713 & 0.26258499757280745 & 0.8453602907154544 & 0.7067113726803005 & 0.9559845516649363 & 0.9245400678330443 & 1.2140273711531855 & 0.9171938867338398 & 0.7318063000440087 & 0.504871752484346 & 0.8079291741040261 & 1.410701334561444 & 0.7487330571876252 & 0.7826536186736419 & 1.0629871323528512 & 1.5142435362780136 & 0.734266482284468 & 0.7699763117582002 & 0.45012895210213266 & 0.6492921279323695 & 0.8442396691897928 & 0.8402539824872113 & 0.9353100876008612 & 1.0887632907431253 & 0.5604411341778114 & 1.0157306846395098 & 1.2233192741720176 & 0.3773695271605427 & 0.9662230543860795 & 0.6795436861480381 & 0.7199013666687673 & 1.07558299847805 & 0.4209186138745932 & 0.8372709502660759 & 1.0184954926911531 & 1.1536323466319656 & 0.6135914150581727 & 0.908640647389031 & 0.5606288028075997 & 0.9485505665967018 & 0.6406531211725562 & 0.5696098498990302 & 1.1020765814477511 & 1.023442599338003 & 0.3999746724830672 & 0.6879633519723284 & 0.6637057068072333 & 0.6865530258106013 & 0.9634600007990124 & 0.7871656007964751 & 1.2277584006078954 & 1.6645710037869959 & 0.820624279619476 & 1.0601369479980518 & 0.8248700173889169 & 0.9689941073345761 & 1.3042227765483458 & 0.966997463234318 & 1.1293083517732168 & 0.9750160816239841 & 0.8854115205195265 & 0.8771257529014707 & 1.3172389653580259 & 0.8519508654955334 & 0.8826076991022381 & 0.4940962890120018 & 0.43197997816752576 & 0.9127107300054772 & 0.8154369770688699 & 0.6605747781060356 & 1.1353816170047608 & 0.9616166756204385 & 0.43651659050387825 & 1.1427372625490908 & 0.7464981031700012 & 0.7436561184842275 & 0.6517682142406753 & 0.42059291794663767 & 0.5836003716604081 & 0.8678797052324944 & 0.997030672172981 & 0.7222171544050864 & 0.7819856976987631 & 0.5510291002185363 & 0.27985799970093367 & 1.0857944500332064 & 1.2096114950147816 & 0.6144689660085264 & 0.9793896867021794 & 0.8230449782415109 & 1.4790493895493437 & 0.901164567617286 & 0.8657995646089292 & 0.4556919805833366 & 0.7117477766291676 & 1.1324321833608697 & 0.6163027465102054 & 0.8367951286478039 & 1.3436016468241743 & 1.2485522024087297 & 0.9624740265425139 & 1.0058413683894707 & 1.136691280550347 & 0.7392166969932965 & 1.0744688926431243 & 1.2994661392132745 & 0.5612341031979304 & 0.47938144676955957 & 0.8357422048717102 & 0.3485113863261189 & 0.7076673373121481 & 1.0833759167224342 & 1.4594901268085885 & 0.9431349930200585 & 0.35832180883223885 & 0.4514105478268508 & 1.4190817463254901 & 0.6751919026681509 & 0.69781031150729 & 0.8444527468844101 & 1.3331864627471248 & 0.9513880977463478 & 0.37353730063493246 & 0.9932584820746482 & 1.1164209552293578 & 0.7335438547142735 & 0.8827994207367601 & 0.9532938674577215 & 0.8139363774544925 & 0.95266982464677 & 0.40829045230055466 & 0.8150052022604867 & 0.7546027165653284 & 0.9179541425410229 & 0.919080670223753 & 0.662673810977933 & 0.3549732540433831 & 0.5049477575376138 & 0.9326441678638199 & 0.8442261643465334 & 0.8965823366746563 & 0.7251077177845812 & 0.8330517811173823 & 1.4760394378157524 & 0.7553749881812808 & 1.202371653190266 & 0.46798242274235613 & 0.3180850895080539 & 0.8671058685868108 & 0.8557328915270821 & 0.6924158907167102 & 0.8237045544559813 & 0.7396508886605762 & 0.7474149315836898 & 1.3487656744624537 & 0.7619294581719589 & 0.9106304484804429 & 0.5014168371210403 & 0.4857597354151345 & 0.5470107131732675 & 0.9720715234615919 & 0.7617350255402103 & 0.9602076326151943 & 0.6185687258800484 & 0.6788833850097529 & 0.6962344763916459 & 1.056527674084156 & 0.41599304427881567 & 1.0153812687930546 & 0.5337735851424914 & 1.2799482000717222 & 0.765060236776046 & 0.8008276428916147 & 0.6600848842875171 & 1.1956175373891325 & 0.7387982053512752 & 0.2695332745035558 & 0.4805900303586572 & 0.4915551898663636 & 0.572972083326767 & 0.9133126404565891 & 0.7087600526798646 & 0.7314089886423407 & 0.46183651999867953 & 1.1742645458231806 & 0.5594944057039432 & 0.46413081857351485 & 0.805699182408548 & 0.8345187596540954 & 0.6370585804463437 & 0.4699067537135468 & 0.9873026665130556 & 1.0335424098071473 & 1.3139099580891827 & 0.43650019533691886 & 0.5131127166511165 & 0.7245496544355237 & 0.7140212526614833 & 1.21882772669272 & 0.7356377795150786 & 0.8794036404092904 & 1.1071601251497285 & 0.7127281931120397 & 0.7440491068268387 & 1.340599926927863 & 0.6477414089590827 & 0.667959629575312 & 0.880205955979225 & 0.6997852918295786 & 0.9284764993998116 & 0.9796171585376177 & 0.6462280794984703 & 0.7983710354499555 & 1.3158508300378435 & 0.6066613545496912 & 0.4144047464453035 & 0.5624538115099725 & 1.3780089969900866 & 0.5968252458002774 & 1.2963343716871898 & 1.4233863898359107 & 0.7394421072926128 & 1.0903641292624202 & 0.8498120052858312 & 1.281204268290945 & 0.3589077901950314 & 0.8664738951334201 & 1.1263105254174672 & 0.8457838739694459 & 0.8010966145747994 & 0.5965896131498815 & 0.9188369466215192 & 1.1097702435129404 & 1.3022422710899135 & 0.7857082482601543 & 1.0412692429690689 & 1.0888338853268489 & 0.43008310335152794 & 0.9349781320946939 & 0.506574984549105 & 0.7772382638066974 & 1.0574110326301873 & 0.9850214682345808 & 0.5757700431053764 & 0.6881977605796868 & 0.7872498199932436 & 0.7596040927314872 & 1.1008402831732584 & 1.0904871772199143 & 0.6825800969429211 & 0.648690204604641 & 0.6873918103346314 & 0.6600374151501427 & 1.0436087850312545 & 0.9241217947139837 & 0.6838936857114534 & 0.8036069245449253 & 1.44962302844502 & 0.38408616811276197 & 0.37933093833840537 & 0.8972333113936997 & 0.9160979506028232 & 0.3918851992589599 & 0.5405744354310149 & 0.7322288822643921 & 1.3542581818566992 & 0.4978092703814519 & 0.7849866349970938 & 1.2854497811155656 & 1.304515805076365 & 0.8287806219082465 & 1.0067659533247042 & 1.299398948124597 & 0.736015371019498 & 0.763112225281068 & 0.5131587132747604 & 0.49534734356956067 & 0.7563836694009177 & 1.072276687139676 & 0.9415511437637594 & 1.2018013677233992 & 0.3794486718880188 & 0.8845891036490142 & 0.7728430638601689 & 0.7483148767419185 & 0.9593080133103005 & 0.8677716571739367 & 0.7285794316928781 & 0.6976978835818638 & 0.6755363601387373 & 1.4926500680733765 & 0.9203434020197169 & 0.9954777050162288 & 0.8517382729163105 & 0.8943003078131129 & 1.093031916276047 & 0.9776688964582722 & 0.6745284446228921 & 0.5958628208472351 & 0.741131379615035 & 0.6677487091880812 & 0.826568250721899 & 1.108730006003811 & 1.0952222392985511 & 0.6241961466280418 & 0.7524849677970866 & 1.0802704484473822 & 0.36242337311386325 & 0.4995114553530713 & 1.0039884016517142 & 0.9577466833988081 & 0.6231888241454585 & 0.6612732674854238 & 1.232804456121339 & 0.5261672750436909 & 0.549495560040288 & 0.8057765531707755 & 0.90938157413667 & 1.2623624287721784 & 0.7271814887231386 & 0.7717494171134212 & 0.9863339780259205 & 0.6503437038787648 & 0.7002617463781368 & 0.5857978843659593 & 1.0078992081353753 & 0.9169830755472651 & 0.6545144941017425 & 0.7921975831153051 & 0.3182357202075501 & 0.9503937377293233 & 0.7512891155395001 & 0.7543480460629447 & 0.5941641191397514 & 0.7747317698312135 & 0.48370834711332455 & 0.7545319830461845 & 0.9445640969869656 & 0.9311808694298678 & 0.671838794772525 & 0.853836256949281 & 0.8973263204591194 & 1.0503829175457287 & 1.466774638169397 & 1.1294307750284014 & 1.0232808523879475 & 1.2421854482043244 & 0.7689774831993887 & 0.7026408399156522 & 0.4786212582250921 & 0.3058525852165302 & 0.9623943715583728 & 1.05117834449397 & 0.7299153019320362 & 0.6645766064972287 & 0.8109142585741733 & 0.8515928003934828 & 0.9636699727516366 & 0.6372596654691038 & 1.0180711927181338 & 0.42653219590389285 & 0.9540565329934163 & 0.5716496525146506 & 0.5356955910395845 & 0.6365203641666396 & 0.3733107266617581 & 0.984068037135153 & 1.1006470526262502 & 0.6496856886705248 & 1.3523424590353996 & 0.8820067997978634 & 0.49209086222904763 & 1.4917770816093239 & 1.1424604083515484 & 1.0153203035769667 & 1.175801145641129 & 0.882070802736149 & 1.2794058255499179 & 1.2390435651874856 & 1.054388336783755 & 0.5107896560344073 & 0.5446768315424778 & 1.3332657081482757 & 0.3633897364024866 & 0.42699635038802203 & 0.5140402597671029 & 0.6776725304507304 & 1.069472393639263 & 1.2446403703062001 & 1.097325863095598 & 0.574954220519427 & 0.7690039790214113 & 1.1559873226087665 & 1.1027189950917142 & 0.5334509085542278 & 0.40903110620341754 & 0.6532533646006372 & 0.7904384385531433 & 0.944056309159904 & 0.6014403219579165 & 1.140171830666976 & 0.6499766252846736 & 0.5071223796855812 & 0.7871552308151696 & 0.7340649788711245 & 0.6491380871977972 & 0.702407973381319 & 1.0681645932240433 & 0.9848308453450084 & 1.0240410526295134 & 0.7384372462661049 & 0.7906858777756312 & 0.9507526497923141 & 0.9956735406510678 & 0.9898242947049073 & 1.0004837907843582 & 0.9349409074789027 & 1.1390291639617072 & 0.7516713624382009 & 1.2172030846825252 & 1.190475959344422 & 1.4812234437166643 & 0.657238062926702 & 0.48024210270208867 & 1.0680515493793712 & 0.3173598580884186 & 0.6441450359571321 & 0.8136224322623566 & 0.7598842416302696 & 0.8668923215549109 & 1.0688135689995746 & 0.8366985747688686 & 1.035715903594443 & 0.7129725138612967 & 0.6752626089940138 & 1.1216983895454637 & 0.8838309923182949 & 0.7361179227644667 & 0.8917642477107359 & 0.658506312080225 & 0.8242748852959103 & 1.2059774123442457 & 0.6230409230169646 & 0.6716761329446226 & 1.1821427158424505 & 0.40847837154758304 & 1.4492129645772485 & 0.869541503179422 & 0.5600822094545483 & 0.7360076644042982 & 1.2832158900052695 & 1.322092822318235 & 0.8821723413885871 & 0.9417351968008717 & 0.9523510639724706 & 0.6125540697122 & 0.7379839779367205 & 1.1840889442530949 & 0.5333320830595702 & 1.0313066535927884 & 0.6200475491286047 & 0.7380648184852996 & 0.8050979268222597 & 0.41407757989381483 & 0.7525942180275415 & 0.32669243076641424 & 0.5707828531650275 & 0.6318372276841397 & 0.9409063456401358 & 1.5552924593020838 & 0.8645058258809549 & 0.4818908564131254 & 1.0395632288518186 & 0.6427076666038113 & 0.5980469811420429 & 0.3003011210367692 & 0.8210618940788795 & 1.1954625148267117 & 0.8667558061608405 & 0.9771599838484815 & 1.243055773208228 & 0.6443413729668536 & 0.9664249407500194 & 0.9101361265997907 & 0.8695114869982729 & 0.760433910516162 & 0.9402629493924356 & 0.5440343185324941 & 0.694527641312226 & 0.8803501556888667 & 0.4967880275923228 & 1.1690846990497141 & 0.8462522514326364 & 1.1360399751242416 & 0.9933220984398936 & 1.0517934245416227 & 0.613980889077477 & 0.7524979702003448 & 0.6175500985289212 & 1.0478952772867645 & 0.4512707813356797 & 0.49463825897412933 & 0.6225524916845144 & 0.7015154022594977 & 0.33039936373826473 & 0.5568893616399495 & 1.0637420361625398 & 1.0117219859536593 & 0.8440980810165626 & 1.1975400800480986 & 1.188124899208527 & 0.6977300985458779 & 0.4232357880064732 & 1.2278479027576785 & 0.49467328060255916 & 0.46225506792252435 & 0.5690076693060541 & 0.8867923523426654 & 0.8528952422962397 & 0.46920201222938046 & 0.3395519591457351 & 0.8583044674583217 & 0.9059059512202501 & 0.4191616217024753 & 0.6226475686900839 & 0.6267658838394745 & 0.5695599923845238 & 0.4288801706730304 & 0.7386012559962387 & 1.1051103967322347 & 0.7238242289502932 & 1.1299957393052251 & 0.5775738766711564 & 1.3590574105267634 & 0.2899506131556959 & 0.7312530174231083 & 0.8252278310328116 & 0.3375819945110086 & 0.5623543153876681 & 0.608190127912745 & 0.6133574380333421 & 1.2279709641032823 & 0.779035134391283 & 0.8677990039931581 & 0.8064704644848363 & 0.6464282930327877 & 0.9371689434702849 & 0.9059771995266803 & 0.7034138405991085 & 0.7464407092041675 & 0.9902275661566454 & 0.5761469536330478 & 0.6997339164178501 & 1.0046020312845307 & 0.9610835801408472 & 0.9190299813761372 & 1.772141238070066 & 0.8216698705279266 & 0.41637548834279026 & 1.2672401608849064 & 0.9363583122802396 & 0.9027577195595358 & 0.4952130658950554 & 0.8199935573024956 & 0.5839213222924797 & 1.1100676603729245 & 0.6590344465074983 & 0.5888290789538142 & 0.8515746773081513 & 0.999799819401845 & 0.5029068286897214 & 1.2356441876502986 & 0.9615588712814308 & 0.7547049542708627 & 0.5295685192594293 & 1.104534667681921 & 0.3304223638649754 & 0.6012042706824092 & 0.6838223467000638 & 0.6932320212603675 & 0.4412428487753655 & 1.2063640145348087 & 0.7936379825835447 & 0.7236136198167523 & 0.7938583054785643 & 0.6679094836735536 & 0.5851196456287086 & 0.4185403026134561 & 0.6324129683296622 & 0.6746088778458963 & 1.226382244865372 & 1.061203357972384 & 0.8965755770666264 & 1.087835106713497 & 0.6447947070754187 & 0.9444000626091371 & 0.6463708909635993 & 1.406165835656922 & 0.6434936492732757 & 1.2907289808844051 & 0.8971989156680082 & 1.0505984536134214 & 1.2667495013129295 & 0.8676937623045561 & 1.0054628186050298 & 0.7881686344459808 & 0.9345929167163066 & 0.9093865280652101 & 0.987957886480427 & 0.694989459773536 & 0.8435477418533165 & 0.7211680995394988 & 0.5011924934813232 & 0.3318919958366247 & 1.2696903442498753 & 0.5113015031122731 & 0.5403978961941195 & 0.9582922043265849 & 1.155251519207597 & 1.0040627183860897 & 1.0343764397760697 & 0.766989831393834 & 0.7670907698489537 & 0.7274179189438912 & 1.0295412762033975 & 0.5437032245891503 & 1.0578086378491565 & 0.8568909749161493 & 0.7224930215676671 & 0.4314117436988093 & 0.7452138969680299 & 0.8965674683350351 & 1.0026761237705246 & 0.8280416977344235 & 0.7963251798542017 & 0.4417551812334213 & 1.136937466646766 & 1.1105889786686225 & 0.8942017362255116 & 0.9787075020963033 & 0.8198499102823497 & 0.8422551734318499 & 0.5863940329479183 & 0.5331260527277382 & 0.42874022341846435 & 0.5752458518506435 & 1.0197003939364364 & 0.9860360383337413 & 0.7805374798427053 & 0.7722224352107142 & 0.4010403807480951 & 1.2895172125938885 & 0.555545403961162 & 0.7919500389893505 & 1.1031613601188643 & 0.44540270821002675 & 1.1867347348377009 & 0.3966889195751926 & 0.4436338970960541 & 0.42762219650465677 & 1.3457563065404692 & 1.0403320623518837 & 0.7707179217066836 & 1.0655345795690152 & 0.6709245278811025 & 0.6268389377426796 & 0.8986156651745452 & 0.7307931612254128 & 0.8467337364822395 & 0.5978782002867574 & 0.7354913149332554 & 0.8345836047898346 & 0.41882678176431454 & 0.6211767419432696 & 1.2177817104612232 & 0.9609008875892119 & 1.0480114114214394 & 0.8920541733392283 & 0.7165766586836196 & 0.9768727303582538 & 0.914587870370965 & 0.6844530863255232 & 0.5323886349525049 & 0.9227613697538801 & 0.412231742040058 & 0.8497329676522078 & 0.6611469668934891 & 0.8272178725193156 & 0.7435151479497022 & 0.8490740694485696 & 0.9352313726479655 & 0.842655971848578 & 0.5709198250984914 & 0.839133938145609 & 0.7469870751102688 & 0.9922231665318384 & 1.355120901987973 & 0.5699551206662513 & 0.4691354086331704 & 1.1089938786165134 & 0.7679276849176295 & 0.6244850745908777 & 0.9245202765249033 & 0.781153258929226 & 1.0687827866549744 & 0.8936592073718903 & 0.6841970742064941 & 1.0083264065610353 & 0.6059075932105603 & 1.1012676474007437 & 0.6448511569934582 & 1.0106661401336996 & 0.4454473491341746 & 0.7198112395926789 & 0.3527658212968799 & 0.46875120942858195 & 0.8539520412542355 & 1.1338522069660744 & 0.7076983593494348 & 0.7365127523306465 & 0.5350882106346672 & 0.9799084857175606 & 1.2272548629691278 & 1.2083666940591948 & 0.8546088495377642 & 0.7368272443834893 & 0.529150145490583 & 1.3533842524226627 & 1.3061321599195561 & 0.7321352933271661 & 0.5990497392106394 & 1.4591990444893592 & 0.7368987094182267 & 1.5440385144721318 & 1.0307809462196955 & 0.6158847662365898 & 0.9765795294489434 & 0.8730573213525918 & 0.8875631900515988 & 1.0437035962358434 & 0.3927433241671862 & 1.0005899356563017 & 1.1579472664704937 & 1.1491397452907672 & 0.6601561228803494 & 0.34792098100419405 & 0.9814312644361075 & 0.9433564383430422 & 0.6438617716192557 & 0.5501149168899934 & 0.930095918361048 & 0.523439692224545 & 1.0055150659801333 & 0.9554291450749908 & 1.294699952993744 & 0.9221178651336039 & 0.7799122778945082 & 0.6496222282956792 & 0.5495732732567307 & 1.174702128555556 & 0.4179506666804081 & 1.228280559013985 & 0.8719384226939882 & 0.8903039211967798 & 1.1951918474434693 & 0.8076697623879706 & 0.41186933897674144 & 0.9780455023884247 & 0.4862080531020456 & 0.6662426203894594 & 0.7158456546053152 & 1.2745811524799122 & 0.8922343114847815 & 1.1186805607338668 & 0.8837042697298692 & 0.5040021898829773 & 0.6638031254723534 & 1.396681130085716 & 0.9406332611512773 & 0.5933423552112247 & 0.7061893853282093 & 1.0844234965245136 & 0.7585659255482704 & 1.4806032947876215 & 0.6084526606542502 & 0.9141298857842441 & 0.46293240585980655 & 0.8137864097547953 & 1.0978480574905298 & 0.7973424325158062 & 0.9025131399360792 & 1.0810502188889928 & 0.9092817477810038 & 0.7448426669809123 & 0.3836152456542063 & 0.7870674705664502 & 1.06371140966799 & 0.7816976160235137 & 0.7760675288195069 & 0.8125748889441209 & 0.8103051964410493 & 0.4578492922172097 & 0.619160516063237 & 1.331473239495567 & 0.7491993059634009 & 0.7049160607561119 & 1.0103515367517666 & 1.2144834849118342 & 0.4682363858333944 & 0.7179641232025986 & 0.9685220813828322 & 0.41221299538418776 & 0.6008450787698797 & 0.7557389409343742 & 1.158703891806873 & 1.3075387660591002 & 0.3860068802322473 & 0.9279999370637186 & 0.8290420069115668 & 0.6138995367733748 & 0.9515040973116381 & 1.5151051146204373 & 0.6925964051460085 & 0.6554194413652221 & 1.2707447177708224 & 0.9710583698858148 & 0.3380382243023403 & 1.238888021859806 & 0.6665199720493039 & 0.553780292671411 & 0.8153532588132658 & 0.8232221555969252 & 0.8358621878506036 & 0.43594249945106045 & 0.5890676307194022 & 0.6281502378123582 & 0.6598210826024472 & 0.9038403312815613 & 0.7157100729213266 & 0.8714284064927338 & 0.6076287538004744 & 0.5900824460630837 & 1.4165652035801497 & 0.7868824161554804 & 0.441696261541226 & 0.8263889636659574 & 1.1610642061365415 & 0.730019617937655 & 0.619375081567815 & 1.196509697207395 & 1.4585981474869698 & 0.975969153419912 & 0.6592011772997977 & 0.7405359549262147 & 0.5625863773903278 & 0.8926058722610399 & 0.8413208301812735 & 1.4083663681090743 & 0.7348609663335081 & 0.6063807808327234 & 0.46596280221544273 & 0.5095771690443175 & 0.5848192075227723 & 0.5828176176327461 & 0.8850831476385688 & 0.5459235870118185 & 0.7099037686295012 & 0.8411270409491841 & 0.7881170931785817 & 0.5785269782676074 & 0.9729595319612259 & 0.9145299570320298 & 0.9814298257842704 & 0.8058787353351374 & 0.6922528627742596 & 1.036207724157144 & 0.7179504573940797 & 1.0990779354805895 & 0.8930150885665513 & 0.6070637157996545 & 0.8622916724997416 & 0.5291652003206362 & 0.5995614441168742 & 0.8919859924389065 & 0.9208464979050758 & 0.7969231353048963 & 0.517416727080185 & 0.8772973982471733 & 0.9480016462629239 & 0.9748383037386897 & 0.9518124825942993 & 1.2317153580021358 & 0.5899907032727638 & 0.8136447816890837 & 1.5252070372715523 & 0.9207157596857283 & 1.5040971731468815 & 0.7349791612110381 & 0.8806232905563165 & 0.764681225160589 & 0.6986784364515995 & 1.4881570188322522 & 1.1749941948843303 & 0.6846662064488319 & 0.650307253281275 & 0.9412509766723248 & 0.7640691686445855 & 1.2867767396966812 & 0.7594489377738144 & 0.9157109536374026 & 0.5234160190624171 & 0.6519215530242168 & 0.501520048557262 & 0.8144834369409314 & 0.9178532597285876 & 0.47919075808806394 & 0.5782447022774778 & 0.8783999359175936 & 0.9307519449687365 & 0.6968933604090042 & 0.5599524231537353 & 0.7979042560421944 & 0.9338418510927495 & 0.5076726337790203 & 0.712347957573653 & 0.5219897153288527 & 0.7311447453613407 & 0.7946401564418165 & 0.8658322518407868 & 0.5652946876547282 & 0.6974974755219427 & 0.8240764826778312 & 0.9417070696455114 & 0.6852043871888394 & 0.5608922508385628 & 0.6339930349796743 & 0.5700312238744367 & 0.6140706216153856 & 0.7637883639791905 & 0.38716261807071833 & 0.4895255969318071 & 0.535192014988277 & 0.8261701713059626 & 0.7417429987408897 & 0.6955310510659656 & 0.3393887227836892 & 0.5375166787032578 & 0.6004498599740541 & 0.5631009684609153 & 0.714229281699477 & 0.429501200993485 & 0.411553317926907 & 0.7046367489446108 & 0.8641758345525988 & 0.6305297962331246 & 0.7828220750927525 & 0.5356689230197801 & 0.529816954555259 & 0.9058452636363395 & 0.7733394891019875 & 0.8513498185151949 & 0.868072376150174 & 0.6753907089889265 & 0.8121620781413283 & 1.1125466043140915 & 1.2988391057506636 & 0.6223541526564735 & 1.0164085508423513 & 0.7335400602982678 & 0.8154422074422112 & 0.4504534896824191 & 0.8110275796215696 & 0.7699892155069146 & 1.076527296615936 & 0.8006013239730914 & 1.2354327921317778 & 0.7270034612525896 & 0.2972319792366122 & 0.8420051912564882 & 1.0195489083892195 & 0.9330998846855113 & 1.1898400045023185 & 0.7952330401486929 & 1.136783001408528 & 0.771739003586975 & 0.6466200471980273 & 1.3335396499372787 & 0.9124041518073912 & 0.32498100096915744 & 0.9943008086777455 & 0.5266036227228483 & 0.6722275048219596 & 0.5693727244780606 & 1.1844677370898828 & 1.035376548194024 & 0.9092559729319799 & 0.8985544841937695 & 0.6533651094342658 & 0.7882427832249914 & 0.5202292169150861 & 0.8078583481281675 & 0.7698459334532066 & 0.4850882321719817 & 0.874382587805009 & 0.8104743462647354 & 1.303720935000587 & 0.6958222332446294 & 1.2788630288300065 & 0.35637188191262303 & 0.8927015471764096 & 1.0498903549721421 & 1.259503893750321 & 1.2018097024360357 & 0.6257479357121531 & 1.0065002568639316 & 1.0647343032081518 & 0.9656389086568755 & 1.6168163240566473 & 0.6181216999056646 & 0.604814767664977 & 0.46151340741476576 & 1.3477531422195497 & 0.7769859968269358 & 0.8713159428609775 & 1.170010144993271 & 0.9170573132881744 & 1.0813744953093871 & 1.0950101543254656 & 0.681127002421124 & 1.4241719075055983 & 0.9893084592259865 & 0.46740600618535594 & 0.7073660187537305 & 1.25182039997862 & 0.9302591211219157 & 0.9597088627630419 & 0.28026760723927907 & 0.44402415924358807 & 0.6149417329558782 & 0.7880072971517735 & 0.9432700145070523 & 0.9464679692691796 & 0.35160105157108495 & 0.9691057460770163 & 1.1382680281466038 & 0.8951810520745342 & 0.5267418336949337 & 0.6322963675613533 & 1.082182460783891 & 1.1241763854942866 & 0.867102280833505 & 0.96416937967288 & 1.0409091133654509 & 1.4240186389897123 & 0.6204763241026764 & 1.1831197237512125 & 0.6596669703053465 & 0.844619991172718 & 1.035566647099311 & 0.37321557023457264 & 1.0576853663471808 & 0.7839900962316719 & 0.7865324674243712 & 0.7745821944691794 & 1.490799833600183 & 0.855536756853183 & 0.7006866529999264 & 0.6149883545190354 & 0.9423866322524193 & 1.050894218779154 & 1.610426143960782 & 1.0841168374105836 & 0.5879761469242344 & 0.5352340779097916 & 0.8827233039736875 & 0.6590268346336561 & 0.7214684133352055 & 1.2598313293784111 & 1.113114283590728 & 0.949214822327722 & 0.5936761042783942 & 0.8841753089645609 & 0.6551857410059828 & 0.6331649898423478 & 0.3963807508334365 & 0.9545424108877395 & 1.4272994627273656 & 0.29609061164070805 & 1.1809206114840192 & 1.0451872732237477 & 0.542467167145609 & 1.2765470978828668 & 0.8331216194717488 & 0.39159710921136 & 0.765958878468032 & 0.9085230539466645 & 0.8062558868071502 & 0.586062232577504 & 1.3834845809275276 & 0.8532213122849663 & 0.9153204723399783 & 0.6871770660291443 & 0.9294604269193132 & 0.4610470598789753 & 0.33656050198618154 & 1.0687368619925623 & 1.3070363196758015 & 0.9668812269110909 & 0.7355786312376523 & 0.8243166155925913 & 0.8376463803322712 & 0.7108825848862982 & 0.8422618619402176 & 0.8087152534101243 & 0.9982278468416572 & 0.7406112577020798 & 0.970708431716367 & 0.8713228481632743 & 1.2909405863004846 & 1.4147524797553617 & 1.0465399555517485 & 0.47530960780376835 & 0.42558727287570364 & 0.5861810574081452 & 1.3673741687340386 & 0.7974412475267945 & 0.5389198080474806 & 0.52226996844237 & 1.5401537883949428 & 0.6700699152011763 & 0.249461984624105 & 0.7953708387678261 & 1.1694252258788387 & 1.2750097494068535 & 1.0833404243686462 & 1.2695294967809285 & 0.8400720139030738 & 0.9542536229643866 & 0.5201426995008905 & 1.2796163695958458 & 1.13632873396783 & 1.2393028386599765 & 1.1536900481021333 & 1.3553371477676976 & 0.8430598074660038 & 1.2960282667725358 & 1.6825741015523459 & 1.049592729492204 & 0.725593002781907 & 0.9042497677232557 & 0.9803740087418276 & 0.53981990398277 & 0.5318722907205943 & 1.143628605778239 & 0.8121982127296595 & 0.592271890649683 & 0.8845501071143422 & 0.9705925261096976 & 0.8793723734790075 & 0.8369321432522754 & 1.3701784010515885 & 1.0219874422234123 & 0.9744283603373658 & 0.5750414747653629 & 0.5547749217118918 & 1.0767752199648926 & 0.38760085385434295 & 0.5640920370161554 & 0.9040396041236344 & 0.5092777104635701 & 0.8346873780862806 & 1.0509535730751256 & 0.7964142747079277 & 0.9739273218941749 & 0.5941897658295521 & 1.124692873685503 & 0.8861294331963513 & 0.7552223149887316 & 0.6467755103581445 & 0.7114909575267395 & 0.5540560811422417 & 0.8569364213040296 & 1.1261424697067228 & 1.038668679834138 & 0.9070364578745658 & 0.44709547333754196 & 0.6643784009597274 & 0.8817819947174377 & 1.2018786523682494 & 0.8780339553994245 & 0.7671739461936817 & 1.2731082583602047 & 0.5467936420550933 & 0.7605273297420685 & 0.7335696253818225 & 1.4691166391472041 & 1.0897056061001769 & 1.3996190413205791 & 0.6289687308185753 & 1.3895142085459256 & 0.7661331821612354 & 0.8140981593952645 & 0.541777425117463 & 0.8949887548628032 & 0.9150341673045351 & 0.6214110977320194 & 0.5937388919902307 & 0.3467982106277119 & 0.6477031252603831 & 1.26503362394588 & 0.912568830408894 & 1.1313606474600897 & 0.3767487492118353 & 0.7435035430134095 & 1.452451660608227 & 1.4602094742707628 & 1.2040853527874333 & 1.1883815363800894 & 0.725784444142849 & 0.4674172086299301 & 1.0441058326722419 & 1.0619334204035376 & 0.6400613649874625 & 0.6128433962013463 & 0.606591173542476 & 0.7563237148543792 & 0.7056066117377375 & 0.9887502672594296 & 0.7574610052412065 & 1.1203201348150553 & 0.7234608632170489 & 1.2809137147272627 & 1.1987207026636657 & 0.806020291763806 & 1.0471455266793228 & 1.0704346742432067 & 1.084500460377735 & 0.6858677886488024 & 0.4360490029822706 & 0.8634285695513919 & 0.7918058002173557 & 0.8558513874765533 & 0.757596786760682 & 0.7563223911905455 & 1.1560882588936674 & 0.6362093639668243 & 1.281218984451885 & 0.3679112728194726 & 1.4047687734707193 & 1.0364641764588087 & 1.0988680584185226 & 0.6791804381630882 & 1.4162823303423098 & 1.023180377412421 & 0.92508139202149 & 1.2369289574407705 & 0.29755187597240257 & 0.842561438680775 & 0.7254945053279847 & 1.0233563161446562 & 0.7573594496260173 & 1.1660944671537437 & 0.944264587959532 & 0.2756417750975398 & 1.2337784313775468 & 0.952015908593103 & 0.7986029319326026 & 1.180061651447835 & 0.893516519436595 & 0.8158263151858116 & 0.8532818042913866 & 1.368407846382237 & 0.6223395388755874 & 1.170142553154024 & 1.159084567823603 & 1.186624670294388 & 0.709379379257184 & 0.4466242016585369 & 0.7873858945120522 & 0.6889881905028701 & 0.7651682830668071 & 1.0403381680365242 & 0.9692305323052671 & 0.6245637819723551 & 0.4059270566458254 & 0.5179432871909834 & 0.7522395202562184 & 0.9983917390230408 & 0.47460802768071886 & 0.9205906766500671 & 0.6877880077709223 & 0.8074976345406637 & 1.3487363687386162 & 0.7690825378535859 & 0.7589796423966699 & 0.34250489099108783 & 0.47870763286640516 & 1.0454831700977154 & 0.48094859484466723 & 0.8089495087323724 & 0.37406112204226183 & 0.9119887011053148 & 0.8310715134570569 & 0.6726020599969995 & 0.43075413845672544 & 0.9758111497550426 & 0.790787353059473 & 0.9331933992143343 & 1.1432582444460027 & 1.4023926136966738 & 0.6778713890802501 & 0.37579282371474704 & 0.6710129136937131 & 0.6994412276900741 & 0.9036900640227328 & 0.6451442423262137 & 1.158265149224638 & 0.7655865236363228 & 0.9856785966490085 & 0.7820415223625152 & 0.8817362226459406 & 0.6513075520170286 & 0.8312803046578934 & 1.0580413123828647 & 0.6482317841314138 & 0.69222006561774 & 0.7317839201768707 & 1.1715480188957144 & 1.2615731422644605 & 0.8067450784842974 & 0.5820259507034848 & 0.5553443114561362 & 1.418955685157829 & 0.661361624942138 & 0.7337537520157835 & 1.0326662792641128 & 0.8394825831831337 & 1.4361749844670706 & 0.9100150615624413 & 0.38956977294323997 & 0.7049853066868291 & 1.163332897157206 & 1.1562606926941863 & 0.9252014655125671 & 0.5023079062120122 & 0.9383027546239875 & 0.887053992604523 & 1.0202294565357424 & 0.7577207319519981 & 1.347994626977484 & 0.6605503049888868 & 0.48451162752318533 & 1.0201503288492206 & 0.9795199100039811 & 0.4792815845901306 & 0.6507194450899958 & 0.9039394734789176 & 0.8541817252539569 & 0.5061670770839751 & 1.698156663206078 & 0.8089819051979583 & 0.6885256005330442 & 1.2263319919934395 & 0.592773646721781 & 1.0921521077713328 & 0.8531952055935869 & 0.759982118716238 & 1.3966215907451296 & 0.3114740143822842 & 0.9048846083005535 & 0.9113464535418143 & 0.40671897579319577 & 0.6608137329619717 & 1.0004099212020268 & 1.0742208084897893 & 0.9270580859084151 & 0.5052185062320138 & 0.6000237197882903 & 0.6768509676702471 & 0.7564797792108412 & 0.7627527880002944 & 0.4319311172924103 & 0.6571900242919313 & 0.5723352593578542 & 1.1057352104372429 & 0.6130615154118784 & 0.5545572641577495 & 0.6943152167070527 & 0.8144386291521656 & 0.7089202096886802 & 0.3485623948395855 & 0.9883648563110348 & 0.7129830797767779 & 1.1044724379475297 & 0.7445109445951812 & 0.8576933814375948 & 0.9517498764684755 & 0.7270593248905876 & 0.9402072206964011 & 0.4735462949321896 & 0.9317422595343969 & 0.4970755611049462 & 0.9479717787799619 & 0.953713954279085 & 1.26019286673701 & 1.4772444608033684 & 0.9592005155164653 & 1.191227659790356 & 1.375567093506486 & 1.316307801780937 & 0.9178385791227786 & 0.7902787985428331 & 1.06981708628063 & 1.0313062100249 & 0.636008931704856 & 1.396639428253828 & 1.4639571771001312 & 0.8970289009555459 & 0.6456642532047436 & 1.2177360262144272 & 0.37792563662836604 & 0.9791684667398263 & 1.0475219267860003 & 0.6237778186232428 & 1.0012365706150492 & 0.8329904270218015 & 0.35599595296165293 & 0.8839346583608882 & 0.5353583705134687 & 0.3150563890920442 & 0.8397218921850222 & 0.8865864866473895 & 0.6215007537082501 & 0.8309203400728907 & 0.3698523836218077 & 0.7979578573742857 & 1.1649107298218901 & 1.063280861275476 & 0.7796839639587558 & 1.2986367218120387 & 0.43133150699364486 & 0.9197761643344268 & 0.7867796737740387 & 1.280434804734503 & 0.8768111835379274 & 0.7328504616695917 & 1.1334790390059006 & 0.7964369239900297 & 0.9731141347800369 & 0.9021835733069866 & 1.3557267458848583 & 1.1577584008660875 & 0.570186394209765 & 1.2056085318449337 & 0.6755768513952771 & 0.47254726083264864 & 0.5649577712750975 & 1.0265567500116524 & 0.7735672872169557 & 0.9749033096689905 & 0.7872399565050905 & 0.8497945393269877 & 0.8502836098963764 & 0.918342179380062 & 0.972782985538935 & 0.5570176389079233 & 0.7406729339729378 & 0.729781666071583 & 0.5974407142403488 & 1.063127080018263 & 0.9734184702320132 & 0.6153652928193686 & 0.8308542130834219 & 1.2047664962095619 & 0.6048377820841818 & 1.13556638720033 & 1.1068040112712667 & 1.5486075650227715 & 0.8376997101649881 & 0.6493449296346477 & 1.0431603195025014 & 0.9210449900570408 & 0.9018856201823171 & 1.16198862086645 & 0.9719257862965203 & 0.867813814367961 & 0.7381336136136313 & 1.0223375792921752 & 0.5381456227336663 & 0.9474989923007776 & 0.8819400969400846 & 0.9184764707617825 & 0.8053091805562091 & 0.6571551633066092 & 0.33742585502808065 & 0.8261238391945499 & 0.9142538674828655 & 0.7428034391873323 & 1.1381280395509574 & 0.7867805596083927 & 0.9242428252421424 & 1.019893983086637 & 1.0942906386470974 & 0.6216194213875246 & 1.0374988361027786 & 1.4037734315136425 & 1.2843982908605736 & 0.5827874052970656 & 1.2673418914201124 & 0.8298424273332332 & 0.7104766255377817 & 0.6126992837577404 & 1.383089264782131 & 1.0334736415298682 & 0.7802626066101098 & 1.0307696158584447 & 1.388467067261597 & 0.7376591382071351 & 0.5992386884917152 & 0.4127182431714465 & 0.9558515312480393 & 0.6819011210951988 & 0.7347019986034079 & 0.6390018142328406 & 0.9722609734330135 & 0.9196589282215732 & 1.0611448034360815 & 1.0219665535981124 & 0.9872976271483824 & 0.8895085994569559 & 0.8241784829618347 & 0.5709980317082933 & 0.7842296168409201 & 0.879293255986052 & 1.2713670710721534 & 0.6158833692067279 & 1.198139222942128 & 0.9526667987260694 & 1.0028177607782176 & 0.43931409469642385 & 0.7506086358710135 & 0.5325145571689561 & 0.45645849770563146 & 0.48511909611115295 & 0.29958423872043966 & 1.3662704499255711 & 0.8839048403574016 & 0.6470668158631959 & 0.8951711881007688 & 0.2960238098985479 & 0.9400053590170792 & 1.0247998123305933 & 0.8742469660796396 & 0.9987869231988189 & 0.4620804814421971 & 1.0604224653570458 & 0.6915028436601716 & 0.39643279442575796 & 0.7011215851880191 & 0.3853707214691187 & 0.6213629825979675 & 0.7452180459470586 & 0.8437033212326868 & 0.4736547203211479 & 0.8959448519035718 & 0.5380801435026823 & 0.5766817432588998 & 0.9221280268887527 & 1.258100524254034 & 0.943958344157768 & 0.6071919972946396 & 0.3012401381499195 & 0.46124638756541697 & 1.0372904057303938 & 0.8936409475587916 & 0.8632996295416276 & 1.30399475322559 & 0.5877439212714197 & 0.6479919407756968 & 1.0399887311894833 & 1.437268151401735 & 0.8316295716078801 & 0.6284382326750201 & 1.0099913789938049 & 1.0464634394998187 & 0.7333828455935822 & 0.9265792411851007 & 1.109610491289164 & 0.5274398717753138 & 0.6420241042931487 & 0.8769229060110109 & 1.1258067093299113 & 1.3906596872624202 & 1.079603907864857 & 0.6126546914782116 & 0.8216686829276102 & 0.435316893893901 & 1.0969885537206454 & 0.42578755540175395 & 0.9221723917009805 & 1.002419872403406 & 0.6215702858752241 & 0.5555360129785318 & 0.6929142352925209 & 0.46325744449178524 & 0.9048836426349672 & 0.3126148174592835 & 0.8604059391480368 & 1.0144854284458555 & 0.8988620314756537 & 1.3244976172651692 & 0.4740800798691247 & 0.771100319558236 & 0.9047479471075817 & 0.9619521791618684 & 0.9463429205645639 & 0.7890527457785207 & 0.6273019060878177 & 0.5801079337931929 & 0.40951859472882046 & 0.6580268031075781 & 0.7494405613856318 & 0.8986803683748007 & 0.835881244435323 & 1.1783184592458633 & 0.5853862538279809 & 0.989798722115995 & 0.9880588288172026 & 0.6290871747177139 & 0.7158839718878925 & 0.7679099056226653 & 0.5443848283272829 & 1.3897579330293204 & 1.0966960597473518 & 1.3131703199006979 & 0.8888794423096733 & 1.2606607317122343\\end{pmatrix}\\ \\mathrm{nanometer}$"
      ],
      "text/plain": [
       "array([0.72087604, 1.2344545 , 0.83900167, ..., 1.31317032, 0.88887944,\n",
       "       1.26066073]) <Unit('nanometer')>"
      ]
     },
     "execution_count": 126,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max_distances"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This way:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The 3-th is the group with the maximum displacement between frames 200-th and 201-th: 0.6367210108091421 nanometer\n"
     ]
    }
   ],
   "source": [
    "print('The {}-th is the group with the maximum displacement between frames 200-th and 201-th: {}'.format(max_group[200], max_distances[200]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Neighbor lists\n",
    "\n",
    "With the method `molsysmt.distance()` many questions about a molecular system can be answered. Two of the most common distance related questions are: what are the closest n atoms to a given one? or what are the atoms closest than a given distance threshold? MolSysMT includes a method to provide with this distances processing: `molsysmt.neighbors()`. \n",
    "\n",
    "### First closest neighbor atoms or groups\n",
    "\n",
    "There are two ways to compute distance neighbors. The closest n atoms to a given one can be obtained with the option `num_neighbors` or `threshold`. Lets show with a simple example how this first option works:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.demo_systems.files['pentalanine.h5']\n",
    "molecular_system = msm.convert(molecular_system, to_form='molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_59e84_\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >form</th>        <th class=\"col_heading level0 col1\" >n_atoms</th>        <th class=\"col_heading level0 col2\" >n_groups</th>        <th class=\"col_heading level0 col3\" >n_components</th>        <th class=\"col_heading level0 col4\" >n_chains</th>        <th class=\"col_heading level0 col5\" >n_molecules</th>        <th class=\"col_heading level0 col6\" >n_entities</th>        <th class=\"col_heading level0 col7\" >n_peptides</th>        <th class=\"col_heading level0 col8\" >n_frames</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_59e84_row0_col0\" class=\"data row0 col0\" >molsysmt.MolSys</td>\n",
       "                        <td id=\"T_59e84_row0_col1\" class=\"data row0 col1\" >62</td>\n",
       "                        <td id=\"T_59e84_row0_col2\" class=\"data row0 col2\" >7</td>\n",
       "                        <td id=\"T_59e84_row0_col3\" class=\"data row0 col3\" >1</td>\n",
       "                        <td id=\"T_59e84_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "                        <td id=\"T_59e84_row0_col5\" class=\"data row0 col5\" >1</td>\n",
       "                        <td id=\"T_59e84_row0_col6\" class=\"data row0 col6\" >1</td>\n",
       "                        <td id=\"T_59e84_row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "                        <td id=\"T_59e84_row0_col8\" class=\"data row0 col8\" >5000</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f85a494c450>"
      ]
     },
     "execution_count": 129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can compute the closest 3 CA atoms to each CA atom of the molecular system:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [],
   "source": [
    "CA_atoms_list = msm.select(molecular_system, selection='atom_name==\"CA\"')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbors, distances = msm.neighbors(molecular_system, selection=CA_atoms_list, num_neighbors=3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Two objects are returned. A numpy array with the list of 3 neighbor atom indices per atom in `selection_1`, per frame:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5000, 5, 3)"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "neighbors.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "And the corresponding distances:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(5000, 5, 3)"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "distances.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This way, the closest 3 atoms of the first CA atom at frame 2000-th are:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3 first neighbor CAs of atom 8-th at frame 0-th\n",
      "------------------------------------------\n",
      "1° neighbor is atom 18-th with distance: 0.3874317590975941 nanometer\n",
      "2° neighbor is atom 28-th with distance: 0.5346208297333755 nanometer\n",
      "3° neighbor is atom 48-th with distance: 0.5453396095979958 nanometer\n"
     ]
    }
   ],
   "source": [
    "print(\"3 first neighbor CAs of atom {}-th at frame 0-th\".format(CA_atoms_list[0]))\n",
    "print(\"------------------------------------------\")\n",
    "\n",
    "for ii in range(3):\n",
    "    print(\"{}° neighbor is atom {}-th with distance: {}\".format(ii+1, CA_atoms_list[neighbors[2000,0,ii]], distances[2000,0,ii]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets see now the 4 closest atoms, any kind, to each CA atom of the molecular system:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 135,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbors, distances = msm.neighbors(molecular_system, selection=CA_atoms_list, selection_2='all', num_neighbors=4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4 first neighbors of atom 8-th at frame 2000-th\n",
      "------------------------------------------\n",
      "1° neighbor is atom 8-th with distance: 0.0 nanometer\n",
      "2° neighbor is atom 9-th with distance: 0.10900002347459704 nanometer\n",
      "3° neighbor is atom 6-th with distance: 0.14533472683839888 nanometer\n",
      "4° neighbor is atom 10-th with distance: 0.1532800898161647 nanometer\n"
     ]
    }
   ],
   "source": [
    "print(\"4 first neighbors of atom {}-th at frame 2000-th\".format(CA_atoms_list[0]))\n",
    "print(\"------------------------------------------\")\n",
    "\n",
    "for ii in range(4):\n",
    "    print(\"{}° neighbor is atom {}-th with distance: {}\".format(ii+1, neighbors[2000,0,ii], distances[2000,0,ii]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Notice that, in this case, `msm.neighbors_list` is built to assume that is working with two different set of atoms since `selection`$\\neq$`selection_2`. Thats the reason why this time the first neighbor atom is the atom itself."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The method `msm.neighbors_list()` was built on top of `msm.distance()`, thus the input arguments are almost the same. If you already had a look to the section about atoms distance, you will be probably wonder if `msm.neighbors_list` can also work with atoms groups. Lets illustrate this case with the following cells:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.convert('1TCD', 'molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "metadata": {},
   "outputs": [],
   "source": [
    "atoms_in_residues_chain_0 = msm.get(molecular_system, target='group',\n",
    "                                    selection=\"molecule_type=='protein' and chain_index==0\",\n",
    "                                    atom_index=True)\n",
    "atoms_in_residues_chain_1 = msm.get(molecular_system, target='group',\n",
    "                                    selection=\"molecule_type=='protein' and chain_index==1\",\n",
    "                                    atom_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of residues in chain 0: 248\n",
      "Number of residues in chain 1: 249\n"
     ]
    }
   ],
   "source": [
    "print('Number of residues in chain 0:', len(atoms_in_residues_chain_0))\n",
    "print('Number of residues in chain 1:', len(atoms_in_residues_chain_1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbors, distances = msm.neighbors(molecular_system, groups_of_atoms=atoms_in_residues_chain_0,\n",
    "                                     group_behavior= 'geometric_center', num_neighbors=8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 248, 8)\n"
     ]
    }
   ],
   "source": [
    "print(neighbors.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8 first group neighbors of the geometric center of residue 0-th\n",
      "------------------------------------------\n",
      "1° neighbor is group 1-th with distance: 0.4370347284513121 nanometer\n",
      "2° neighbor is group 226-th with distance: 0.5876214911977258 nanometer\n",
      "3° neighbor is group 220-th with distance: 0.7005928267026155 nanometer\n",
      "4° neighbor is group 3-th with distance: 0.7546595763407238 nanometer\n",
      "5° neighbor is group 224-th with distance: 0.7788646403094593 nanometer\n",
      "6° neighbor is group 225-th with distance: 0.797132705828936 nanometer\n",
      "7° neighbor is group 223-th with distance: 0.8302823100919265 nanometer\n",
      "8° neighbor is group 2-th with distance: 0.8680783396121027 nanometer\n"
     ]
    }
   ],
   "source": [
    "print(\"8 first group neighbors of the geometric center of residue 0-th\")\n",
    "print(\"------------------------------------------\")\n",
    "\n",
    "for ii in range(8):\n",
    "    print(\"{}° neighbor is group {}-th with distance: {}\".format(ii+1, neighbors[0,0,ii], distances[0,0,ii]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The list groups neighbors can be computed also from two molecular systems or two list of groups:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbors, distances = msm.neighbors(molecular_system,\n",
    "                                     groups_of_atoms=atoms_in_residues_chain_0,\n",
    "                                     group_behavior= 'geometric_center',\n",
    "                                     groups_of_atoms_2=atoms_in_residues_chain_1,\n",
    "                                     group_behavior_2= 'geometric_center',\n",
    "                                     num_neighbors=8)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8 first group neighbors from chain 1 of the geometric center of residue 0-th from chain 0\n",
      "------------------------------------------\n",
      "1° neighbor is group 73-th with distance: 2.7733041141137127 nanometer\n",
      "2° neighbor is group 71-th with distance: 3.004041044490357 nanometer\n",
      "3° neighbor is group 74-th with distance: 3.0495973900039375 nanometer\n",
      "4° neighbor is group 70-th with distance: 3.201184539105875 nanometer\n",
      "5° neighbor is group 72-th with distance: 3.2536310735699123 nanometer\n",
      "6° neighbor is group 75-th with distance: 3.3579026367512856 nanometer\n",
      "7° neighbor is group 44-th with distance: 3.481955675588244 nanometer\n",
      "8° neighbor is group 69-th with distance: 3.565210348182856 nanometer\n"
     ]
    }
   ],
   "source": [
    "print(\"8 first group neighbors from chain 1 of the geometric center of residue 0-th from chain 0\")\n",
    "print(\"------------------------------------------\")\n",
    "\n",
    "for ii in range(8):\n",
    "    print(\"{}° neighbor is group {}-th with distance: {}\".format(ii+1, neighbors[0,0,ii], distances[0,0,ii]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The method `molsysmt.neighbors_lists()` can also mix atoms and atoms groups. Lets, as last example, get the closest geometric centers of residues to a specific atom:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbors, distances = msm.neighbors(molecular_system, selection=100,\n",
    "                                     groups_of_atoms_2=atoms_in_residues_chain_1,\n",
    "                                     group_behavior_2= 'geometric_center',\n",
    "                                     num_neighbors=4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4 closest geometric centers of residues of chain 1 from atom 100-th\n",
      "-------------------------------------------------------------------\n",
      "1° closest neighbor is group 80-th with distance: 0.60482728655584 nanometer\n",
      "2° closest neighbor is group 69-th with distance: 0.7263555641389106 nanometer\n",
      "3° closest neighbor is group 70-th with distance: 0.7811893184433587 nanometer\n",
      "4° closest neighbor is group 77-th with distance: 0.8498448121405595 nanometer\n"
     ]
    }
   ],
   "source": [
    "print(\"4 closest geometric centers of residues of chain 1 from atom 100-th\")\n",
    "print(\"-------------------------------------------------------------------\")\n",
    "\n",
    "for ii in range(4):\n",
    "    print(\"{}° closest neighbor is group {}-th with distance: {}\".format(ii+1, neighbors[0,0,ii], distances[0,0,ii]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Closest neighbor atoms or groups below a distance threshold\n",
    "\n",
    "In addition to the input argument `num_neighbors`, `molsysmt.neighbors()` includes the option of getting those neighbors with a distance below a given threshols: `threshold`. Lets get for the following molecular system the list of CA atoms closest than 8 $\\unicode{xC5}$:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.convert('1TCD', 'molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "metadata": {},
   "outputs": [],
   "source": [
    "CA_atoms = msm.select(molecular_system, selection='atom_name==\"CA\"')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbors, distances = msm.neighbors(molecular_system, selection=CA_atoms, threshold='8 angstroms')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this example, each CA atom has a different number of neighbors. This time the output is not a tensor ranked 3, but a matrix where the elements are not numbers but list of neighbors:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 497)\n"
     ]
    }
   ],
   "source": [
    "print(neighbors.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1, 497)\n"
     ]
    }
   ],
   "source": [
    "print(distances.shape)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The molecular system had 1 single frame and 497 CA atoms, lets see now the number of CA neighbors of the first 10 CA atoms in our list:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 152,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The 1° CA has 7 CA neighbors.\n",
      "The 2° CA has 8 CA neighbors.\n",
      "The 3° CA has 9 CA neighbors.\n",
      "The 4° CA has 12 CA neighbors.\n",
      "The 5° CA has 13 CA neighbors.\n",
      "The 6° CA has 15 CA neighbors.\n",
      "The 7° CA has 12 CA neighbors.\n",
      "The 8° CA has 12 CA neighbors.\n",
      "The 9° CA has 14 CA neighbors.\n",
      "The 10° CA has 14 CA neighbors.\n"
     ]
    }
   ],
   "source": [
    "for ii in range(10):\n",
    "    print(\"The {}° CA has {} CA neighbors.\".format(ii+1,len(neighbors[0,ii])))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets print out the neighbors of the 20-th CA in the list:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The 21-th CA is 0.3807746183768036 nanometer away from the 20-th CA\n",
      "The 19-th CA is 0.3882762676239687 nanometer away from the 20-th CA\n",
      "The 23-th CA is 0.5117970007727681 nanometer away from the 20-th CA\n",
      "The 22-th CA is 0.5541036906572636 nanometer away from the 20-th CA\n",
      "The 18-th CA is 0.5639790953572659 nanometer away from the 20-th CA\n",
      "The 24-th CA is 0.6343354475354508 nanometer away from the 20-th CA\n",
      "The 17-th CA is 0.6452477431188736 nanometer away from the 20-th CA\n",
      "The 16-th CA is 0.7399875134081648 nanometer away from the 20-th CA\n"
     ]
    }
   ],
   "source": [
    "for ii,dd in zip(neighbors[0,20], distances[0,20]):\n",
    "    print(\"The {}-th CA is {} away from the 20-th CA\".format(ii,dd))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As well as for the input argument `num_neighbors` -previous subsection-, the neighbors closest than a given threshold can also be computed between atoms groups or atoms and atoms groups. Lets show a example where the neighbors of the residues of chain 0 in our molecular system are defined as those residues of chain 1 closest the 1.2 nm:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 154,
   "metadata": {},
   "outputs": [],
   "source": [
    "atoms_in_residues_chain_0 = msm.get(molecular_system, target='group',\n",
    "                                    selection=\"molecule_type=='protein' and chain_index==0\",\n",
    "                                    atom_index=True)\n",
    "atoms_in_residues_chain_1 = msm.get(molecular_system, target='group',\n",
    "                                    selection=\"molecule_type=='protein' and chain_index==1\",\n",
    "                                    atom_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "metadata": {},
   "outputs": [],
   "source": [
    "neighbors, distances = msm.neighbors(molecular_system,\n",
    "                                     groups_of_atoms= atoms_in_residues_chain_0,\n",
    "                                     group_behavior='geometric_center',\n",
    "                                     groups_of_atoms_2= atoms_in_residues_chain_1,\n",
    "                                     group_behavior_2='geometric_center',\n",
    "                                     threshold=1.2*puw.unit('nanometers'))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Lets print out the number of contacts in chain 1 per residue of chain 0, if any:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 156,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The 7-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 8-th residue of chain 0 has 6 residue contacts in chain 1\n",
      "The 9-th residue of chain 0 has 5 residue contacts in chain 1\n",
      "The 10-th residue of chain 0 has 10 residue contacts in chain 1\n",
      "The 11-th residue of chain 0 has 18 residue contacts in chain 1\n",
      "The 12-th residue of chain 0 has 14 residue contacts in chain 1\n",
      "The 13-th residue of chain 0 has 11 residue contacts in chain 1\n",
      "The 14-th residue of chain 0 has 9 residue contacts in chain 1\n",
      "The 15-th residue of chain 0 has 9 residue contacts in chain 1\n",
      "The 16-th residue of chain 0 has 3 residue contacts in chain 1\n",
      "The 17-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 18-th residue of chain 0 has 3 residue contacts in chain 1\n",
      "The 39-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 40-th residue of chain 0 has 7 residue contacts in chain 1\n",
      "The 41-th residue of chain 0 has 17 residue contacts in chain 1\n",
      "The 42-th residue of chain 0 has 18 residue contacts in chain 1\n",
      "The 43-th residue of chain 0 has 26 residue contacts in chain 1\n",
      "The 44-th residue of chain 0 has 11 residue contacts in chain 1\n",
      "The 45-th residue of chain 0 has 9 residue contacts in chain 1\n",
      "The 46-th residue of chain 0 has 11 residue contacts in chain 1\n",
      "The 47-th residue of chain 0 has 6 residue contacts in chain 1\n",
      "The 48-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 49-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 50-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 59-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 60-th residue of chain 0 has 3 residue contacts in chain 1\n",
      "The 61-th residue of chain 0 has 4 residue contacts in chain 1\n",
      "The 62-th residue of chain 0 has 8 residue contacts in chain 1\n",
      "The 63-th residue of chain 0 has 7 residue contacts in chain 1\n",
      "The 64-th residue of chain 0 has 6 residue contacts in chain 1\n",
      "The 65-th residue of chain 0 has 7 residue contacts in chain 1\n",
      "The 66-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 67-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 68-th residue of chain 0 has 6 residue contacts in chain 1\n",
      "The 69-th residue of chain 0 has 14 residue contacts in chain 1\n",
      "The 70-th residue of chain 0 has 16 residue contacts in chain 1\n",
      "The 71-th residue of chain 0 has 13 residue contacts in chain 1\n",
      "The 72-th residue of chain 0 has 32 residue contacts in chain 1\n",
      "The 73-th residue of chain 0 has 32 residue contacts in chain 1\n",
      "The 74-th residue of chain 0 has 21 residue contacts in chain 1\n",
      "The 75-th residue of chain 0 has 15 residue contacts in chain 1\n",
      "The 76-th residue of chain 0 has 9 residue contacts in chain 1\n",
      "The 77-th residue of chain 0 has 3 residue contacts in chain 1\n",
      "The 78-th residue of chain 0 has 5 residue contacts in chain 1\n",
      "The 79-th residue of chain 0 has 14 residue contacts in chain 1\n",
      "The 80-th residue of chain 0 has 7 residue contacts in chain 1\n",
      "The 81-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 82-th residue of chain 0 has 9 residue contacts in chain 1\n",
      "The 83-th residue of chain 0 has 11 residue contacts in chain 1\n",
      "The 84-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 85-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 88-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 89-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 90-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 91-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 92-th residue of chain 0 has 6 residue contacts in chain 1\n",
      "The 93-th residue of chain 0 has 4 residue contacts in chain 1\n",
      "The 94-th residue of chain 0 has 7 residue contacts in chain 1\n",
      "The 95-th residue of chain 0 has 7 residue contacts in chain 1\n",
      "The 96-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 97-th residue of chain 0 has 3 residue contacts in chain 1\n",
      "The 98-th residue of chain 0 has 10 residue contacts in chain 1\n",
      "The 99-th residue of chain 0 has 14 residue contacts in chain 1\n",
      "The 100-th residue of chain 0 has 4 residue contacts in chain 1\n",
      "The 101-th residue of chain 0 has 5 residue contacts in chain 1\n",
      "The 105-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 123-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 164-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 166-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 169-th residue of chain 0 has 4 residue contacts in chain 1\n",
      "The 170-th residue of chain 0 has 3 residue contacts in chain 1\n",
      "The 171-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 229-th residue of chain 0 has 1 residue contacts in chain 1\n",
      "The 231-th residue of chain 0 has 3 residue contacts in chain 1\n",
      "The 232-th residue of chain 0 has 2 residue contacts in chain 1\n",
      "The 235-th residue of chain 0 has 1 residue contacts in chain 1\n"
     ]
    }
   ],
   "source": [
    "for ii in range(len(atoms_in_residues_chain_0)):\n",
    "    n_contacts = len(neighbors[0,ii])\n",
    "    if n_contacts >0:\n",
    "        print('The {}-th residue of chain 0 has {} residue contacts in chain 1'.format(ii,n_contacts))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This information is usually represented as a contact map. If this is what you are looking for, you will probably find the next section more appropriate to your needs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Contact maps\n",
    "\n",
    "A contact map is a logic matrix where the element (i-th,j-th) is True if the distance between i-th and j-th is lower, or equal, than a certain threshold. The contact map is a common tool, simple but effective, used to represent structural motifs from the protein-protein interaface of the protein folding, for example. MolSysMT includes a method, based on `molsysmt.distance()`, to obtain contact maps: `molsysmt.contact_map()`. As such, `molsysmt.contact_map` inherits many input arguments from `molsysmt.distance()`. Lets see a couple of examples in this section.\n",
    "\n",
    "Lets get the contact map obtained with the threshold 1.2 nm and the CA atoms from the dimer found in the system with pdb id 1TCD:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.convert('1TCD', 'molsysmt.MolSys')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "metadata": {},
   "outputs": [],
   "source": [
    "CA_atoms = msm.select(molecular_system, selection='atom_name==\"CA\"')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "metadata": {},
   "outputs": [],
   "source": [
    "contact_map = msm.contact_map(molecular_system, selection=CA_atoms, threshold='1.2 nm')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 160,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[ True,  True,  True, ..., False, False, False],\n",
       "        [ True,  True,  True, ..., False, False, False],\n",
       "        [ True,  True,  True, ..., False, False, False],\n",
       "        ...,\n",
       "        [False, False, False, ...,  True,  True,  True],\n",
       "        [False, False, False, ...,  True,  True,  True],\n",
       "        [False, False, False, ...,  True,  True,  True]]])"
      ]
     },
     "execution_count": 160,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "contact_map"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Our molecular system has a single frame. That's why the shape of the output is the following:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 497, 497)"
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "contact_map.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Where 497 is the total number of CA atoms in our system:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 162,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "497\n"
     ]
    }
   ],
   "source": [
    "print(msm.get(molecular_system, selection=\"atom_name=='CA'\", n_atoms=True))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Usually the contact map is represented as a plot. The structural motifs can be then easily identify:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 163,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.imshow(contact_map[0], cmap='Greys', origin='lower')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The contact map can also be computed among elements from different sets. Lets get the contact map with the same threshold but this time between the CA atoms from both chains:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "metadata": {},
   "outputs": [],
   "source": [
    "CA_atoms_chain_0 = msm.get(molecular_system, selection=\"atom_name=='CA' and chain_index==0\", atom_index=True)\n",
    "CA_atoms_chain_1 = msm.get(molecular_system, selection=\"atom_name=='CA' and chain_index==1\", atom_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "metadata": {},
   "outputs": [],
   "source": [
    "contact_map = msm.contact_map(molecular_system, selection=CA_atoms_chain_0, selection_2=CA_atoms_chain_1,\n",
    "                              threshold=1.2*puw.unit('nm'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 166,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAQIAAAD4CAYAAAAHMeibAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuNCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy8QVMy6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAWIUlEQVR4nO3de3AV9d3H8fc3CbkgKSWAQJWKAgWTwUYancci3iiF2DoUi5RQLA5a7QhWO17Ap3+0TrHFC0qnPrXoaHUUi4hamZaRQpDah3FiQ4GUi9wUJYaScE0EQm7f548c8gRISEjOZs9JPq+ZM+fs7+zZ3zdL8mF3z+5vzd0Rka4tIewCRCR8CgIRURCIiIJARFAQiAiQFHYBAH369PFBgwaFXYZIp7du3br97t739PaYCIJBgwZRWFgYdhkinZ6ZfdpUu3YNRERBICIKAhFBQSAiKAhEBAWBiKAgEBEUBCKCgiA0JSUllJSUhF2GCBAjZxZ2RQkJymCJHQqCkPTv3z/sEkQa6L+lkKxZs4Zhw4Y1PKqrq8MuSbowbRGEpKKigl27dpGQkEBiYiIaO1LCpC2CkNx00008/fTTbN68mePHj5OcnBx2SdKFaYsgRPfcc0/YJYgA2iIQERQEIoKCQERQEIgICgIRQUEgIigIRAQFgYigIBARFAQigoJARFAQiAgKAhFBQSAiKAhEBAWBiKAgEBEUBCKCgkBEUBCICAoCEUFBICK0IgjMbKCZvWdmW81ss5ndG2nPMLOVZrYj8tyr0WceNrOdZrbNzMYF+QOISPu1ZougBrjf3S8F/guYaWaZwBwg392HAvmRaSLvTQGygPHA780sMYjiRSQ6WgwCd9/r7v+KvK4AtgIXABOAlyOzvQx8L/J6ArDY3U+4+yfATuDKKNctIlF0TscIzGwQcDlQAPRz971QHxbA+ZHZLgD2NPpYcaTt9GXdaWaFZlZYVlbWhtJFJFpaHQRm1gN4E7jP3cvPNmsTbWfc4dPdn3P3HHfP6du3b2vLEJEAtCoIzKwb9SGwyN3fijTvM7MBkfcHAKWR9mJgYKOPXwiURKdcEQlCa741MOAFYKu7P9XorWXA9Mjr6cA7jdqnmFmKmV0MDAU+jF7JIhJtrbkb8ijgVuDfZrYh0vbfwDxgiZndDnwG3ALg7pvNbAmwhfpvHGa6e220CxeR6GkxCNz9f2l6vx9gTDOfeRR4tB11iUgH0pmFIqIgEBEFgYigIBARFAQigoJARFAQiAgKAhFBQSAiKAhEBAWBiKAgEBEUBCKCgkBEUBCICAoCEUFBICIoCEQEBUGojh8/TnV1ddhliCgIwlJRUcGsWbNYvHixwkBCpyAISUlJCUVFRfzoRz/ij3/8I3V1dWGXJF1Ya4YzlwAMGzaMV199laKiIgDcz7gZlEiHURCEaNiwYQwbNizsMkS0ayAiCgIRQUEgIigIRAQFgYigIBARFAQigoJARFAQiAgKAhFBQSAiKAhEhFYEgZm9aGalZrapUdsvzexzM9sQedzY6L2HzWynmW0zs3FBFS4i0dOaLYKXgPFNtD/t7tmRx3IAM8sEpgBZkc/83swSo1WsiASjxSBw9/eBg61c3gRgsbufcPdPgJ3Ale2oT0Q6QHuOEcwys6LIrkOvSNsFwJ5G8xRH2s5gZneaWaGZFZaVlbWjDBFpr7YGwbPAYCAb2AvMj7RbE/M2OfSOuz/n7jnuntO3b982liEi0dCmIHD3fe5e6+51wPP8/+Z/MTCw0awXAiXtK1FEgtamIDCzAY0mJwInv1FYBkwxsxQzuxgYCnzYvhJFJGgtjlloZn8CrgP6mFkx8AvgOjPLpn6zfzdwF4C7bzazJcAWoAaY6e61gVQuIlFjsTB6bk5OjhcWFoZdhkinZ2br3D3n9HadWSgiCgIRURCICAoCEUFBICIoCEQEBYGIoCAQERQEIoKCQERQEIgICgIRQUEgIigIRAQFgYigIBARFAQxIRYGh5GuTUEQA771rW9RXV0ddhnShbU4ZqEELz8/P+wSpIvTFoGIKAhEREEgIigIRAQFgYigIBARFAQigoJARFAQiAgKAhFBQSAiKAhEBAWBiKAgEBEUBCKCgkBEaEUQmNmLZlZqZpsatWWY2Uoz2xF57tXovYfNbKeZbTOzcUEVLiLR05otgpeA8ae1zQHy3X0okB+ZxswygSlAVuQzvzezxKhVK+fsrrvu4rbbbmPBggVhlyIxrMWhytz9fTMbdFrzBOC6yOuXgTXA7Ej7Ync/AXxiZjuBK4EPolSvnKNXX32VY8eOsXTpUrp168bMmTPDLkliUFuPEfRz970AkefzI+0XAHsazVccaTuDmd1pZoVmVlhWVtbGMuLLkCFDTpl2d2bMmEFGRgYZGRmMHDkyKv089thj7NixA4DExPoNsqNHj7Jnz56zfUy6sGgPXmpNtDU5Vre7Pwc8B5CTk9MlxvPu3r37KdMLFixg0aJFVFVV0b9/f9LS0qLSz+zZsxteHzx4kK9+9asA9OzZMyrLl86nrUGwz8wGuPteMxsAlEbai4GBjea7EChpT4GdSVFR0SnTP/vZzygoKOD111/nH//4xxlbDNGQlJRESYn+CeTs2rprsAyYHnk9HXinUfsUM0sxs4uBocCH7Sux89qzZw+7d+8GYPjw4RQWFka9D3dn3bp1UV+udC6t+frwT9Qf7BtmZsVmdjswDxhrZjuAsZFp3H0zsATYArwLzHT32qCKj2effvopt912GwUFBQDU1tYyadKkqPfj7nz88cdRX650Lq351iCvmbfGNDP/o8Cj7SmqK0hPT+f8889vmE5MTOTNN9+Mej8JCQnccsstUV+udC46szAkGRkZDBs2rGG6rq6Op59+OsSKpCuzWLgBZ05OjgexfxzrqqqqqKmpITs7m927d3PkyJGofXMg0hQzW+fuOae3696HIUpOTiY5OZmkpCTMTCEgodGugYhoiyAW3HzzzZSWlrY8o0hAFAQxYO7cuWGXIF2cdg3OoqysjDVr1oRdhkjg4jYIZs6cyeTJkwPt48CBA+Tn5wfah0gsiMsguPvuu1m4cCFvvPEG48efPlRCdC1YsIAVK1YAMHHiRKqqqgLtTyQMcRcE8+bN4/nnn6e2tv7M5bVr1zJ9+vQWPtV2lZWVHD9+HIClS5eSnJwcWF8iYYmrg4WVlZXcddddrFmzhhUrVpCWlkZFRUXU+3F3Dh8+TGlpKT/5yU8atjpOXtsv0tnETRAcP36c3/zmN/zqV79qaKupqWHLli0A9OnT55Rz99ujqKiI7OzshulrrrlG5+tLpxY3QVBeXs769etPaZs9ezZLliwB4IYbbohaEPzlL3/hF7/4RcP0ZZddFpXlisSquLrW4I033jjlm4Kqqiq6desWWF379+9n27ZtjBo1KrA+RDpS3F9r8Nlnn/Hoox1zdXNtbS3Tpk1j3759jBo1SkEgnV5cfGtw6NAhRo8ezcaNGzukvyuuuILFixfz3nvv8cwzz7B69eo2L2v+/PlkZWXxxRdfnHW+q666iqysLI0yLKGIiyA4ceIEn332WcN0UlISe/fuDWS34PLLLz/lWER5eTmHDh065+W4O6+88gpz5sxhy5Yt9O/f/6znIGzatIktW7bwySeftLqPuro6amtrqa2t5T//+Q8zZsxg6dKlpKens3XrVgD69+/PyJEjcXfq6urO+eeQLsLdQ3984xvf8OaUlpY69SMhNzy2bt3a7PztdckllzT0k5qa6vPnz2/TcoqKirxXr16n1D1ixIhm5x8xYoQPGjTIZ8yY0eo+xo4de8a6afzYtWuXp6Wl+eDBg/3jjz/2xx9/vE0/S1PKy8ujtiw5N+Xl5V5RUdGmzwKF3sTfYOgh4C0EwXe+850ODYI77rjDx40b56mpqf7II4+0a1lr1qzxAQMGOODXX3+919bWRqnKenPmzPHc3FzPzc310aNHNxsIgwcPjmq/7u5Tp06N+jKldZKTkz0zM7NNn43bIKisrDzjF/uJJ57wEydOtGlFtEZVVZUPHTo0Ksu6//77fdq0aX78+PGoLK85p2855eXleXp6uicmJvq8efMC7TsWff75575q1So/evRo2KVEXRBBEDffGjT24IMPcscdd8TF6b7Tpk1j8ODBpKamBtpPjx49eOmll1i9ejVJSUk89dRTTJ06lfLycqZOnRpo37GosrKS4uLiTn9c5OQI1Zdcckm7lhPz5xHU1dWxbNkyJk6ceEr7D37wAxYtWhTIab/V1dVkZWWxffv2qC87aAcPHiQhIYEvf/nLYZciAVm3bh1paWlkZmZy+PBhgFb/ezd3HkHMBwHUf6//17/+lQkTJjS0bdy4kREjRmDW1F3W2sfd2b9/P3379o36skXCFNcnFCUmJvLd736XF154gdTUVG6++WZSUlICCQEAM+vwEHD3wEINCGxdSecQF+cRQP2NOtLT07n77rspLi4O/Bf72LFjHDt2rEPGH6isrKRv374NlztH05AhQ7juuuuivlzpXOImCKD+5JgVK1YEcrPQxmpqasjNzSU3N5dXXnkl0L4OHjzIpZdeyoEDBxg8eDD79++P6vJ37drF3//+96guUzqfuDhG0FkVFxczadKkhvsfAuTm5rJ8+fIQq5LOrLljBHG1RdCRKisr+cMf/sCGDRsC62P//v3ceuut9O7dG4CePXvy05/+NLD+RJoTFwcLw5CQkEBmZia9evUKrI/s7Gyys7O56qqruPbaa1m5ciVXXHFFYP2JNEdB0Izk5GSuueaaDulr5MiRbNmyhYEDB3ZIfyKn065BjFAISJgUBCKiIBARBYGI0M6DhWa2G6gAaoEad88xswzgdWAQsBuY7O7nPsSPiHSYaGwRXO/u2Y1OUpgD5Lv7UCA/Mi0iMSyIXYMJwMuR1y8D3wugDxGJovYGgQN/M7N1ZnZnpK2fu+8FiDxH564jIXvggQcYMmSIboIqnVJ7g2CUu48EcoGZZtbqM3DM7E4zKzSzwrKysnaWEYzt27fzyCOPAPDrX/+ajz76KC5GRRI5V+0KAncviTyXAm8DVwL7zGwAQOS5tJnPPufuOe6eE6sDgNTV1XHgwAEOHz5MXl4e27dvbxgWPIibr56Nu3d4n9J1tDkIzOw8M0s/+Rr4NrAJWAacvE/5dOCd9hYZhpqaGtavX8/vfvc7evXqxVtvvUVWVhYbN26koKCA73//+x1aT1VVFfPmzevQPqXraM/Xh/2AtyMDhCQBr7n7u2b2T2CJmd0OfAbE5W2Ev/jiiyYH/XzttddISUlh2rRpUe0vPz+fMWPGNPt+SkpKh93yTboejUfQjMOHDzd55eGJEycCOU7Qq1cv7r//foYPH86kSZMAWLlyJQUFBTz00EM88cQTDBo0iB/+8IdR71u6jubGIwj9ngbewn0NwjB9+nSfMGFCkzcLmTx5st9zzz2tWs7atWt906ZN7u5+7733nvUGJz169HDAMzIyPC8vz9euXeu33367Az5p0iQHvGfPnp6Xl+erV6+Oys8pXQ+d6b4GQXv99deprKw8o33jxo185StfafUQ6jt27ODCCy8kKyuLd955h/nz5zc535QpUzh69ChQP3RZ9+7dufzyyxvef/LJJ3n22Wcbps8777xz+XFEWqQgaMKRI0c4ePAgAwYM4MEHH2Tu3LkAdOvW7ZwGTZ02bVrD/I13Jz766COuvvrqhulDhw6dMtpw7969SUtLA+pv+NqvX7/Ab5AiXZuCoAnJycl0796dgQMH0q9fvzYfE2i85bBt27aG18OHDz9lkNLMzEy2bt3KwIEDGTNmDI899hgAvXv35vPPP1cISOAUBM340pe+dMqt2IN07bXX8rWvfY0///nPp7SfDASRoCkIYkDj/X+RMGg8AhFREIiIgkBEUBCICAoCEUFBICIoCEQEBYGIoCAQERQEIoKCQERQEIgICgIRQUEgIigIRAQFgYigIIhpzzzzDIcO6Y7yEjwFQQzbsGEDlZWVuDvXX3992OVIJ6YgaKXa2tqGkYY7UnV1NTU1Nbz//vuMHTuW2traDq9BOj8FQSvNnj2bw4cPR2VZNTU1Td43oa6ujiNHjjQ8jh07xkUXXURycjJ1dXWsWrWKWbNmRaUGkcY0eGkrPfnkk1FZTnV1NYsXL2bNmjU89NBDXHTRRaSmpuLuFBQU8M1vfrPZz6anp3PZZZdFpQ6RxnTvww703nvv8fWvf53evXs3tM2dO5eRI0dSXV3NhAkTmvzcfffdx8KFC/ntb3/Lj3/8444qVzoh3fswZAsXLvTU1FR/4IEHmryn4tkex44d82XLloX9I0gnQDP3PtQxgg4yevRoPvjgA2644YYW5508eTLr169n/PjxvP322yQnJ3PTTTd1QJXSVWnXoIPV1tayatUqxo8f3+T7o0ePZvny5fTo0YOKigrS0tJIStKhHImO5nYNtEXQwRITExk7diyvvfYaSUlJDX/k3bt3p7Kykvz8fHr06AHUHxxUCEhHUBCEICEhgby8PKqrq6murmbcuHEcOnSIlJQUunXrFnZ50gXpv5sY8O6774ZdgnRx2iIQkeCCwMzGm9k2M9tpZnOC6kdE2i+QIDCzROB/gFwgE8gzs8wg+hKR9gtqi+BKYKe7f+zuVcBioOnT5kQkdEEFwQXAnkbTxZG2BmZ2p5kVmllhWVlZQGWISGsE9a2BNdF2yplL7v4c8ByAmZWZ2VFgf0D1BKEP8VNvPNUKqjdIFzXVGFQQFAMDG01fCJQ0N7O79zWzwqbOeIpV8VRvPNUKqjcMQe0a/BMYamYXm1kyMAVYFlBfItJOgWwRuHuNmc0CVgCJwIvuvjmIvkSk/QI7s9DdlwPLz+EjzwVVS0Diqd54qhVUb4eLiasPRSRcOsVYRBQEIhIDQRAP1ySY2W4z+7eZbTCzwkhbhpmtNLMdkedeIdb3opmVmtmmRm3N1mdmD0fW9zYzGxcj9f7SzD6PrOMNZnZjLNRrZgPN7D0z22pmm83s3kh7zK7fNmlq/LKOelD/jcIu4BIgGdgIZIZZUzN17gb6nNb2ODAn8noO8FiI9V0DjAQ2tVQf9dd+bARSgIsj6z8xBur9JfBAE/OGWi8wABgZeZ0ObI/UFLPrty2PsLcI4vmahAnAy5HXLwPfC6sQd38fOHhac3P1TQAWu/sJd/8E2En9v0OHaabe5oRar7vvdfd/RV5XAFupP10+ZtdvW4QdBC1ekxAjHPibma0zszsjbf3cfS/U/7IA54dWXdOaqy+W1/ksMyuK7Dqc3NSOmXrNbBBwOVBAfK7fZoUdBC1ekxAjRrn7SOovq55pZteEXVA7xOo6fxYYDGQDe4H5kfaYqNfMegBvAve5e/nZZm2iLRbW71mFHQTndE1CWNy9JPJcCrxN/abePjMbABB5Lg2vwiY1V19MrnN33+fute5eBzzP/29Oh16vmXWjPgQWuftbkea4Wr8tCTsIYv6aBDM7z8zST74Gvg1sor7O6ZHZpgPvhFNhs5qrbxkwxcxSzOxiYCjwYQj1neLkH1XEROrXMYRcr5kZ8AKw1d2favRWXK3fFoV9tBK4kfojsbuAn4ddTxP1XUL9UeCNwOaTNQK9gXxgR+Q5I8Qa/0T95nQ19f8j3X62+oCfR9b3NiA3Rup9Bfg3UET9H9OAWKgXuJr6TfsiYEPkcWMsr9+2PHSKsYiEvmsgIjFAQSAiCgIRURCICAoCEUFBICIoCEQE+D8TCHcWAMjW/wAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.imshow(contact_map[0], cmap='Greys', origin='lower')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The molecular system is homodimeric, thereby the interface is symmetric as it can see in this last plot."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finnally, `molsysmt.contact_map()` can also work with atoms groups. Instead of getting the contact map between CA atoms, lets do it now with the geometric centers of the residues:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 167,
   "metadata": {},
   "outputs": [],
   "source": [
    "atoms_in_residues_chain_0 = msm.get(molecular_system, target='group',\n",
    "                                    selection=\"molecule_type=='protein' and chain_index==0\", atom_index=True)\n",
    "atoms_in_residues_chain_1 = msm.get(molecular_system, target='group',\n",
    "                                    selection=\"molecule_type=='protein' and chain_index==1\", atom_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "metadata": {},
   "outputs": [],
   "source": [
    "contact_map = msm.contact_map(molecular_system,\n",
    "                              groups_of_atoms=atoms_in_residues_chain_0, group_behavior='geometric_center',\n",
    "                              groups_of_atoms_2=atoms_in_residues_chain_1, group_behavior_2='geometric_center',\n",
    "                              threshold=1.2*puw.unit('nm'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 169,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.imshow(contact_map[0], cmap='Greys', origin='lower')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
