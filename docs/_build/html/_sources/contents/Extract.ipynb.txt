{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext autoreload\n",
    "%autoreload 2"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Extracting a molecular subsystem"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## How to extract a molecular subsystem"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3cb8898ecae14fcd9a56ba51429d034b",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import molsysmt as msm"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "molecular_system = msm.convert(msm.demo_systems.files['1sux.mmtf'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_eb5b2_\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >index</th>        <th class=\"col_heading level0 col1\" >name</th>        <th class=\"col_heading level0 col2\" >type</th>        <th class=\"col_heading level0 col3\" >n atoms</th>        <th class=\"col_heading level0 col4\" >n groups</th>        <th class=\"col_heading level0 col5\" >n components</th>        <th class=\"col_heading level0 col6\" >n chains</th>        <th class=\"col_heading level0 col7\" >n molecules</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_eb5b2_row0_col0\" class=\"data row0 col0\" >0</td>\n",
       "                        <td id=\"T_eb5b2_row0_col1\" class=\"data row0 col1\" >Triosephosphate isomerase, glycosomal</td>\n",
       "                        <td id=\"T_eb5b2_row0_col2\" class=\"data row0 col2\" >protein</td>\n",
       "                        <td id=\"T_eb5b2_row0_col3\" class=\"data row0 col3\" >3831</td>\n",
       "                        <td id=\"T_eb5b2_row0_col4\" class=\"data row0 col4\" >500</td>\n",
       "                        <td id=\"T_eb5b2_row0_col5\" class=\"data row0 col5\" >2</td>\n",
       "                        <td id=\"T_eb5b2_row0_col6\" class=\"data row0 col6\" >2</td>\n",
       "                        <td id=\"T_eb5b2_row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                                <td id=\"T_eb5b2_row1_col0\" class=\"data row1 col0\" >1</td>\n",
       "                        <td id=\"T_eb5b2_row1_col1\" class=\"data row1 col1\" >SULFATE ION</td>\n",
       "                        <td id=\"T_eb5b2_row1_col2\" class=\"data row1 col2\" >cosolute</td>\n",
       "                        <td id=\"T_eb5b2_row1_col3\" class=\"data row1 col3\" >35</td>\n",
       "                        <td id=\"T_eb5b2_row1_col4\" class=\"data row1 col4\" >7</td>\n",
       "                        <td id=\"T_eb5b2_row1_col5\" class=\"data row1 col5\" >7</td>\n",
       "                        <td id=\"T_eb5b2_row1_col6\" class=\"data row1 col6\" >7</td>\n",
       "                        <td id=\"T_eb5b2_row1_col7\" class=\"data row1 col7\" >7</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                                <td id=\"T_eb5b2_row2_col0\" class=\"data row2 col0\" >2</td>\n",
       "                        <td id=\"T_eb5b2_row2_col1\" class=\"data row2 col1\" >3-(2-BENZOTHIAZOLYLTHIO)-1-PROPANESULFONIC ACID</td>\n",
       "                        <td id=\"T_eb5b2_row2_col2\" class=\"data row2 col2\" >small_molecule</td>\n",
       "                        <td id=\"T_eb5b2_row2_col3\" class=\"data row2 col3\" >17</td>\n",
       "                        <td id=\"T_eb5b2_row2_col4\" class=\"data row2 col4\" >1</td>\n",
       "                        <td id=\"T_eb5b2_row2_col5\" class=\"data row2 col5\" >1</td>\n",
       "                        <td id=\"T_eb5b2_row2_col6\" class=\"data row2 col6\" >1</td>\n",
       "                        <td id=\"T_eb5b2_row2_col7\" class=\"data row2 col7\" >1</td>\n",
       "            </tr>\n",
       "            <tr>\n",
       "                                <td id=\"T_eb5b2_row3_col0\" class=\"data row3 col0\" >3</td>\n",
       "                        <td id=\"T_eb5b2_row3_col1\" class=\"data row3 col1\" >water</td>\n",
       "                        <td id=\"T_eb5b2_row3_col2\" class=\"data row3 col2\" >water</td>\n",
       "                        <td id=\"T_eb5b2_row3_col3\" class=\"data row3 col3\" >374</td>\n",
       "                        <td id=\"T_eb5b2_row3_col4\" class=\"data row3 col4\" >374</td>\n",
       "                        <td id=\"T_eb5b2_row3_col5\" class=\"data row3 col5\" >374</td>\n",
       "                        <td id=\"T_eb5b2_row3_col6\" class=\"data row3 col6\" >2</td>\n",
       "                        <td id=\"T_eb5b2_row3_col7\" class=\"data row3 col7\" >374</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f72cf1974d0>"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(molecular_system, target='entity')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "small_molecule = msm.extract(molecular_system, selection='molecule_type==\"small_molecule\"')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style  type=\"text/css\" >\n",
       "</style><table id=\"T_a1a46_\" ><thead>    <tr>        <th class=\"col_heading level0 col0\" >form</th>        <th class=\"col_heading level0 col1\" >n_atoms</th>        <th class=\"col_heading level0 col2\" >n_groups</th>        <th class=\"col_heading level0 col3\" >n_components</th>        <th class=\"col_heading level0 col4\" >n_chains</th>        <th class=\"col_heading level0 col5\" >n_molecules</th>        <th class=\"col_heading level0 col6\" >n_entities</th>        <th class=\"col_heading level0 col7\" >n_frames</th>    </tr></thead><tbody>\n",
       "                <tr>\n",
       "                                <td id=\"T_a1a46_row0_col0\" class=\"data row0 col0\" >molsysmt.MolSys</td>\n",
       "                        <td id=\"T_a1a46_row0_col1\" class=\"data row0 col1\" >17</td>\n",
       "                        <td id=\"T_a1a46_row0_col2\" class=\"data row0 col2\" >1</td>\n",
       "                        <td id=\"T_a1a46_row0_col3\" class=\"data row0 col3\" >1</td>\n",
       "                        <td id=\"T_a1a46_row0_col4\" class=\"data row0 col4\" >1</td>\n",
       "                        <td id=\"T_a1a46_row0_col5\" class=\"data row0 col5\" >1</td>\n",
       "                        <td id=\"T_a1a46_row0_col6\" class=\"data row0 col6\" >1</td>\n",
       "                        <td id=\"T_a1a46_row0_col7\" class=\"data row0 col7\" >1</td>\n",
       "            </tr>\n",
       "    </tbody></table>"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7f729470c910>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "msm.info(small_molecule)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "- Include here the extraction of files. File to files and file to other forms."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
